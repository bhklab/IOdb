[{"/Users/minorunakano/Documents/GitHub/IOdb/client/src/Components/Diagram/VolcanoPlot.js":"1","/Users/minorunakano/Documents/GitHub/IOdb/client/src/Components/Explore/Explore.js":"2","/Users/minorunakano/Documents/GitHub/IOdb/client/src/index.js":"3","/Users/minorunakano/Documents/GitHub/IOdb/client/src/styles/GlobalStyles.js":"4","/Users/minorunakano/Documents/GitHub/IOdb/client/src/Components/index.js":"5","/Users/minorunakano/Documents/GitHub/IOdb/client/src/styles/colors.js":"6","/Users/minorunakano/Documents/GitHub/IOdb/client/src/Components/Home/Home.js":"7","/Users/minorunakano/Documents/GitHub/IOdb/client/src/Components/Diagram/ForestPlot.js":"8","/Users/minorunakano/Documents/GitHub/IOdb/client/src/example_output/sample-output.js":"9","/Users/minorunakano/Documents/GitHub/IOdb/client/src/Components/Navigation/Navigation.js":"10","/Users/minorunakano/Documents/GitHub/IOdb/client/src/styles/NavigationStyles.js":"11","/Users/minorunakano/Documents/GitHub/IOdb/client/src/Components/Diagram/ForestPlot2.js":"12","/Users/minorunakano/Documents/GitHub/IOdb/client/src/Components/UtilComponents/LinkButton.js":"13"},{"size":4922,"mtime":1610483688000,"results":"14","hashOfConfig":"15"},{"size":3970,"mtime":1610466830000,"results":"16","hashOfConfig":"15"},{"size":478,"mtime":1606324486000,"results":"17","hashOfConfig":"15"},{"size":987,"mtime":1610141791000,"results":"18","hashOfConfig":"15"},{"size":164,"mtime":1609876112000,"results":"19","hashOfConfig":"15"},{"size":163,"mtime":1610471503000,"results":"20","hashOfConfig":"15"},{"size":1856,"mtime":1610134458000,"results":"21","hashOfConfig":"15"},{"size":5737,"mtime":1610130143000,"results":"22","hashOfConfig":"15"},{"size":5636,"mtime":1609876112000,"results":"23","hashOfConfig":"15"},{"size":864,"mtime":1606331822000,"results":"24","hashOfConfig":"15"},{"size":858,"mtime":1606332265000,"results":"25","hashOfConfig":"15"},{"size":7542,"mtime":1610135247000,"results":"26","hashOfConfig":"15"},{"size":1098,"mtime":1606335213000,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"iqoaeg",{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/minorunakano/Documents/GitHub/IOdb/client/src/Components/Diagram/VolcanoPlot.js",["56"],"/Users/minorunakano/Documents/GitHub/IOdb/client/src/Components/Explore/Explore.js",["57"],"/Users/minorunakano/Documents/GitHub/IOdb/client/src/index.js",[],["58","59"],"/Users/minorunakano/Documents/GitHub/IOdb/client/src/styles/GlobalStyles.js",[],"/Users/minorunakano/Documents/GitHub/IOdb/client/src/Components/index.js",[],"/Users/minorunakano/Documents/GitHub/IOdb/client/src/styles/colors.js",[],"/Users/minorunakano/Documents/GitHub/IOdb/client/src/Components/Home/Home.js",[],"/Users/minorunakano/Documents/GitHub/IOdb/client/src/Components/Diagram/ForestPlot.js",["60","61","62","63","64","65","66"],"import React from \"react\";\nimport Layout from '../UtilComponents/Layout';\nimport styled from 'styled-components';\nimport studies from \"../../example_output/sample-output.js\";\nimport * as d3 from 'd3';\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport Button from \"react-bootstrap/Button\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\n\n\nconst StyledHome = styled.div`\n    width: 100%;\n    height: 100%;\n    margin-top: 40px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`;\n\n\nconst initial = {\n  svgWidth: 700,\n  svgHight: 700,\n  edgeSize: 10,\n  fontSize: 9,\n  xAxeMargin: 30,\n  topMargin: 20,\n  leftMargin: 200\n}\n\n/***\n * Get the dataset (studies + overall value)\n * keep the studies in data and the overall\n **/\nconst dataset = studies\n\n\nconst data = () => {\n  return dataset.filter((element) => {\n    return element.study != \"Meta-analysis\";\n  })\n}\n\n\nconst overall = studies[studies.length - 1]\n\n\n/***\n * Find the min and max value of all studies for adjusting the scales and axes\n ***/\n\nconst min_low = () => {\n  return Math.min(...dataset.map(function (d) {\n    return Number(d[\"95CI_low\"])\n  }))\n}\n\nconst max_high = () => {\n  return Math.max(...dataset.map(function (d) {\n    return Number(d[\"95CI_high\"])\n  }))\n}\n\n/***\n * Functions for scaling X and Y\n ***/\n\nconst xScale = (d) => {\n  const scale = d3\n    .scaleLinear()\n    .domain([min_low(), max_high()])\n    .range([initial.leftMargin, initial.leftMargin + 400])\n  return scale(d)\n}\n\nconst yScale = (d) => {\n  const scale = d3\n    .scaleLinear()\n    .domain([0, dataset.length + 1])\n    .range([20, 460])\n  return scale(d)\n}\n\n/***\n * Find the overall rhombus points on svg\n ***/\n\nconst polygonPoints = () => {\n  return (xScale(Number(overall[\"95CI_low\"])) + \", \" + yScale(dataset.length) + \" \" +\n    xScale(Number(overall[\"coef\"])) + \", \" + (yScale(dataset.length) - (initial.edgeSize / 2)) + \" \" +\n    xScale(Number(overall[\"95CI_high\"])) + \", \" + yScale(dataset.length) + \" \" +\n    xScale(Number(overall[\"coef\"])) + \", \" + (yScale(dataset.length) + (initial.edgeSize / 2)) + \" \")\n}\n\n/***\n *\n ***/\n\nconst xAxeTag = [min_low(), overall.coef, 1, max_high()];\n\n/***\n * Mouseover data point group (text+interval+rect)\n */\nconst renderTooltip = (d) => (\n  < div\nstyle = {\n{\n  fontSize:'12px', backgroundColor\n:\n  'rgba(242,255,223,0.95)', padding\n:\n  '2px 10px', color\n:\n  'rgb(7,28,44)', borderRadius\n:\n  3\n}\n}>\n{\n  studies[d].study + \" (\" + studies[d].Primary + \"; \" + studies[d].Sequencing + \"): \" +\n  \"N=\" + studies[d].N + \"; coef=\" + studies[d].coef + \"; P-value=\" + Number(studies[d].Pval).toFixed(4)\n}\n</div>\n)\n;\n\n/***\n * Creating the plot\n ***/\n\nconst ForestPlot = () => {\n  return (\n    <StyledHome>\n    < svg\n  height = \"800\"\n  width = \"800\" >\n    {/*Creating axes*/}\n    < g >\n    < line\n  id = {\"xAxe\"}\n  x1 = {xScale(min_low()\n)\n  -(initial.leftMargin * 2 / 3)\n}\n  y1 = {yScale(dataset.length + 1\n)\n}\n  x2 = {xScale(max_high()\n)\n  +initial.xAxeMargin\n}\n  y2 = {yScale(dataset.length + 1\n)\n}\n  stroke = \"#0C3544\"\n  strokeWidth = \"2\"\n    />\n    < line\n  id = {\"yAxe\"}\n  x1 = {xScale(1\n)\n}\n  y1 = {yScale( - 2\n)\n}\n  x2 = {xScale(1\n)\n}\n  y2 = {yScale(dataset.length + 1\n)\n}\n  stroke = \"#0C3544\"\n  strokeWidth = \"2\"\n    />\n    <line\n  strokeDasharray = \"3,4\"\n  id = {\"yAxe\"}\n  x1 = {xScale(overall.coef\n)\n}\n  y1 = {yScale( - 2\n)\n}\n  x2 = {xScale(overall.coef\n)\n}\n  y2 = {yScale(dataset.length + 1\n)\n}\n  stroke = \"#EF8020\"\n  strokeWidth = \"1\"\n    />\n    {\n      Object.keys(xAxeTag).map((key, index) =>\n        < text\n      id = {\"xTag-\"+index}\n      key = {key}\n      textAnchor = \"middle\"\n      x = {xScale(xAxeTag[index]\n)\n}\n  y = {yScale(dataset.length + 2\n)\n}\n  fontSize = {initial.fontSize}\n  fontWeight = \"bold\"\n  fill = \"#0C3544\"\n    >\n    {xAxeTag[index]}\n    </text>\n)\n}\n  {\n    Object.keys(xAxeTag).map((key, index) =>\n    <line\n    id = {\"xAxeDash\"+index}\n    key = {key}\n    x1 = {xScale(xAxeTag[index]\n  )\n  }\n    y1 = {yScale(dataset.length + 1\n  )\n    -5\n  }\n    x2 = {xScale(xAxeTag[index]\n  )\n  }\n    y2 = {yScale(dataset.length + 1\n  )\n    +5\n  }\n    stroke = \"#0C3544\"\n    strokeWidth = \"2\"\n      >\n      </line>\n  )\n  }\n</g>\n\n  {/*Creating Data Point*/\n  }\n\n  {\n    Object.keys(data()).map((key, index) =>\n    < React.Fragment >\n    < OverlayTrigger\n    placement = \"right\"\n    overlay = {renderTooltip(index)}\n    delay = {\n    {\n      show: 100, hide\n    :\n      200\n    }\n  }\n  >\n  <g\n    id = {\"datapoint-\" +index}\n    onClick = {() => console.log(index)}>\n    /*Tags*/\n  <text\n    id = {\"tag-\"+index}\n    key = {key}\n    x = {initial.leftMargin / 3}\n    y = {yScale(index) + 2\n  }\n    fontSize = {initial.fontSize}\n    fill = \"#0C3544\"\n      >\n      {dataset[key].study}({dataset[key].Primary}, {dataset[key].Sequencing})\n      </text>\n\n      /* Intervals */\n      < line\n    id = {\"interval-\"+index}\n    x1 = {xScale(Number(dataset[key][\"95CI_low\"])\n  )\n  }\n    y1 = {yScale(index)}\n    x2 = {xScale(Number(dataset[key][\"95CI_high\"])\n  )\n  }\n    y2 = {yScale(index)}\n    stroke = \"#73848E\"\n    strokeWidth = \"2\" >\n\n      <title>\n      95\n    CI:({data()[key][\"95CI_low\"]}, {data()[key][\"95CI_high\"]})\n    </title>\n    </line>\n\n    /*Data point marks*/\n    <rect\n    id = {\"datPoint-\" +index}\n    x = {xScale(Number(dataset[key][\"coef\"])\n  )\n    -initial.edgeSize / 2\n  }\n    y = {yScale(index) - initial.edgeSize / 2\n  }\n    width = {initial.edgeSize}\n    height = {initial.edgeSize}\n    fill = \"#236e96\" >\n      </rect>\n      </g>\n      </OverlayTrigger>\n      </React.Fragment>\n  )\n  }\n  {/*Creating Diamond*/\n  }\n<polygon\n  id = \"diamond\"\n  points = {polygonPoints()}\n  fill = \"#F2950B\"\n    >\n    </polygon>\n    </svg>\n    </StyledHome>\n)\n}\n\nexport default ForestPlot;\n","/Users/minorunakano/Documents/GitHub/IOdb/client/src/example_output/sample-output.js",[],"/Users/minorunakano/Documents/GitHub/IOdb/client/src/Components/Navigation/Navigation.js",[],"/Users/minorunakano/Documents/GitHub/IOdb/client/src/styles/NavigationStyles.js",[],"/Users/minorunakano/Documents/GitHub/IOdb/client/src/Components/Diagram/ForestPlot2.js",[],"/Users/minorunakano/Documents/GitHub/IOdb/client/src/Components/UtilComponents/LinkButton.js",[],{"ruleId":"67","severity":1,"message":"68","line":30,"column":8,"nodeType":"69","endLine":30,"endColumn":10,"suggestions":"70"},{"ruleId":"71","severity":1,"message":"72","line":31,"column":7,"nodeType":"73","messageId":"74","endLine":31,"endColumn":23},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"71","severity":1,"message":"79","line":2,"column":8,"nodeType":"73","messageId":"74","endLine":2,"endColumn":14},{"ruleId":"71","severity":1,"message":"80","line":6,"column":8,"nodeType":"73","messageId":"74","endLine":6,"endColumn":15},{"ruleId":"71","severity":1,"message":"81","line":7,"column":8,"nodeType":"73","messageId":"74","endLine":7,"endColumn":14},{"ruleId":"82","severity":1,"message":"83","line":41,"column":26,"nodeType":"84","messageId":"85","endLine":41,"endColumn":28},{"ruleId":"86","severity":1,"message":"87","line":260,"column":42,"nodeType":"88","endLine":262,"endColumn":3},{"ruleId":"86","severity":1,"message":"87","line":272,"column":14,"nodeType":"88","endLine":275,"endColumn":7},{"ruleId":"86","severity":1,"message":"87","line":292,"column":12,"nodeType":"88","endLine":295,"endColumn":5},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["89"],"no-unused-vars","'signatureOptions' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["90"],"no-negated-in-lhs",["91"],"'Layout' is defined but never used.","'Tooltip' is defined but never used.","'Button' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal",{"desc":"92","fix":"93"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [data]",{"range":"94","text":"95"},[862,864],"[data]"]