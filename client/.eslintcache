[{"/Users/mac/Documents/github/IOdb/client/src/index.js":"1","/Users/mac/Documents/github/IOdb/client/src/App.js":"2","/Users/mac/Documents/github/IOdb/client/src/reportWebVitals.js":"3","/Users/mac/Documents/github/IOdb/client/src/Components/index.js":"4","/Users/mac/Documents/github/IOdb/client/src/styles/GlobalStyles.js":"5","/Users/mac/Documents/github/IOdb/client/src/styles/colors.js":"6","/Users/mac/Documents/github/IOdb/client/src/Components/Home/Home.js":"7","/Users/mac/Documents/github/IOdb/client/src/Components/Explore/Explore.js":"8","/Users/mac/Documents/github/IOdb/client/src/Components/Diagram/ForestPlot.js":"9","/Users/mac/Documents/github/IOdb/client/src/example_output/sample-output.js":"10","/Users/mac/Documents/github/IOdb/client/src/Components/Diagram/VolcanoPlot.js":"11","/Users/mac/Documents/github/IOdb/client/src/Components/Diagram/ForestPlot2.js":"12","/Users/mac/Documents/github/IOdb/client/src/Components/UtilComponents/LinkButton.js":"13","/Users/mac/Documents/github/IOdb/client/src/Components/UtilComponents/Layout.js":"14","/Users/mac/Documents/github/IOdb/client/src/Components/UtilComponents/ActionButton.js":"15","/Users/mac/Documents/github/IOdb/client/src/Components/Navigation/Navigation.js":"16","/Users/mac/Documents/github/IOdb/client/src/Components/Footer/Footer.js":"17","/Users/mac/Documents/github/IOdb/client/src/styles/NavigationStyles.js":"18","/Users/mac/Documents/github/IOdb/client/src/Components/Explore/VolcanoPlotInput.js":"19","/Users/mac/Documents/github/IOdb/client/src/Components/Diagram/ForestPlot3.js":"20"},{"size":474,"mtime":1611606160577,"results":"21","hashOfConfig":"22"},{"size":504,"mtime":1611610036159,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1608246198645,"results":"24","hashOfConfig":"22"},{"size":164,"mtime":1610567163079,"results":"25","hashOfConfig":"22"},{"size":987,"mtime":1610567163080,"results":"26","hashOfConfig":"22"},{"size":222,"mtime":1611615486298,"results":"27","hashOfConfig":"22"},{"size":2398,"mtime":1611605573640,"results":"28","hashOfConfig":"22"},{"size":5425,"mtime":1611619166386,"results":"29","hashOfConfig":"22"},{"size":5737,"mtime":1610567163078,"results":"30","hashOfConfig":"22"},{"size":5636,"mtime":1610567163080,"results":"31","hashOfConfig":"22"},{"size":7672,"mtime":1611616629599,"results":"32","hashOfConfig":"22"},{"size":7991,"mtime":1611004839525,"results":"33","hashOfConfig":"22"},{"size":1098,"mtime":1608246198644,"results":"34","hashOfConfig":"22"},{"size":723,"mtime":1608246198644,"results":"35","hashOfConfig":"22"},{"size":1933,"mtime":1611074724526,"results":"36","hashOfConfig":"22"},{"size":939,"mtime":1611610109178,"results":"37","hashOfConfig":"22"},{"size":1482,"mtime":1608246198643,"results":"38","hashOfConfig":"22"},{"size":858,"mtime":1608246198645,"results":"39","hashOfConfig":"22"},{"size":5642,"mtime":1611609029492,"results":"40","hashOfConfig":"22"},{"size":9232,"mtime":1611618569143,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"uuqqq1",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mac/Documents/github/IOdb/client/src/index.js",[],["86","87"],"/Users/mac/Documents/github/IOdb/client/src/App.js",[],"/Users/mac/Documents/github/IOdb/client/src/reportWebVitals.js",[],"/Users/mac/Documents/github/IOdb/client/src/Components/index.js",[],"/Users/mac/Documents/github/IOdb/client/src/styles/GlobalStyles.js",[],"/Users/mac/Documents/github/IOdb/client/src/styles/colors.js",[],"/Users/mac/Documents/github/IOdb/client/src/Components/Home/Home.js",[],"/Users/mac/Documents/github/IOdb/client/src/Components/Explore/Explore.js",["88"],"/Users/mac/Documents/github/IOdb/client/src/Components/Diagram/ForestPlot.js",["89","90","91","92","93","94","95"],"import React from \"react\";\nimport Layout from '../UtilComponents/Layout';\nimport styled from 'styled-components';\nimport studies from \"../../example_output/sample-output.js\";\nimport * as d3 from 'd3';\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport Button from \"react-bootstrap/Button\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\n\n\nconst StyledHome = styled.div`\n    width: 100%;\n    height: 100%;\n    margin-top: 40px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`;\n\n\nconst initial = {\n  svgWidth: 700,\n  svgHight: 700,\n  edgeSize: 10,\n  fontSize: 9,\n  xAxeMargin: 30,\n  topMargin: 20,\n  leftMargin: 200\n}\n\n/***\n * Get the dataset (studies + overall value)\n * keep the studies in data and the overall\n **/\nconst dataset = studies\n\n\nconst data = () => {\n  return dataset.filter((element) => {\n    return element.study != \"Meta-analysis\";\n  })\n}\n\n\nconst overall = studies[studies.length - 1]\n\n\n/***\n * Find the min and max value of all studies for adjusting the scales and axes\n ***/\n\nconst min_low = () => {\n  return Math.min(...dataset.map(function (d) {\n    return Number(d[\"95CI_low\"])\n  }))\n}\n\nconst max_high = () => {\n  return Math.max(...dataset.map(function (d) {\n    return Number(d[\"95CI_high\"])\n  }))\n}\n\n/***\n * Functions for scaling X and Y\n ***/\n\nconst xScale = (d) => {\n  const scale = d3\n    .scaleLinear()\n    .domain([min_low(), max_high()])\n    .range([initial.leftMargin, initial.leftMargin + 400])\n  return scale(d)\n}\n\nconst yScale = (d) => {\n  const scale = d3\n    .scaleLinear()\n    .domain([0, dataset.length + 1])\n    .range([20, 460])\n  return scale(d)\n}\n\n/***\n * Find the overall rhombus points on svg\n ***/\n\nconst polygonPoints = () => {\n  return (xScale(Number(overall[\"95CI_low\"])) + \", \" + yScale(dataset.length) + \" \" +\n    xScale(Number(overall[\"coef\"])) + \", \" + (yScale(dataset.length) - (initial.edgeSize / 2)) + \" \" +\n    xScale(Number(overall[\"95CI_high\"])) + \", \" + yScale(dataset.length) + \" \" +\n    xScale(Number(overall[\"coef\"])) + \", \" + (yScale(dataset.length) + (initial.edgeSize / 2)) + \" \")\n}\n\n/***\n *\n ***/\n\nconst xAxeTag = [min_low(), overall.coef, 1, max_high()];\n\n/***\n * Mouseover data point group (text+interval+rect)\n */\nconst renderTooltip = (d) => (\n  < div\nstyle = {\n{\n  fontSize:'12px', backgroundColor\n:\n  'rgba(242,255,223,0.95)', padding\n:\n  '2px 10px', color\n:\n  'rgb(7,28,44)', borderRadius\n:\n  3\n}\n}>\n{\n  studies[d].study + \" (\" + studies[d].Primary + \"; \" + studies[d].Sequencing + \"): \" +\n  \"N=\" + studies[d].N + \"; coef=\" + studies[d].coef + \"; P-value=\" + Number(studies[d].Pval).toFixed(4)\n}\n</div>\n)\n;\n\n/***\n * Creating the plot\n ***/\n\nconst ForestPlot = () => {\n  return (\n    <StyledHome>\n    < svg\n  height = \"800\"\n  width = \"800\" >\n    {/*Creating axes*/}\n    < g >\n    < line\n  id = {\"xAxe\"}\n  x1 = {xScale(min_low()\n)\n  -(initial.leftMargin * 2 / 3)\n}\n  y1 = {yScale(dataset.length + 1\n)\n}\n  x2 = {xScale(max_high()\n)\n  +initial.xAxeMargin\n}\n  y2 = {yScale(dataset.length + 1\n)\n}\n  stroke = \"#0C3544\"\n  strokeWidth = \"2\"\n    />\n    < line\n  id = {\"yAxe\"}\n  x1 = {xScale(1\n)\n}\n  y1 = {yScale( - 2\n)\n}\n  x2 = {xScale(1\n)\n}\n  y2 = {yScale(dataset.length + 1\n)\n}\n  stroke = \"#0C3544\"\n  strokeWidth = \"2\"\n    />\n    <line\n  strokeDasharray = \"3,4\"\n  id = {\"yAxe\"}\n  x1 = {xScale(overall.coef\n)\n}\n  y1 = {yScale( - 2\n)\n}\n  x2 = {xScale(overall.coef\n)\n}\n  y2 = {yScale(dataset.length + 1\n)\n}\n  stroke = \"#EF8020\"\n  strokeWidth = \"1\"\n    />\n    {\n      Object.keys(xAxeTag).map((key, index) =>\n        < text\n      id = {\"xTag-\"+index}\n      key = {key}\n      textAnchor = \"middle\"\n      x = {xScale(xAxeTag[index]\n)\n}\n  y = {yScale(dataset.length + 2\n)\n}\n  fontSize = {initial.fontSize}\n  fontWeight = \"bold\"\n  fill = \"#0C3544\"\n    >\n    {xAxeTag[index]}\n    </text>\n)\n}\n  {\n    Object.keys(xAxeTag).map((key, index) =>\n    <line\n    id = {\"xAxeDash\"+index}\n    key = {key}\n    x1 = {xScale(xAxeTag[index]\n  )\n  }\n    y1 = {yScale(dataset.length + 1\n  )\n    -5\n  }\n    x2 = {xScale(xAxeTag[index]\n  )\n  }\n    y2 = {yScale(dataset.length + 1\n  )\n    +5\n  }\n    stroke = \"#0C3544\"\n    strokeWidth = \"2\"\n      >\n      </line>\n  )\n  }\n</g>\n\n  {/*Creating Data Point*/\n  }\n\n  {\n    Object.keys(data()).map((key, index) =>\n    < React.Fragment >\n    < OverlayTrigger\n    placement = \"right\"\n    overlay = {renderTooltip(index)}\n    delay = {\n    {\n      show: 100, hide\n    :\n      200\n    }\n  }\n  >\n  <g\n    id = {\"datapoint-\" +index}\n    onClick = {() => console.log(index)}>\n    /*Tags*/\n  <text\n    id = {\"tag-\"+index}\n    key = {key}\n    x = {initial.leftMargin / 3}\n    y = {yScale(index) + 2\n  }\n    fontSize = {initial.fontSize}\n    fill = \"#0C3544\"\n      >\n      {dataset[key].study}({dataset[key].Primary}, {dataset[key].Sequencing})\n      </text>\n\n      /* Intervals */\n      < line\n    id = {\"interval-\"+index}\n    x1 = {xScale(Number(dataset[key][\"95CI_low\"])\n  )\n  }\n    y1 = {yScale(index)}\n    x2 = {xScale(Number(dataset[key][\"95CI_high\"])\n  )\n  }\n    y2 = {yScale(index)}\n    stroke = \"#73848E\"\n    strokeWidth = \"2\" >\n\n      <title>\n      95\n    CI:({data()[key][\"95CI_low\"]}, {data()[key][\"95CI_high\"]})\n    </title>\n    </line>\n\n    /*Data point marks*/\n    <rect\n    id = {\"datPoint-\" +index}\n    x = {xScale(Number(dataset[key][\"coef\"])\n  )\n    -initial.edgeSize / 2\n  }\n    y = {yScale(index) - initial.edgeSize / 2\n  }\n    width = {initial.edgeSize}\n    height = {initial.edgeSize}\n    fill = \"#236e96\" >\n      </rect>\n      </g>\n      </OverlayTrigger>\n      </React.Fragment>\n  )\n  }\n  {/*Creating Diamond*/\n  }\n<polygon\n  id = \"diamond\"\n  points = {polygonPoints()}\n  fill = \"#F2950B\"\n    >\n    </polygon>\n    </svg>\n    </StyledHome>\n)\n}\n\nexport default ForestPlot;\n","/Users/mac/Documents/github/IOdb/client/src/example_output/sample-output.js",[],"/Users/mac/Documents/github/IOdb/client/src/Components/Diagram/VolcanoPlot.js",["96","97"],"/Users/mac/Documents/github/IOdb/client/src/Components/Diagram/ForestPlot2.js",[],"/Users/mac/Documents/github/IOdb/client/src/Components/UtilComponents/LinkButton.js",[],["98","99"],"/Users/mac/Documents/github/IOdb/client/src/Components/UtilComponents/Layout.js",[],"/Users/mac/Documents/github/IOdb/client/src/Components/UtilComponents/ActionButton.js",["100"],"import React, {useState, useEffect} from 'react';\nimport styled from 'styled-components';\nimport colors from '../../styles/colors';\n\nconst StyledButton = styled.button`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 5px;\n    border: none;\n    font-weight: bold;\n    letter-spacing: 2px;\n    width: ${props => props.style.width ? props.style.width : '45%'};\n    height: ${props => props.style.height ? props.style.height : '80px'};\n    background-color: ${props => props.disabled ? colors.light_gray : props.color.background};\n    font-size: ${props => props.style.fontSize ? props.style.fontSize : '20px'};\n    color: ${props => props.style.fontColor ? props.style.fontColor : '#ffffff'};\n    cursor: ${props => props.disabled ? 'default' : 'pointer'};\n\n    :hover {\n        background-color: ${ props => props.disabled ? colors.light_gray : props.color.hover };\n        outline: ${ props => props.color.hover };\n    }\n`;\n\nconst ActionButton = (props) => {\n    const {onClick, text, style} = props;\n    const [colorScheme, setColorScheme] = useState({\n        background: colors.blue,\n        hover: colors.hover_blue,\n        ready: false\n    });\n\n    useEffect(() =>{\n        switch(props.type) {\n            case 'reset':\n                setColorScheme({\n                    background: colors.red,\n                    hover: colors.hover_red,\n                    ready: true\n                });\n                break;\n            default:\n                setColorScheme({...colorScheme, ready: true});\n                break;\n        }\n    }, []);\n\n    return (\n        <React.Fragment>\n            {\n                colorScheme.ready &&\n                <StyledButton onClick={onClick} color={colorScheme} style={style} disabled={props.disabled} >\n                    {text}\n                </StyledButton>\n            }\n        </React.Fragment>\n    );\n}\n\nexport default ActionButton;","/Users/mac/Documents/github/IOdb/client/src/Components/Navigation/Navigation.js",["101"],"/Users/mac/Documents/github/IOdb/client/src/Components/Footer/Footer.js",[],"/Users/mac/Documents/github/IOdb/client/src/styles/NavigationStyles.js",[],"/Users/mac/Documents/github/IOdb/client/src/Components/Explore/VolcanoPlotInput.js",[],"/Users/mac/Documents/github/IOdb/client/src/Components/Diagram/ForestPlot3.js",["102"],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":78,"column":8,"nodeType":"109","endLine":78,"endColumn":10,"suggestions":"110"},{"ruleId":"111","severity":1,"message":"112","line":2,"column":8,"nodeType":"113","messageId":"114","endLine":2,"endColumn":14},{"ruleId":"111","severity":1,"message":"115","line":6,"column":8,"nodeType":"113","messageId":"114","endLine":6,"endColumn":15},{"ruleId":"111","severity":1,"message":"116","line":7,"column":8,"nodeType":"113","messageId":"114","endLine":7,"endColumn":14},{"ruleId":"117","severity":1,"message":"118","line":41,"column":26,"nodeType":"119","messageId":"120","endLine":41,"endColumn":28},{"ruleId":"121","severity":1,"message":"122","line":260,"column":42,"nodeType":"123","endLine":262,"endColumn":3},{"ruleId":"121","severity":1,"message":"122","line":272,"column":14,"nodeType":"123","endLine":275,"endColumn":7},{"ruleId":"121","severity":1,"message":"122","line":292,"column":12,"nodeType":"123","endLine":295,"endColumn":5},{"ruleId":"107","severity":1,"message":"124","line":44,"column":8,"nodeType":"109","endLine":44,"endColumn":10,"suggestions":"125"},{"ruleId":"107","severity":1,"message":"126","line":57,"column":8,"nodeType":"109","endLine":57,"endColumn":28,"suggestions":"127"},{"ruleId":"103","replacedBy":"128"},{"ruleId":"105","replacedBy":"129"},{"ruleId":"107","severity":1,"message":"130","line":47,"column":8,"nodeType":"109","endLine":47,"endColumn":10,"suggestions":"131"},{"ruleId":"111","severity":1,"message":"132","line":3,"column":8,"nodeType":"113","messageId":"114","endLine":3,"endColumn":12},{"ruleId":"107","severity":1,"message":"133","line":35,"column":8,"nodeType":"109","endLine":35,"endColumn":26,"suggestions":"134"},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getVolcanoPlotData'. Either include it or remove the dependency array.","ArrayExpression",["137"],"no-unused-vars","'Layout' is defined but never used.","Identifier","unusedVar","'Tooltip' is defined but never used.","'Button' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["138"],"React Hook useEffect has missing dependencies: 'data' and 'plotData'. Either include them or remove the dependency array. You can also do a functional update 'setPlotData(p => ...)' if you only need 'plotData' in the 'setPlotData' call.",["139"],["135"],["136"],"React Hook useEffect has missing dependencies: 'colorScheme' and 'props.type'. Either include them or remove the dependency array. You can also do a functional update 'setColorScheme(c => ...)' if you only need 'colorScheme' in the 'setColorScheme' call.",["140"],"'uuid' is defined but never used.","React Hook useEffect has missing dependencies: 'draw' and 'props.meta'. Either include them or remove the dependency array.",["141"],"no-global-assign","no-unsafe-negation",{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},"Update the dependencies array to be: [getVolcanoPlotData]",{"range":"152","text":"153"},"Update the dependencies array to be: [data]",{"range":"154","text":"155"},"Update the dependencies array to be: [data, plotData, selectedPointIndex]",{"range":"156","text":"157"},"Update the dependencies array to be: [colorScheme, props.type]",{"range":"158","text":"159"},"Update the dependencies array to be: [draw, props.meta, props.size.width]",{"range":"160","text":"161"},[2067,2069],"[getVolcanoPlotData]",[1301,1303],"[data]",[1713,1733],"[data, plotData, selectedPointIndex]",[1591,1593],"[colorScheme, props.type]",[840,858],"[draw, props.meta, props.size.width]"]