{"version":3,"sources":["styles/colors.js","styles/NavigationStyles.js","Components/Navigation/Navigation.js","Components/Footer/Footer.js","Components/UtilComponents/Layout.js","Components/UtilComponents/ActionButton.js","Components/Explore/VolcanoPlotInput.js","Components/Diagram/ForestPlot3.js","Components/Diagram/VolcanoPlot.js","Components/Explore/Explore.js","Components/Home/Home.js","example_output/sample-output.js","Components/Diagram/ForestPlot.js","styles/GlobalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["colors","blue","red","hover_blue","hover_red","gray_text","light_gray","StyledNavigation","styled","div","NavigationContent","LogoContainer","StyledLinks","Navigation","alt","src","to","StyledFooter","FooterContent","FooterItem","Footer","className","href","Layout","props","children","Fragment","defaultProps","page","StyledButton","button","style","width","height","disabled","color","background","fontSize","fontColor","hover","ActionButton","onClick","text","useState","ready","colorScheme","setColorScheme","useEffect","type","StyledForm","flexDirection","outcomeOptions","value","label","modelOptions","VolcanoPlotInput","parameters","setParameters","onSubmit","filter","option","outcome","options","onChange","e","model","resetButton","onReset","marginLeft","Container","withSize","console","log","size","draw","dim","initial","dataset","individuals","concat","meta","overall","data","min_low","Math","min","map","d","Number","max_high","max","xScale","d3","domain","range","scale","yScale","length","xAxeTag","effect_size","svg","id","selectAll","remove","attr","canvas","append","Object","keys","forEach","key","index","datapoint","on","study","replace","html","primary_tissue","sequencing","n","pval","toFixed","renderToolTip","removeToolTip","_95ci_low","_95ci_high","Plot","createPlotlyComponent","Plotly","plotId","getForestPlotData","x","y","hovertext","pointColor","pointSize","plotData","setPlotData","item","logPval","click_ids","i","getHoverText","getPointColor","getPointSize","points","point","se","push","pointColors","log10","hoverText","signature","round","i2","pval_i2","showlegend","mode","hoverinfo","marker","name","layout","autosize","paper_bgcolor","plot_bgcolor","orientation","yaxis","ticklen","title","xaxis","zeroline","hovermode","font","family","margin","l","r","t","b","shapes","xref","x0","y0","x1","y1","line","dash","yref","graphDiv","config","responsive","displayModeBar","selectedPoint","pointIndex","onHover","onUnhover","ExploreContainer","PlotContainer","StyledPlotArea","PlotParameters","Explore","volcanoPlotData","setVolcanoPlotData","forestPlotData","setForestPlotData","getVolcanoPlotData","a","axios","post","res","params","window","location","reload","HomeContainer","HomeLogo","AppDescription","HomeInput","Home","displayHome","setDisplayHome","studies","coef","GlobalStyles","createGlobalStyle","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.040626ce.chunk.js","sourcesContent":["const colors = {\n    blue: '#3375B1',\n    red: '#b13336',\n    hover_blue: '#2A6193',\n    hover_red: '#9f2d30',\n    gray_text: '#666666',\n    light_gray: '#999999'\n};\n\nexport default colors;","import styled from 'styled-components';\nimport colors from './colors';\n\nexport const StyledNavigation = styled.div`\n    width: 100%;\n    height: 60px;\n    background-color: ${colors.blue};\n    display: flex;\n    align-items: center;\n`;\n\nexport const NavigationContent = styled.div`\n    width: 85%;\n    max-width: 1500px;\n    height: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    font-size: 14px;\n`\n\nexport const LogoContainer = styled.div`\n    height: 70%;\n    align-items: center;\n    img {\n        height: 100%;\n    }\n`\n\nexport const StyledLinks = styled.div`\n    width: 80%;\n    max-width: 500px;\n    display: flex;\n    justify-content: space-between;\n    padding: 0px 30px;\n    a {\n        color: #ffffff;\n    }\n    a:last-child {\n        margin-right: 0;\n    }\n`","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {StyledNavigation, NavigationContent, LogoContainer, StyledLinks} from '../../styles/NavigationStyles';\n\n/**\n * Component for the navigation with links and logo.\n *\n * @component\n * @example\n *\n */\nconst Navigation = () => {\n    return (\n        <StyledNavigation>\n            <NavigationContent>\n                <LogoContainer>\n                    <img alt='IO.db' src='./images/logos/IOdb-logo-white.png'/>\n                </LogoContainer>\n                <StyledLinks>\n                    <Link to='/'>Home</Link>\n                    <Link to='/'>About</Link>\n                    <Link to='/'>Download</Link>\n                    <Link to='/'>Contact</Link>\n                </StyledLinks>\n            </NavigationContent>\n        </StyledNavigation>\n    );\n};\n\nexport default Navigation;","import React from 'react';\nimport styled from 'styled-components';\nimport colors from '../../styles/colors';\n\nconst StyledFooter = styled.div`\n    position relative;\n    bottom: 0%;\n    width: 100%;\n    height: 44px;\n    display: flex;\n    align-items: center;\n`\n\nconst FooterContent = styled.div`\n    width: 85%;\n    height: 100%;\n    max-width: 1500px;\n    margin-left: auto;\n    margin-right: auto;\n    border-top: 1px solid ${colors.blue};\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n`\n\nconst FooterItem = styled.div`\n    color: ${colors.blue};\n    font-size: 10px;\n    a {\n        color: ${colors.blue};\n    }\n    .divider {\n        margin: 0px 10px;\n    }\n`\n\nconst Footer = () => {\n    return (\n        <StyledFooter>\n            <FooterContent>\n                <FooterItem>\n                    <span className='link'>Terms</span>\n                    <span className='divider'>|</span>\n                    <span className='link'>Privacy</span>\n                    <span className='divider'>|</span>\n                    <span className='link'>Support</span>\n                </FooterItem>\n                <FooterItem>\n                    BHK Lab &#169; 2020-2021\n                </FooterItem>\n                <FooterItem>\n                    <a href=\"https://www.vecteezy.com/free-vector/background\">Background by Vecteezy</a>\n                </FooterItem>\n            </FooterContent>\n        </StyledFooter>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Navigation from '../Navigation/Navigation';\nimport Footer from '../Footer/Footer';\n/**\n * wrapper for every page\n */\nconst Layout = (props) => {\n    const {children} = props;\n    return(\n        <React.Fragment>\n            <Navigation />\n            <main>\n                {children}\n            </main>\n            <Footer />\n        </React.Fragment>\n    );\n};\n\nLayout.propTypes = {\n    /**\n     * Layout's children (components on the page)\n     */\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node,\n    ]),\n};\n  \nLayout.defaultProps = {\n    page: '',\n    children: null,\n};\n\nexport default Layout;","import React, {useState, useEffect} from 'react';\nimport styled from 'styled-components';\nimport colors from '../../styles/colors';\n\nconst StyledButton = styled.button`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 5px;\n    border: none;\n    font-weight: bold;\n    letter-spacing: 2px;\n    width: ${props => props.style.width ? props.style.width : '45%'};\n    height: ${props => props.style.height ? props.style.height : '80px'};\n    background-color: ${props => props.disabled ? colors.light_gray : props.color.background};\n    font-size: ${props => props.style.fontSize ? props.style.fontSize : '20px'};\n    color: ${props => props.style.fontColor ? props.style.fontColor : '#ffffff'};\n    cursor: ${props => props.disabled ? 'default' : 'pointer'};\n\n    :hover {\n        background-color: ${ props => props.disabled ? colors.light_gray : props.color.hover };\n        outline: ${ props => props.color.hover };\n    }\n`;\n\nconst ActionButton = (props) => {\n    const {onClick, text, style} = props;\n    const [colorScheme, setColorScheme] = useState({\n        background: colors.blue,\n        hover: colors.hover_blue,\n        ready: false\n    });\n\n    useEffect(() =>{\n        switch(props.type) {\n            case 'reset':\n                setColorScheme({\n                    background: colors.red,\n                    hover: colors.hover_red,\n                    ready: true\n                });\n                break;\n            default:\n                setColorScheme({...colorScheme, ready: true});\n                break;\n        }\n    }, []);\n\n    return (\n        <React.Fragment>\n            {\n                colorScheme.ready &&\n                <StyledButton onClick={onClick} color={colorScheme} style={style} disabled={props.disabled} >\n                    {text}\n                </StyledButton>\n            }\n        </React.Fragment>\n    );\n}\n\nexport default ActionButton;","import React from 'react';\nimport Select from 'react-select';\nimport styled from 'styled-components';\nimport ActionButton from '../UtilComponents/ActionButton';\n\nconst StyledForm = styled.div`\n    width: ${props => props.flexDirection === 'column' ? '100%' : '70%'};\n    margin-top: 30px;\n    display: flex;\n    flex-direction: ${props => props.flexDirection};\n    align-items: center;\n    justify-content: space-between;\n\n    .formField {\n        width: ${props => props.flexDirection === 'column' ? '100%' : '30%'};\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        margin-bottom: 20px;\n        .label {\n            margin-right: 10px;\n        }\n        .select {\n            width: 70%;\n        }\n    }\n\n    .buttonField {\n        display: flex;\n        justify-content: ${props => props.flexDirection === 'column' ? 'flex-end' : 'flex-start'};\n    }\n`;\n\nconst outcomeOptions = [\n    { value: 'OS', label: 'OS' }, \n    { value: 'PFS', label: 'PFS' }, \n    { value: 'Response', label: 'Response' }\n];\n\nconst modelOptions = [\n    { value: 'COX', label: 'COX' }, \n    { value: 'DI', label: 'DI' }, \n    { value: 'Log_regression', label: 'Log_regression' }\n];\n\n// const signatureOptions = [\n//     'Woundhealing', \n//     'Tcell_exclusion', \n//     'Tcell_inflamed',\n//     'TGFB_Mariathasan', \n//     'TGFB_Thorsson', \n//     'TIDE', \n//     'TLS_sig',\n//     'WNT_signaling', \n//     'PTEN_loss', \n//     'PDL1', \n//     'NK_sig', \n//     'LRRC15_CAF',\n//     'IRG', 'IPS', \n//     'IPRES', \n//     'Inflammatory', \n//     'IMPRES', \n//     'ImmuneCells',\n//     'Immune_sig', \n//     'IFNG', \n//     'Hypoxia', \n//     'Essential_IO_genes',\n//     'EMT_Thompson', \n//     'EMT_Mak', \n//     'CRMA', \n//     'CYT', \n//     'CD8', \n//     'APM_Wang',\n//     'APM_Thompson', \n//     'Angiogenesis', \n//     'ADO_Corvus', \n//     'ADO_Astra', \n//     'TIS'\n// ];\n\nconst VolcanoPlotInput = (props) => {\n    \n    const {parameters, setParameters, onSubmit} = props;\n\n    return(\n        <StyledForm flexDirection={props.flexDirection}>\n            <div className='formField'>\n                <div className='label'>Outcome: </div>\n                <Select \n                    className='select'\n                    value={outcomeOptions.filter(option => option.value === parameters.outcome)}\n                    options={outcomeOptions} \n                    onChange={(e) => {setParameters({...parameters, outcome: e.value})}} />\n            </div>\n            <div className='formField'>\n                <div className='label'>Model: </div> \n                <Select \n                    className='select'\n                    value={modelOptions.filter(option => option.value === parameters.model)}\n                    options={modelOptions} \n                    onChange={(e) => {setParameters({...parameters, model: e.value})}} />\n            </div>\n            <div className='formField buttonField'>\n                <ActionButton onClick={(e) => {onSubmit()}} text='Submit' disabled={(parameters.model === '' || parameters.outcome === '')} style={{width: '100px', height: '40px', fontSize: '14px'}} />\n                {\n                    props.resetButton &&\n                    <ActionButton \n                        onClick={(e) => {props.onReset()}} \n                        text='Reset'\n                        type='reset' \n                        style={{width: '100px', height: '40px', fontSize: '14px', marginLeft: '10px'}} />\n                }\n            </div>\n        </StyledForm>\n    );\n}\n\nexport default VolcanoPlotInput;","import React, {useEffect} from \"react\";\nimport * as d3 from 'd3';\nimport {withSize} from 'react-sizeme';\nimport styled from 'styled-components';\n\n/**\n * A responsive version of forest plot.\n * The plot rendering process is in 'draw()' function \n * which is called every time a window size changes.\n */\n\nconst Container = styled.div`\n    width: 100%;\n    height: 80%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    .tooltip {\n        position: absolute;\n        font-size: 12px; \n        background-color: rgba(242,255,223,0.8); \n        padding: 2px 10px; \n        color: rgb(7,28,44);\n        border-radius: 3;\n\t}\n`\n\nconst ForestPlot = (props) => {\n\n    useEffect(() => {\n        console.log(props.size.width);\n        draw();\n    }, [props.size.width]);\n\n    const draw = () => {\n        \n        const dim = {\n            width: props.size.width,\n            height: props.size.width\n        }\n\n        const initial = {\n            edgeSize: 10,\n            fontSize: 11,\n            xAxeMargin: 30,\n            topMargin: 20,\n            leftMargin: 200,\n            rightMargin: 100\n        }\n\n        /***\n         * Get the dataset (studies + overall value)\n         * keep the studies in data and the overall\n         **/\n        const dataset = props.individuals.concat(props.meta);\n        const overall = props.meta[0]\n\n        const data = () =>{\n            return props.individuals;\n        }\n\n        /***\n         * Find the min and max value of all studies for adjusting the scales and axes\n         ***/\n\n        const min_low = () => {\n            return Math.min(...dataset.map(function (d){ return Number(d[\"_95ci_low\"])}))\n        }\n        \n        const max_high = () => {\n            return Math.max(...dataset.map(function (d){ return Number(d[\"_95ci_high\"])}))\n        }\n        \n        /***\n         * Functions for scaling X and Y\n         ***/\n        \n        const xScale= (d) => {\n            const scale = d3\n                .scaleLinear()\n                .domain([min_low(), max_high()])\n                .range([initial.leftMargin, dim.width - initial.rightMargin])\n            return scale(d)\n        }\n        \n        const yScale= (d) => {\n            const scale = d3\n                .scaleLinear()\n                .domain([0, dataset.length + 1])\n                .range([20, 460])\n            return scale(d)\n        }\n        \n        /***\n         * Find the overall rhombus points on svg\n         ***/\n\n        const polygonPoints = () =>{\n            return (\n                xScale(Number(overall._95ci_low)) + \", \"+ yScale(dataset.length) +\" \"+\n                xScale(Number(overall.effect_size)) + \", \"+ (yScale(dataset.length) - (initial.edgeSize/2)) +\" \"+\n                xScale(Number(overall._95ci_high)) +\", \"+ yScale(dataset.length ) +\" \"+\n                xScale(Number(overall.effect_size) ) +\", \"+ (yScale(dataset.length) + (initial.edgeSize/2)) +\" \"\n            )\n        }\n        \n        const xAxeTag = [min_low(), overall.effect_size, 1 , max_high()];\n\n        /***\n        * Mouseover data point group (text+interval+rect)\n        */\n       const renderToolTip = (key) => {\n            d3.select(`#${props.id}PlotContainer`)\n                .append('div')\n                .attr('id', `point-${dataset[key].study.replace(/[^a-zA-Z]/g, \"\")}`)\n                .attr('class', 'tooltip')\n                .style('left', `${xScale(1) + 10}px`)\n                .style('top', `${yScale(key) - 30}px`)\n                .html(\n                    dataset[key].study + \" (\" + dataset[key].primary_tissue + \"; \" + dataset[key].sequencing + \")\" +  \n                    \"<br />N=\" + dataset[key].n + \n                    \"<br />coef=\" + dataset[key].effect_size + \n                    \"<br />P-value=\" + Number(dataset[key].pval).toFixed(4));\n       }\n\n       const removeToolTip = (key) => {\n           d3.select(`#point-${dataset[key].study.replace(/[^a-zA-Z]/g, \"\")}`).remove();\n       }\n\n        let svg = d3.select(`#${props.id}`);\n        svg.selectAll(\"*\").remove(); // redraw every time the width changes\n        svg.attr('width', dim.width).attr('height', dim.height);\n        let canvas = svg.append('g');\n        \n        /*Creating axes*/\n        canvas.append('line')\n            .attr('id', 'xAxe')\n            .attr('x1', xScale(min_low())-initial.leftMargin/2)\n            .attr('x2', xScale(max_high())+initial.xAxeMargin)\n            .attr('y1', yScale(dataset.length+1))\n            .attr('y2', yScale(dataset.length+1))\n            .style('stroke', \"#0C3544\")\n            .style('stroke-width', '2');\n\n        canvas.append('line')\n            .attr('id', 'yAxe')\n            .attr('x1', xScale(1))\n            .attr('x2', xScale(1))\n            .attr('y1', yScale(-2))\n            .attr('y2', yScale(dataset.length + 1))\n            .style('stroke', \"#0C3544\")\n            .style('stroke-width', '2');\n\n        canvas.append('line')\n            .attr('id', 'yAxe-dash')\n            .attr('x1', xScale(overall.effect_size))\n            .attr('x2', xScale(overall.effect_size))\n            .attr('y1', yScale(-2))\n            .attr('y2', yScale(dataset.length + 1))\n            .attr('stroke-dasharray', '3,4')\n            .style('stroke', \"#EF8020\")\n            .style('stroke-width', '1');\n\n        Object.keys(xAxeTag).forEach((key, index) => {\n            canvas.append('text')\n                .attr('id', \"xTag-\"+ index)\n                .attr('x', xScale(xAxeTag[index]))\n                .attr('y', yScale(dataset.length + 2))\n                .attr('font-size', initial.fontSize)\n                .attr('font-weight', 'bold')\n                .attr('fill', \"#0C3544\")\n                .attr('text-anchor', 'middle')\n                .text(xAxeTag[index])\n        });\n\n        Object.keys(xAxeTag).forEach((key, index) => {\n            canvas.append('line')\n                .attr('id', \"xAxeDash\"+ index)\n                .attr('x1', xScale(xAxeTag[index]))\n                .attr('x2', xScale(xAxeTag[index]))\n                .attr('y1', yScale(dataset.length+1) - 5)\n                .attr('y2', yScale(dataset.length+1) + 5)\n                .style('stroke', \"#0C3544\")\n                .style('stroke-width', '2');\n        });\n\n        /*Creating Data Point*/\n        Object.keys(props.individuals).forEach((key, index) => {\n            let datapoint = svg.append('g')\n                .attr('id', \"datapoint-\" +index)\n                .on('click', () => console.log(index))\n                .on('mouseover', () => {\n                    renderToolTip(key);\n                })\n                .on('mouseout', () => {\n                    removeToolTip(key);\n                });\n            \n            datapoint.append('text')\n                .attr('id', \"tag-\"+index)\n                .attr('x', 0)\n                .attr('y', yScale(index) + 2)\n                .attr('font-size', initial.fontSize)\n                .attr('fill', \"#0C3544\")\n                .text(`${dataset[key].study}(${dataset[key].primary_tissue}, ${dataset[key].sequencing})`);\n            \n            let line = datapoint.append('line')\n                .attr('id', \"interval-\" + index)\n                .attr('x1', xScale(Number(dataset[key][\"_95ci_low\"])))\n                .attr('x2', xScale(Number(dataset[key][\"_95ci_high\"])))\n                .attr('y1', yScale(index))\n                .attr('y2', yScale(index))\n                .style('stroke', \"#73848E\")\n                .style('stroke-width', '2');\n            line.append('title')\n                .text(`95CI:(${data()[key][\"_95ci_low\"]}, ${data()[key][\"_95ci_high\"]})`);\n            \n            datapoint.append('rect')\n                .attr('id', \"datPoint-\" +index)\n                .attr('x', xScale(Number(dataset[key][\"effect_size\"])) - initial.edgeSize / 2)\n                .attr('y', yScale(index) - initial.edgeSize / 2)\n                .style('width', initial.edgeSize)\n                .style('height', initial.edgeSize)\n                .style('fill', \"#236e96\");\n        });\n\n        /*Creating Diamond*/\n        let polygon = svg.append('polygon')\n            .attr('id', 'diamond')\n            .attr('points', polygonPoints())\n            .style('fill', \"#F2950B\")\n        polygon.append('title')\n            .text(`${overall.study} : ${overall.effect_size} <br />interval: ${overall._95ci_low} to ${overall._95ci_high}`);\n    }\n\n    /***\n     * Creating the plot\n     ***/\n    return (\n        <Container id={`${props.id}PlotContainer`}>\n            <svg id={props.id}></svg>\n        </Container>\n    )\n}\n\nexport default withSize()(ForestPlot);\n","/* eslint-disable radix */\nimport React, {useState, useEffect} from 'react';\nimport Plotly from 'plotly.js-dist';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport {withSize} from 'react-sizeme';\nimport colors from '../../styles/colors';\nimport * as d3 from 'd3';\n\nconst Plot = createPlotlyComponent(Plotly);\n\n// for changing the cursor on hover of points\nconst hover = () => {\n    d3.selectAll('.nsewdrag').style('cursor', 'pointer');\n};\n\nconst unhover = () => {\n    d3.selectAll('.nsewdrag').style('cursor', '');\n};\n\nconst VolcanoPlot = (props) => {\n    const {data, plotId, getForestPlotData, parameters, setParameters} = props;\n\n    const [plotData, setPlotData] = useState({\n        x: [], \n        y: [], \n        hovertext: [], \n        pointColor: [],\n        pointSize: []\n    });\n\n    useEffect(() => {\n        console.log(data);\n        setPlotData({\n            x: data.map(item => (item.effect_size)),\n            y: data.map(item => (item.logPval)),\n            click_ids: data.map((item, i) => (i)),\n            hovertext: getHoverText(data),\n            pointColor: getPointColor(data),\n            pointSize: getPointSize(data)\n        });\n    }, []);\n\n    const onClick = (data) => {\n        let selectedPoint = props.data[data.points[0].data.click_ids[data.points[0].pointIndex]]\n        console.log(selectedPoint);\n        setParameters({...parameters, signature: selectedPoint.signature});\n        getForestPlotData({\n            signature: selectedPoint.signature, \n            outcome: selectedPoint.outcome, \n            model: selectedPoint.model\n        });\n    }\n\n    /**\n     * get data point sizes based on standard error value (se)\n     * @param {*} points \n     */\n    const getPointSize = (points) => {\n        let size = [];\n        points.forEach(point => {\n            if(point.se <= 0.05){\n                size.push(6);\n            }else if(point.se > 0.05 && point.se <= 0.1){\n                size.push(8);\n            }else if(point.se > 0.1 && point.se <= 0.15){\n                size.push(10);\n            }else if(point.se > 0.15){\n                size.push(12);\n            }\n        });\n        return size;\n    }\n\n    /**\n     * get data point color based on HR (effect size) value and -log10 p-value\n     * @param {*} points \n     */\n    const getPointColor = (points) => {\n        let pointColors = [];\n        points.forEach(point => {\n            if(point.logPval < -Math.log10(0.05)){\n                pointColors.push(colors.gray_text);\n            }else{\n                if(point.effect_size > 0){\n                    pointColors.push(colors.red);\n                }else{\n                    pointColors.push(colors.blue);\n                }\n            }\n        });\n        return pointColors;\n    }\n\n    /**\n     * get formatted hovertext for each data point.\n     * @param {*} points \n     */\n    const getHoverText = (points) => {\n        let hoverText = [];\n        points.forEach(point => {\n            hoverText.push(`Signature: ${point.signature}<br>Coef: ${Math.round(point.effect_size * 1000) / 1000}<br>P-value: ${Math.round(point.pval * 10000) / 10000}<br>I2: ${Math.round(point.i2 * 10000) / 10000}<br>P-value I2: ${Math.round(point.pval_i2 * 1000) / 1000}`)\n        });\n        return hoverText;\n    }\n\n    return(\n        <div>\n            <Plot\n                data={[\n                    {\n                        showlegend: false,\n                        type: 'scatter',\n                        mode: 'markers',\n                        x: plotData.x,\n                        y: plotData.y,\n                        click_ids: plotData.click_ids,\n                        hoverinfo: 'text',\n                        hovertext: plotData.hovertext,\n                        marker: {\n                            color: plotData.pointColor,\n                            size: plotData.pointSize\n                        },\n                        name: 'points',\n                    }\n                ]}\n                layout={{\n                    width: props.size.width,\n                    autosize: true,\n                    paper_bgcolor: 'white',\n                    plot_bgcolor: 'white',\n                    orientation: 'v',\n                    yaxis: { ticklen: 0, title: '-log10(p value)' },\n                    xaxis: { title: 'Hazard Ratio', zeroline: false },\n                    hovermode: 'closest',\n                    font: {\n                        size: 14,\n                        family: 'Arial',\n                    },\n                    margin: {\n                        l: 45,\n                        r: 10,\n                        t: 10,\n                        b: 40,\n                    },\n                    shapes: [\n                        {\n                            type: 'line',\n                            xref: 'paper',\n                            x0: 0,\n                            y0: -Math.log10(0.05),\n                            x1: 1,\n                            y1: -Math.log10(0.05),\n                            line: {\n                                color: colors.light_gray,\n                                width: 2,\n                                dash: 'dot'\n                            }\n                        },\n                        {\n                            type: 'line',\n                            xref: 'x',\n                            yref: 'paper',\n                            x0: 0,\n                            y0: 0,\n                            x1: 0,\n                            y1: 1,\n                            line: {\n                                color: colors.light_gray,\n                                width: 2,\n                                dash: 'dot'\n                            }\n                        }\n                    ]\n                }}\n                graphDiv={plotId}\n                config={{\n                    responsive: true,\n                    displayModeBar: false,\n                }}\n                onClick={(data) => onClick(data)}\n                onHover={() => hover()}\n                onUnhover={() => unhover()}\n            />\n        </div>\n    );\n}\n\nexport default withSize()(VolcanoPlot);","import React, {useState, useEffect} from 'react';\nimport ForestPlot from '../Diagram/ForestPlot3';\nimport VolcanoPlot from '../Diagram/VolcanoPlot';\nimport VolcanoPlotInput from './VolcanoPlotInput';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\nconst ExploreContainer = styled.div`\n    width: 100%;\n`;\n\nconst PlotContainer = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n`;\n\nconst StyledPlotArea = styled.div`\n    width: 48%;\n    min-width: 540px;\n    padding 10px;\n`;\n\nconst PlotParameters = styled.div`\n    display: flex;\n    margin-bottom: 20px;\n    .parameterLine {\n        margin-right: 10px;\n    }\n`;\n\nconst Explore = (props) => {\n\n    const {parameters, setParameters} = props;\n    \n    const [volcanoPlotData, setVolcanoPlotData] = useState({data: {}, ready: false});\n    const [forestPlotData, setForestPlotData] = useState({data: {}, ready: false});\n\n    const getVolcanoPlotData = async () => {\n        setVolcanoPlotData({data: {}, ready: false}); // reset the data object so that the plot is redrawn.\n        setForestPlotData({data: {}, ready: false}); \n        const res = await axios.post('/api/explore/volcano_plot', parameters);\n        setVolcanoPlotData({data: res.data, ready: true});\n    };\n\n    const getForestPlotData = async (params) => {\n        setForestPlotData({data: {}, ready: false}); // reset the data object so that the plot is redrawn.\n        const res = await axios.post('/api/explore/forest_plot', params);\n        console.log(res.data.individuals);\n        setForestPlotData({data: res.data, ready: true});\n    };\n\n    useEffect(() => {\n        getVolcanoPlotData();\n    }, []);\n\n    return(\n        <ExploreContainer>\n            <h2>Explore pre-computed signature data</h2>\n            <VolcanoPlotInput \n                parameters={parameters} \n                setParameters={setParameters} \n                onSubmit={getVolcanoPlotData} \n                flexDirection='row' \n                resetButton={true} \n                onReset={() => {window.location.reload()}} />\n            <PlotContainer>\n                <StyledPlotArea className='volcano'>\n                {\n                    volcanoPlotData.ready &&\n                    <div>\n                        <h3>Volcano Plot</h3>\n                        <PlotParameters>\n                            <div className='parameterLine'>Outcome: {parameters.outcome}</div>\n                            <div className='parameterLine'>Model: {parameters.model}</div>\n                        </PlotParameters>\n                        <VolcanoPlot \n                            plotId='volcano-plot' \n                            parameters={parameters} \n                            setParameters={setParameters} \n                            data={volcanoPlotData.data} \n                            getForestPlotData={getForestPlotData}/>\n                    </div>\n                }\n                </StyledPlotArea>\n                <StyledPlotArea className='forest'>\n                {\n                    forestPlotData.ready ?\n                    <div>\n                        <h3>Forest Plot</h3>\n                        <PlotParameters>\n                            <div className='parameterLine'>Outcome: {parameters.outcome}</div>\n                            <div className='parameterLine'>Model: {parameters.model}</div>\n                            <div className='parameterLine'>Signature: {parameters.signature}</div>\n                        </PlotParameters>\n                        <ForestPlot id='forestplot' individuals={forestPlotData.data.individuals} meta={forestPlotData.data.meta} />\n                    </div>\n                    :\n                    <div>\n                        <h3>Forest Plot</h3>\n                        <div>Click on a signature point on the volcano plot to display a corresponding forest plot.</div>\n                    </div>\n                }\n                </StyledPlotArea>\n            </PlotContainer>\n        </ExploreContainer>\n    );\n}\n\nexport default Explore;\n","import React, {useState} from 'react';\nimport Layout from '../UtilComponents/Layout';\nimport VolcanoPlotInput from '../Explore/VolcanoPlotInput';\nimport Explore from '../Explore/Explore';\nimport styled from 'styled-components';\n\nconst HomeContainer = styled.div`\n    width: 100%;\n    height: calc(100vh - 105px);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst HomeLogo = styled.div`\n    height: 155px;\n    img {\n        height: 100%;\n    }\n`;\n\nconst AppDescription = styled.div`\n    width: 90%;\n    max-width: 550px;\n    min-width: 415px;\n    margin-top: 20px;\n    margin-bottom: 20px;\n    line-height: 1.5;\n    letter-spacing: 1.5px;\n`;\n\nconst HomeInput = styled.div`\n    width: 90%;\n    max-width: 550px;\n    min-width: 415px;\n    display: flex;\n    flex-direction: column;\n    aling-items: center;\n    margin-top: 30px;\n\n    .subText {\n        font-size: 20px;\n        font-weight: bold;\n    }\n`\n\nconst Home = () => {\n\n    const [displayHome, setDisplayHome] = useState(true);\n\n    const [parameters, setParameters] = useState({\n        signature: '',\n        outcome: '',\n        model: ''\n    });\n\n    const onSubmit = async () => {\n        setDisplayHome(false);\n    };\n\n    return (\n        <Layout>\n            {\n                displayHome ?\n                <HomeContainer>\n                    <HomeLogo>\n                        <img alt='IO.db' src='./images/logos/IOdb-logo-main.png' />\n                    </HomeLogo>\n                    <AppDescription>\n                        Investigate predictive and prognostic values of your gene.\n                        <br />\n                        Predict a patient response to ICB therapy.\n                    </AppDescription>\n                    <HomeInput>\n                        <div className='subText'>Explore pre-computed signature data</div>\n                        <VolcanoPlotInput \n                                parameters={parameters} \n                                setParameters={setParameters} \n                                onSubmit={onSubmit} \n                                flexDirection='column' />\n                    </HomeInput>\n                </HomeContainer>\n                :\n                <Explore parameters={parameters} setParameters={setParameters} />\n            }\n        </Layout>\n    );\n};\n\nexport default Home;","const studies =  [\n  {\n    \"study\": \"Braun\",\n    \"Primary\": \"Kidney\",\n    \"Sequencing\": \"WES\",\n    \"N\": \"207\",\n    \"coef\": \"1.31\",\n    \"SE\": \"1\",\n    \"95CI_low\": \"-0.63\",\n    \"95CI_high\": \"3.3\",\n    \"Pval\": \"0.19116187669392\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Hugo\",\n    \"Primary\": \"Melanoma\",\n    \"Sequencing\": \"WES\",\n    \"N\": \"38\",\n    \"coef\": \"-1.15\",\n    \"SE\": \"0.88\",\n    \"95CI_low\": \"-3.03\",\n    \"95CI_high\": \"0.51\",\n    \"Pval\": \"0.192069400517325\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Jung\",\n    \"Primary\": \"Lung\",\n    \"Sequencing\": \"WES\",\n    \"N\": \"58\",\n    \"coef\": \"-2.89\",\n    \"SE\": \"1.87\",\n    \"95CI_low\": \"-6.81\",\n    \"95CI_high\": \"0.72\",\n    \"Pval\": \"0.12320240249438\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Liu\",\n    \"Primary\": \"Melanoma\",\n    \"Sequencing\": \"WES\",\n    \"N\": \"133\",\n    \"coef\": \"-0.6\",\n    \"SE\": \"0.33\",\n    \"95CI_low\": \"-1.27\",\n    \"95CI_high\": \"0.04\",\n    \"Pval\": \"0.0699389753777812\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Mariathasan\",\n    \"Primary\": \"Bladder\",\n    \"Sequencing\": \"TGS\",\n    \"N\": \"111\",\n    \"coef\": \"-1.4\",\n    \"SE\": \"0.76\",\n    \"95CI_low\": \"-3.01\",\n    \"95CI_high\": \"-0.01\",\n    \"Pval\": \"0.0654101643137176\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Mariathasan\",\n    \"Primary\": \"Kidney\",\n    \"Sequencing\": \"TGS\",\n    \"N\": \"41\",\n    \"coef\": \"-4.15\",\n    \"SE\": \"1.97\",\n    \"95CI_low\": \"-8.51\",\n    \"95CI_high\": \"-0.67\",\n    \"Pval\": \"0.0354133425733776\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Miao.1\",\n    \"Primary\": \"Kidney\",\n    \"Sequencing\": \"WES\",\n    \"N\": \"26\",\n    \"coef\": \"6.64\",\n    \"SE\": \"4.65\",\n    \"95CI_low\": \"-1.94\",\n    \"95CI_high\": \"16.66\",\n    \"Pval\": \"0.153071317449668\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Miao.2\",\n    \"Primary\": \"Bladder\",\n    \"Sequencing\": \"WES\",\n    \"N\": \"23\",\n    \"coef\": \"-4.06\",\n    \"SE\": \"2.01\",\n    \"95CI_low\": \"-8.59\",\n    \"95CI_high\": \"-0.55\",\n    \"Pval\": \"0.0429795958386913\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Miao.2\",\n    \"Primary\": \"Lung\",\n    \"Sequencing\": \"WES\",\n    \"N\": \"46\",\n    \"coef\": \"-4.08\",\n    \"SE\": \"1.32\",\n    \"95CI_low\": \"-7.01\",\n    \"95CI_high\": \"-1.77\",\n    \"Pval\": \"0.00206350292809808\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Miao.2\",\n    \"Primary\": \"Melanoma\",\n    \"Sequencing\": \"WES\",\n    \"N\": \"121\",\n    \"coef\": \"-0.9\",\n    \"SE\": \"0.41\",\n    \"95CI_low\": \"-1.74\",\n    \"95CI_high\": \"-0.11\",\n    \"Pval\": \"0.0282676251140886\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Nathanson\",\n    \"Primary\": \"Melanoma\",\n    \"Sequencing\": \"WES\",\n    \"N\": \"64\",\n    \"coef\": \"-1.9\",\n    \"SE\": \"0.74\",\n    \"95CI_low\": \"-3.47\",\n    \"95CI_high\": \"-0.53\",\n    \"Pval\": \"0.0103990433952875\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Riaz\",\n    \"Primary\": \"Melanoma\",\n    \"Sequencing\": \"WES\",\n    \"N\": \"42\",\n    \"coef\": \"-0.88\",\n    \"SE\": \"0.59\",\n    \"95CI_low\": \"-2.1\",\n    \"95CI_high\": \"0.26\",\n    \"Pval\": \"0.136832503169481\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Rizvi.15\",\n    \"Primary\": \"Lung\",\n    \"Sequencing\": \"WES\",\n    \"N\": \"27\",\n    \"coef\": \"-3.34\",\n    \"SE\": \"1.54\",\n    \"95CI_low\": \"-6.88\",\n    \"95CI_high\": \"-0.68\",\n    \"Pval\": \"0.0299558614957989\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Rizvi.18\",\n    \"Primary\": \"Lung\",\n    \"Sequencing\": \"TGS\",\n    \"N\": \"29\",\n    \"coef\": \"-1.91\",\n    \"SE\": \"1.43\",\n    \"95CI_low\": \"-5.05\",\n    \"95CI_high\": \"0.74\",\n    \"Pval\": \"0.181139430451187\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Samstein\",\n    \"Primary\": \"Esophagus\",\n    \"Sequencing\": \"TGS\",\n    \"N\": \"21\",\n    \"coef\": \"-0.26\",\n    \"SE\": \"1.57\",\n    \"95CI_low\": \"-3.28\",\n    \"95CI_high\": \"2.68\",\n    \"Pval\": \"0.86966691869969\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Samstein\",\n    \"Primary\": \"HNC\",\n    \"Sequencing\": \"TGS\",\n    \"N\": \"72\",\n    \"coef\": \"0.23\",\n    \"SE\": \"0.56\",\n    \"95CI_low\": \"-0.91\",\n    \"95CI_high\": \"1.31\",\n    \"Pval\": \"0.677660893752833\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Samstein\",\n    \"Primary\": \"Melanoma\",\n    \"Sequencing\": \"TGS\",\n    \"N\": \"108\",\n    \"coef\": \"-1\",\n    \"SE\": \"0.33\",\n    \"95CI_low\": \"-1.66\",\n    \"95CI_high\": \"-0.37\",\n    \"Pval\": \"0.00232570823833877\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Samstein\",\n    \"Primary\": \"Unknown\",\n    \"Sequencing\": \"TGS\",\n    \"N\": \"29\",\n    \"coef\": \"-2.78\",\n    \"SE\": \"0.88\",\n    \"95CI_low\": \"-4.72\",\n    \"95CI_high\": \"-1.22\",\n    \"Pval\": \"0.0015732380306142\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Snyder\",\n    \"Primary\": \"Ureteral\",\n    \"Sequencing\": \"WES\",\n    \"N\": \"22\",\n    \"coef\": \"-1.02\",\n    \"SE\": \"0.88\",\n    \"95CI_low\": \"-2.92\",\n    \"95CI_high\": \"0.62\",\n    \"Pval\": \"0.24338559549317\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Van_Allen\",\n    \"Primary\": \"Melanoma\",\n    \"Sequencing\": \"WES\",\n    \"N\": \"104\",\n    \"coef\": \"-0.52\",\n    \"SE\": \"0.49\",\n    \"95CI_low\": \"-1.5\",\n    \"95CI_high\": \"0.45\",\n    \"Pval\": \"0.288334147400417\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Meta-analysis\",\n    \"Primary\": \"ALL\",\n    \"Sequencing\": \"\",\n    \"N\": \"1322\",\n    \"coef\": \"-1.1\",\n    \"SE\": \"0.24\",\n    \"95CI_low\": \"-1.57\",\n    \"95CI_high\": \"-0.63\",\n    \"Pval\": \"4.09577538170971E-06\",\n    \"I2\": \"0.46\",\n    \"Pval_I2\": \"0.0128496553144055\",\n    \"\": \"\"\n  },\n\n]\n\n\nexport default studies;\n","import React from \"react\";\nimport Layout from '../UtilComponents/Layout';\nimport styled from 'styled-components';\nimport studies from \"../../example_output/sample-output.js\";\nimport * as d3 from 'd3';\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport Button from \"react-bootstrap/Button\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\n\n\nconst StyledHome = styled.div`\n    width: 100%;\n    height: 100%;\n    margin-top: 40px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`;\n\n\nconst initial = {\n  svgWidth: 700,\n  svgHight: 700,\n  edgeSize: 10,\n  fontSize: 9,\n  xAxeMargin: 30,\n  topMargin: 20,\n  leftMargin: 200\n}\n\n/***\n * Get the dataset (studies + overall value)\n * keep the studies in data and the overall\n **/\nconst dataset = studies\n\n\nconst data = () => {\n  return dataset.filter((element) => {\n    return element.study != \"Meta-analysis\";\n  })\n}\n\n\nconst overall = studies[studies.length - 1]\n\n\n/***\n * Find the min and max value of all studies for adjusting the scales and axes\n ***/\n\nconst min_low = () => {\n  return Math.min(...dataset.map(function (d) {\n    return Number(d[\"95CI_low\"])\n  }))\n}\n\nconst max_high = () => {\n  return Math.max(...dataset.map(function (d) {\n    return Number(d[\"95CI_high\"])\n  }))\n}\n\n/***\n * Functions for scaling X and Y\n ***/\n\nconst xScale = (d) => {\n  const scale = d3\n    .scaleLinear()\n    .domain([min_low(), max_high()])\n    .range([initial.leftMargin, initial.leftMargin + 400])\n  return scale(d)\n}\n\nconst yScale = (d) => {\n  const scale = d3\n    .scaleLinear()\n    .domain([0, dataset.length + 1])\n    .range([20, 460])\n  return scale(d)\n}\n\n/***\n * Find the overall rhombus points on svg\n ***/\n\nconst polygonPoints = () => {\n  return (xScale(Number(overall[\"95CI_low\"])) + \", \" + yScale(dataset.length) + \" \" +\n    xScale(Number(overall[\"coef\"])) + \", \" + (yScale(dataset.length) - (initial.edgeSize / 2)) + \" \" +\n    xScale(Number(overall[\"95CI_high\"])) + \", \" + yScale(dataset.length) + \" \" +\n    xScale(Number(overall[\"coef\"])) + \", \" + (yScale(dataset.length) + (initial.edgeSize / 2)) + \" \")\n}\n\n/***\n *\n ***/\n\nconst xAxeTag = [min_low(), overall.coef, 1, max_high()];\n\n/***\n * Mouseover data point group (text+interval+rect)\n */\nconst renderTooltip = (d) => (\n  < div\nstyle = {\n{\n  fontSize:'12px', backgroundColor\n:\n  'rgba(242,255,223,0.95)', padding\n:\n  '2px 10px', color\n:\n  'rgb(7,28,44)', borderRadius\n:\n  3\n}\n}>\n{\n  studies[d].study + \" (\" + studies[d].Primary + \"; \" + studies[d].Sequencing + \"): \" +\n  \"N=\" + studies[d].N + \"; coef=\" + studies[d].coef + \"; P-value=\" + Number(studies[d].Pval).toFixed(4)\n}\n</div>\n)\n;\n\n/***\n * Creating the plot\n ***/\n\nconst ForestPlot = () => {\n  return (\n    <StyledHome>\n    < svg\n  height = \"800\"\n  width = \"800\" >\n    {/*Creating axes*/}\n    < g >\n    < line\n  id = {\"xAxe\"}\n  x1 = {xScale(min_low()\n)\n  -(initial.leftMargin * 2 / 3)\n}\n  y1 = {yScale(dataset.length + 1\n)\n}\n  x2 = {xScale(max_high()\n)\n  +initial.xAxeMargin\n}\n  y2 = {yScale(dataset.length + 1\n)\n}\n  stroke = \"#0C3544\"\n  strokeWidth = \"2\"\n    />\n    < line\n  id = {\"yAxe\"}\n  x1 = {xScale(1\n)\n}\n  y1 = {yScale( - 2\n)\n}\n  x2 = {xScale(1\n)\n}\n  y2 = {yScale(dataset.length + 1\n)\n}\n  stroke = \"#0C3544\"\n  strokeWidth = \"2\"\n    />\n    <line\n  strokeDasharray = \"3,4\"\n  id = {\"yAxe\"}\n  x1 = {xScale(overall.coef\n)\n}\n  y1 = {yScale( - 2\n)\n}\n  x2 = {xScale(overall.coef\n)\n}\n  y2 = {yScale(dataset.length + 1\n)\n}\n  stroke = \"#EF8020\"\n  strokeWidth = \"1\"\n    />\n    {\n      Object.keys(xAxeTag).map((key, index) =>\n        < text\n      id = {\"xTag-\"+index}\n      key = {key}\n      textAnchor = \"middle\"\n      x = {xScale(xAxeTag[index]\n)\n}\n  y = {yScale(dataset.length + 2\n)\n}\n  fontSize = {initial.fontSize}\n  fontWeight = \"bold\"\n  fill = \"#0C3544\"\n    >\n    {xAxeTag[index]}\n    </text>\n)\n}\n  {\n    Object.keys(xAxeTag).map((key, index) =>\n    <line\n    id = {\"xAxeDash\"+index}\n    key = {key}\n    x1 = {xScale(xAxeTag[index]\n  )\n  }\n    y1 = {yScale(dataset.length + 1\n  )\n    -5\n  }\n    x2 = {xScale(xAxeTag[index]\n  )\n  }\n    y2 = {yScale(dataset.length + 1\n  )\n    +5\n  }\n    stroke = \"#0C3544\"\n    strokeWidth = \"2\"\n      >\n      </line>\n  )\n  }\n</g>\n\n  {/*Creating Data Point*/\n  }\n\n  {\n    Object.keys(data()).map((key, index) =>\n    < React.Fragment >\n    < OverlayTrigger\n    placement = \"right\"\n    overlay = {renderTooltip(index)}\n    delay = {\n    {\n      show: 100, hide\n    :\n      200\n    }\n  }\n  >\n  <g\n    id = {\"datapoint-\" +index}\n    onClick = {() => console.log(index)}>\n    /*Tags*/\n  <text\n    id = {\"tag-\"+index}\n    key = {key}\n    x = {initial.leftMargin / 3}\n    y = {yScale(index) + 2\n  }\n    fontSize = {initial.fontSize}\n    fill = \"#0C3544\"\n      >\n      {dataset[key].study}({dataset[key].Primary}, {dataset[key].Sequencing})\n      </text>\n\n      /* Intervals */\n      < line\n    id = {\"interval-\"+index}\n    x1 = {xScale(Number(dataset[key][\"95CI_low\"])\n  )\n  }\n    y1 = {yScale(index)}\n    x2 = {xScale(Number(dataset[key][\"95CI_high\"])\n  )\n  }\n    y2 = {yScale(index)}\n    stroke = \"#73848E\"\n    strokeWidth = \"2\" >\n\n      <title>\n      95\n    CI:({data()[key][\"95CI_low\"]}, {data()[key][\"95CI_high\"]})\n    </title>\n    </line>\n\n    /*Data point marks*/\n    <rect\n    id = {\"datPoint-\" +index}\n    x = {xScale(Number(dataset[key][\"coef\"])\n  )\n    -initial.edgeSize / 2\n  }\n    y = {yScale(index) - initial.edgeSize / 2\n  }\n    width = {initial.edgeSize}\n    height = {initial.edgeSize}\n    fill = \"#236e96\" >\n      </rect>\n      </g>\n      </OverlayTrigger>\n      </React.Fragment>\n  )\n  }\n  {/*Creating Diamond*/\n  }\n<polygon\n  id = \"diamond\"\n  points = {polygonPoints()}\n  fill = \"#F2950B\"\n    >\n    </polygon>\n    </svg>\n    </StyledHome>\n)\n}\n\nexport default ForestPlot;\n","\nimport { createGlobalStyle } from 'styled-components';\nimport colors from './colors';\n\nconst GlobalStyles = createGlobalStyle`\n    html, body {\n        height: 100%;\n        margin: 0;\n    }\n    // html {\n    //     background-image: url('./images/background.png');\n    //     background-size: cover;\n    //     background-position: center;\n    //     background-repeat: no-repeat;\n    // }\n\n    body {\n        color: ${colors.gray_text};\n        font-family: 'Noto Sans', sans-serif;\n        font-weight: 400;\n    }\n\n    #root {\n        height: 100%;\n        min-height: 100vh;\n    }\n\n    main {\n        min-height: calc(100vh - 105px);\n        width: 85%;\n        max-width: 1500px;\n        margin-left: auto;\n        margin-right: auto;\n        display: flex;\n        flex-direction: column;\n    }\n\n    a {\n        text-decoration: none;\n        transition: all 0.25s ease-out 0s;\n    }\n\n    a:hover {\n        transition: all 0.25s ease-out 0s;\n    }\n`;\n\nexport default GlobalStyles;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n// individual page components\nimport {\n  Home\n} from './Components/index';\n\n// styled component\nimport GlobalStyles from './styles/GlobalStyles';\n\nconst App = () => {\n  return (\n    <React.Fragment>\n      <GlobalStyles />\n        <Router>\n          <Switch>\n            <Route path='/' exact component={Home} />\n          </Switch>\n        </Router>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}