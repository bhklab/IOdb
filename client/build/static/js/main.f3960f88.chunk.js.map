{"version":3,"sources":["styles/colors.js","styles/NavigationStyles.js","Components/Navigation/Navigation.js","Components/Footer/Footer.js","Components/UtilComponents/Layout.js","Components/UtilComponents/ActionButton.js","Components/UtilComponents/CustomSelect.js","Components/Explore/VolcanoPlotInput.js","Components/Diagram/ForestPlot3.js","Components/Explore/ForestPlotContainer.js","Components/Diagram/VolcanoPlot.js","Components/Explore/VolcanoPlotContainer.js","Components/Explore/Explore.js","Components/Home/Home.js","example_output/sample-output.js","Components/Diagram/ForestPlot.js","styles/GlobalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["colors","blue","red","hover_blue","hover_red","orange_highlight","gray_text","light_gray","StyledNavigation","styled","div","NavigationContent","LogoContainer","StyledLinks","Navigation","alt","src","to","onClick","e","window","location","reload","StyledFooter","FooterContent","FooterItem","Footer","className","href","Layout","props","children","Fragment","defaultProps","page","StyledButton","button","style","width","height","disabled","color","background","fontSize","fontColor","hover","ActionButton","text","useState","ready","colorScheme","setColorScheme","useEffect","type","customSelectStyles","control","base","minHeight","valueContainer","provided","state","padding","input","margin","indicatorsContainer","CustomSelect","value","options","onChange","styles","StyledForm","flexDirection","outcomeOptions","label","isDisabled","modelOptions","subgroupOptions","VolcanoPlotInput","parameters","setParameters","onSubmit","onReset","resetButton","filter","option","outcome","selected","modelValue","find","item","forEach","filtered","model","prev","onOutcomeSelect","subgroup","marginLeft","Container","withSize","draw","size","individuals","dim","initial","dataset","concat","meta","overall","data","min_low","Math","min","map","d","Number","max_high","max","xScale","d3","domain","range","scale","yScale","length","xAxeTag","round","effect_size","renderToolTip","key","id","point","tooltip","append","attr","study","html","primary_tissue","sequencing","n","toFixed","pval","removeToolTip","remove","svg","selectAll","canvas","Object","keys","index","tooltipId","replace","datapoint","on","console","log","pooledEffect","_95ci_low","_95ci_high","PlotHeader","ForestPlotContainer","forestPlotData","plotData","setPlotdata","asc","sort","setSort","tissueValue","setTissueValue","sequenceValue","setSequenceValue","tissueOptions","setTissueOptions","sequenceOptions","setSequenceOptions","sortOptions","tmp","Set","a","b","localeCompare","unshift","availableSeq","includes","availableTissue","reverse","signature","se","Plot","createPlotlyComponent","Plotly","plotId","getForestPlotData","x","y","hovertext","pointColor","pointSize","setPlotData","selectedPointIndex","setSelectedPointIndex","logPval","click_ids","i","getHoverText","getPointColor","getPointSize","pointLine","getPointOutline","points","push","pointColors","log10","outlineColor","outlineWidth","undefined","hoverText","i2","pval_i2","showlegend","mode","hoverinfo","marker","line","name","layout","autosize","paper_bgcolor","plot_bgcolor","orientation","yaxis","ticklen","title","xaxis","zeroline","hovermode","font","family","l","r","t","shapes","xref","x0","y0","x1","y1","dash","yref","graphDiv","config","responsive","displayModeBar","selectedPoint","pointIndex","onHover","onUnhover","PlotParameters","VolcanoPlotContainer","volcanoPlotData","ExploreContainer","PlotContainer","StyledPlotArea","LoaderContainer","Explore","setVolcanoPlotData","loading","setForestPlotData","getVolcanoPlotData","axios","post","res","params","HomeContainer","HomeLogo","AppDescription","HomeInput","Home","displayHome","setDisplayHome","studies","coef","GlobalStyles","createGlobalStyle","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f3960f88.chunk.js","sourcesContent":["const colors = {\n    blue: '#3375B1',\n    red: '#b13336',\n    hover_blue: '#2A6193',\n    hover_red: '#9f2d30',\n    orange_highlight: '#F2950B',\n    gray_text: '#666666',\n    light_gray: '#999999'\n};\n\nexport default colors;","import styled from 'styled-components';\nimport colors from './colors';\n\nexport const StyledNavigation = styled.div`\n    width: 100%;\n    height: 60px;\n    background-color: ${colors.blue};\n    display: flex;\n    align-items: center;\n`;\n\nexport const NavigationContent = styled.div`\n    width: 85%;\n    max-width: 1500px;\n    height: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    font-size: 14px;\n`\n\nexport const LogoContainer = styled.div`\n    height: 70%;\n    align-items: center;\n    img {\n        height: 100%;\n    }\n`\n\nexport const StyledLinks = styled.div`\n    width: 80%;\n    max-width: 500px;\n    display: flex;\n    justify-content: space-between;\n    padding: 0px 30px;\n    a {\n        color: #ffffff;\n    }\n    a:last-child {\n        margin-right: 0;\n    }\n`","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {StyledNavigation, NavigationContent, LogoContainer, StyledLinks} from '../../styles/NavigationStyles';\n\n/**\n * Component for the navigation with links and logo.\n *\n * @component\n * @example\n *\n */\nconst Navigation = () => {\n    return (\n        <StyledNavigation>\n            <NavigationContent>\n                <LogoContainer>\n                    <img alt='IO.db' src='./images/logos/IOdb-logo-white.png'/>\n                </LogoContainer>\n                <StyledLinks>\n                    <Link to='/' onClick={(e) => {window.location.reload()}}>Home</Link>\n                    <Link to='/'>About</Link>\n                    <Link to='/'>Download</Link>\n                    <Link to='/'>Contact</Link>\n                </StyledLinks>\n            </NavigationContent>\n        </StyledNavigation>\n    );\n};\n\nexport default Navigation;","import React from 'react';\nimport styled from 'styled-components';\nimport colors from '../../styles/colors';\n\nconst StyledFooter = styled.div`\n    position relative;\n    bottom: 0%;\n    width: 100%;\n    height: 44px;\n    display: flex;\n    align-items: center;\n`\n\nconst FooterContent = styled.div`\n    width: 85%;\n    height: 100%;\n    max-width: 1500px;\n    margin-left: auto;\n    margin-right: auto;\n    border-top: 1px solid ${colors.blue};\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n`\n\nconst FooterItem = styled.div`\n    color: ${colors.blue};\n    font-size: 10px;\n    a {\n        color: ${colors.blue};\n    }\n    .divider {\n        margin: 0px 10px;\n    }\n`\n\nconst Footer = () => {\n    return (\n        <StyledFooter>\n            <FooterContent>\n                <FooterItem>\n                    <span className='link'>Terms</span>\n                    <span className='divider'>|</span>\n                    <span className='link'>Privacy</span>\n                    <span className='divider'>|</span>\n                    <span className='link'>Support</span>\n                </FooterItem>\n                <FooterItem>\n                    BHK Lab &#169; 2020-2021\n                </FooterItem>\n                <FooterItem>\n                    <a href=\"https://www.vecteezy.com/free-vector/background\">Background by Vecteezy</a>\n                </FooterItem>\n            </FooterContent>\n        </StyledFooter>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Navigation from '../Navigation/Navigation';\nimport Footer from '../Footer/Footer';\n/**\n * wrapper for every page\n */\nconst Layout = (props) => {\n    const {children} = props;\n    return(\n        <React.Fragment>\n            <Navigation />\n            <main>\n                {children}\n            </main>\n            <Footer />\n        </React.Fragment>\n    );\n};\n\nLayout.propTypes = {\n    /**\n     * Layout's children (components on the page)\n     */\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node,\n    ]),\n};\n  \nLayout.defaultProps = {\n    page: '',\n    children: null,\n};\n\nexport default Layout;","import React, {useState, useEffect} from 'react';\nimport styled from 'styled-components';\nimport colors from '../../styles/colors';\n\nconst StyledButton = styled.button`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 5px;\n    border: none;\n    font-weight: normal;\n    letter-spacing: 1.5px;\n    width: ${props => props.style.width ? props.style.width : '45%'};\n    height: ${props => props.style.height ? props.style.height : '80px'};\n    background-color: ${props => props.disabled ? colors.light_gray : props.color.background};\n    font-size: ${props => props.style.fontSize ? props.style.fontSize : '20px'};\n    color: ${props => props.style.fontColor ? props.style.fontColor : '#ffffff'};\n    cursor: ${props => props.disabled ? 'default' : 'pointer'};\n\n    :hover {\n        background-color: ${ props => props.disabled ? colors.light_gray : props.color.hover };\n        outline: ${ props => props.color.hover };\n    }\n`;\n\nconst ActionButton = (props) => {\n    const {onClick, text, style} = props;\n    const [colorScheme, setColorScheme] = useState({\n        background: colors.blue,\n        hover: colors.hover_blue,\n        ready: false\n    });\n\n    useEffect(() =>{\n        switch(props.type) {\n            case 'reset':\n                setColorScheme({\n                    background: colors.red,\n                    hover: colors.hover_red,\n                    ready: true\n                });\n                break;\n            default:\n                setColorScheme({...colorScheme, ready: true});\n                break;\n        }\n    }, []);\n\n    return (\n        <React.Fragment>\n            {\n                colorScheme.ready &&\n                <StyledButton onClick={onClick} color={colorScheme} style={style} disabled={props.disabled} >\n                    {text}\n                </StyledButton>\n            }\n        </React.Fragment>\n    );\n}\n\nexport default ActionButton;","import React from 'react';\nimport Select from 'react-select';\n\nconst customSelectStyles = {\n    control: base => ({\n        ...base,\n        minHeight: '34px',\n        height: '34px',\n    }),\n    valueContainer: (provided, state) => ({\n        ...provided,\n        height: '34px',\n        padding: '0 5px'\n      }),\n      input: (provided, state) => ({\n        ...provided,\n        margin: '0px',\n      }),\n      indicatorsContainer: (provided, state) => ({\n        ...provided,\n        height: '34px',\n      }),\n};\n\nconst CustomSelect = (props) => {\n    const {className, value, options, onChange} = props;\n    return(\n        <Select \n            className={className}\n            value={value}\n            options={options} \n            onChange={onChange} \n            styles={customSelectStyles}\n        />\n    );\n}\n\nexport default CustomSelect;","import React from 'react';\nimport Select from 'react-select';\nimport styled from 'styled-components';\nimport ActionButton from '../UtilComponents/ActionButton';\nimport CustomSelect from '../UtilComponents/CustomSelect';\n\nconst StyledForm = styled.div`\n    width: ${props => props.flexDirection === 'column' ? '100%' : '80%'};\n    margin-top: 30px;\n    display: flex;\n    flex-direction: ${props => props.flexDirection};\n    align-items: center;\n    justify-content: space-between;\n    font-size: 12px;\n\n    .formField {\n        width: ${props => props.flexDirection === 'column' ? '100%' : '30%'};\n        display: flex;\n        align-items: center;\n        justify-content: ${props => props.flexDirection === 'column' ? 'space-between' : 'center'};\n        margin-bottom: 10px;\n        margin-right: ${props => props.flexDirection === 'column' ? '0px' : '20px'};\n        .label {\n            margin-right: 10px;\n            font-size: 14px;\n        }\n        .select {\n            width: 70%;\n        }\n    }\n\n    .buttonField {\n        display: flex;\n        justify-content: ${props => props.flexDirection === 'column' ? 'flex-end' : 'flex-start'};\n    }\n`;\n\nconst outcomeOptions = [\n    { value: 'OS', label: 'OS', isDisabled: false}, \n    { value: 'PFS', label: 'PFS', isDisabled: false }, \n    { value: 'Response', label: 'Response', isDisabled: false }\n];\n\nconst modelOptions = [\n    { value: 'COX', label: 'COX', isDisabled: false }, \n    { value: 'DI', label: 'DI', isDisabled: false }, \n    { value: 'Log_regression', label: 'Log Regression', isDisabled: false }\n];\n\nconst subgroupOptions = [\n    { value: 'Sequencing', label: 'Sequencing', isDisabled: false },\n    { value: 'Tumor', label: 'Tumor', isDisabled: false },\n    { value: 'ALL', label: 'Both', isDisabled: false },\n    { value: 'AllThree', label: 'All Three', isDisabled: false }\n];\n\n// const signatureOptions = [\n//     'Woundhealing', \n//     'Tcell_exclusion', \n//     'Tcell_inflamed',\n//     'TGFB_Mariathasan', \n//     'TGFB_Thorsson', \n//     'TIDE', \n//     'TLS_sig',\n//     'WNT_signaling', \n//     'PTEN_loss', \n//     'PDL1', \n//     'NK_sig', \n//     'LRRC15_CAF',\n//     'IRG', 'IPS', \n//     'IPRES', \n//     'Inflammatory', \n//     'IMPRES', \n//     'ImmuneCells',\n//     'Immune_sig', \n//     'IFNG', \n//     'Hypoxia', \n//     'Essential_IO_genes',\n//     'EMT_Thompson', \n//     'EMT_Mak', \n//     'CRMA', \n//     'CYT', \n//     'CD8', \n//     'APM_Wang',\n//     'APM_Thompson', \n//     'Angiogenesis', \n//     'ADO_Corvus', \n//     'ADO_Astra', \n//     'TIS'\n// ];\n\nconst VolcanoPlotInput = (props) => {\n    \n    const {parameters, setParameters, onSubmit, onReset, resetButton} = props;\n\n    const readyToSubmit = () => {\n        return(\n            parameters.model === '' || \n            parameters.outcome === '' || \n            parameters.subgroup === ''\n        );\n    };\n\n    const onOutcomeSelect = (selected) => {\n        let modelValue = '';\n\n        if(selected.value !== 'Response'){\n            modelOptions.find(item => item.value === 'Log_regression').isDisabled = true;\n            modelOptions.filter(item => item.value !== 'Log_regression')\n                .forEach(filtered => {\n                    filtered.isDisabled = false;\n                });\n            modelValue = parameters.model === 'Log_regression' && '';\n        }else{\n            modelOptions.find(item => item.value === 'Log_regression').isDisabled = false;\n            modelOptions.filter(item => item.value !== 'Log_regression')\n                .forEach(filtered => {\n                    filtered.isDisabled = true;\n                });\n            modelValue = parameters.model !== 'Log_regression' && '';\n        }\n        setParameters(prev => ({\n            ...prev, \n            model: modelValue,\n            outcome: selected.value\n        }));\n    }\n\n    return(\n        <StyledForm flexDirection={props.flexDirection}>\n            <div className='formField'>\n                <div className='label'>Outcome: </div>\n                <CustomSelect \n                    className='select'\n                    value={outcomeOptions.filter(option => option.value === parameters.outcome)}\n                    options={outcomeOptions} \n                    onChange={(e) => {onOutcomeSelect(e)}} \n                />\n            </div>\n            <div className='formField'>\n                <div className='label'>Model: </div> \n                <CustomSelect \n                    className='select'\n                    value={modelOptions.filter(option => option.value === parameters.model)}\n                    options={modelOptions} \n                    onChange={(e) => {setParameters({...parameters, model: e.value})}} \n                />\n            </div>\n            <div className='formField'>\n                <div className='label'>Subgroup: </div> \n                <CustomSelect \n                    className='select'\n                    value={subgroupOptions.filter(option => option.value === parameters.subgroup)}\n                    options={subgroupOptions} \n                    onChange={(e) => {setParameters({...parameters, subgroup: e.value})}} \n                />\n            </div>\n            <div className='formField buttonField'>\n                <ActionButton \n                    onClick={(e) => {onSubmit()}} text='Submit' disabled={readyToSubmit()} \n                    style={{width: '90px', height: '34px', fontSize: '14px'}} />\n                {\n                    resetButton &&\n                    <ActionButton \n                        onClick={(e) => {onReset()}} \n                        text='Reset'\n                        type='reset' \n                        style={{width: '90px', height: '34px', fontSize: '14px', marginLeft: '10px'}} />\n                }\n            </div>\n        </StyledForm>\n    );\n}\n\nexport default VolcanoPlotInput;","import React, {useEffect} from \"react\";\nimport * as d3 from 'd3';\nimport {withSize} from 'react-sizeme';\nimport styled from 'styled-components';\nimport colors from '../../styles/colors';\n\n/**\n * A responsive version of forest plot.\n * The plot rendering process is in 'draw()' function \n * which is called every time a window size changes.\n */\n\nconst Container = styled.div`\n    width: 100%;\n    height: 80%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    .tooltip {\n        position: absolute;\n        font-size: 11px; \n        background-color: rgba(242,255,223,0.8); \n        padding: 2px 10px; \n        color: rgb(7,28,44);\n        border-radius: 3;\n    }\n    .pointLink:hover {\n        text-decoration: underline;\n    }\n`\n\nconst ForestPlot = (props) => {\n\n    useEffect(() => {\n        draw();\n    }, [props.size.width, props.individuals]);\n\n    const draw = () => {\n        \n        const dim = {\n            width: props.size.width,\n            height: props.size.width\n        }\n\n        const initial = {\n            edgeSize: 8,\n            fontSize: 11,\n            xAxeMargin: 30,\n            topMargin: 20,\n            leftMargin: 200,\n            rightMargin: 10\n        }\n\n        /***\n         * Get the dataset (studies + overall value)\n         * keep the studies in data and the overall\n         **/\n        const dataset = props.individuals.concat(props.meta);\n        const overall = props.meta[0]\n\n        const data = () =>{\n            return props.individuals;\n        }\n\n        /***\n         * Find the min and max value of all studies for adjusting the scales and axes\n         ***/\n\n        const min_low = () => {\n            return Math.min(...dataset.map(function (d){ return Number(d[\"_95ci_low\"])}))\n        }\n        \n        const max_high = () => {\n            return Math.max(...dataset.map(function (d){ return Number(d[\"_95ci_high\"])}))\n        }\n        \n        /***\n         * Functions for scaling X and Y\n         ***/\n        \n        const xScale= (d) => {\n            const scale = d3\n                .scaleLinear()\n                .domain([min_low(), max_high()])\n                .range([initial.leftMargin, dim.width - initial.rightMargin])\n            return scale(d)\n        }\n        \n        const yScale= (d) => {\n            const scale = d3\n                .scaleLinear()\n                .domain([0, dataset.length + 1])\n                .range([20, 460])\n            return scale(d)\n        }\n        \n        /***\n         * Find the overall rhombus points on svg\n         ***/\n\n        const polygonPoints = () =>{\n            return (\n                xScale(Number(overall._95ci_low)) + \", \"+ yScale(dataset.length) +\" \"+\n                xScale(Number(overall.effect_size)) + \", \"+ (yScale(dataset.length) - (initial.edgeSize/2)) +\" \"+\n                xScale(Number(overall._95ci_high)) +\", \"+ yScale(dataset.length) +\" \"+\n                xScale(Number(overall.effect_size) ) +\", \"+ (yScale(dataset.length) + (initial.edgeSize/2)) +\" \"\n            )\n        }\n        \n        const xAxeTag = [min_low(), Math.round(overall.effect_size * 100) / 100, 0 , max_high()];\n\n        /***\n        * Mouseover data point group (text+interval+rect)\n        */\n        const renderToolTip = (key, id, point) => {\n            let tooltip = d3.select(`#${props.id}PlotContainer`)\n                    .append('div')\n                    .attr('id', id)\n                    .attr('class', 'tooltip')\n                    .style('left', `${xScale(1) + 10}px`)\n                    .style('top', `${yScale(key) - 30}px`);\n            if(point.study){\n                tooltip.html(\n                    point.study + \" (\" + point.primary_tissue + \"; \" + point.sequencing + \")\" +  \n                    \"<br />N=\" + point.n + \n                    \"<br />hazard ratio=\" + Number(point.effect_size).toFixed(4) + \n                    \"<br />P-value=\" + Number(point.pval).toFixed(4));\n            }else{\n                tooltip.html(\n                    \"Pooled Effect Size\" +  \n                    \"<br />N=\" + point.n + \n                    \"<br />hazard ratio=\" + Number(point.effect_size).toFixed(4) + \n                    \"<br />P-value=\" + Number(point.pval).toFixed(4));\n            }\n        }\n\n        const removeToolTip = (id) => {\n            d3.select(id).remove();\n        }\n\n        /**\n         *  start drawing plot\n         */\n\n        let svg = d3.select(`#${props.id}`);\n        svg.selectAll(\"*\").remove(); // redraw every time the width changes\n        svg.attr('width', dim.width).attr('height', dim.height);\n        let canvas = svg.append('g');\n        \n        /*Creating axes*/\n        canvas.append('line')\n            .attr('id', 'xAxe')\n            .attr('x1', xScale(min_low())-initial.leftMargin/2)\n            .attr('x2', xScale(max_high())+initial.xAxeMargin)\n            .attr('y1', yScale(dataset.length+1))\n            .attr('y2', yScale(dataset.length+1))\n            .style('stroke', \"#0C3544\")\n            .style('stroke-width', '1');\n\n        canvas.append('line')\n            .attr('id', 'yAxe')\n            .attr('x1', xScale(0))\n            .attr('x2', xScale(0))\n            .attr('y1', yScale(-2))\n            .attr('y2', yScale(dataset.length + 1))\n            .style('stroke', \"#0C3544\")\n            .style('stroke-width', '0.5');\n\n        canvas.append('line')\n            .attr('id', 'yAxe-dash')\n            .attr('x1', xScale(overall.effect_size))\n            .attr('x2', xScale(overall.effect_size))\n            .attr('y1', yScale(-2))\n            .attr('y2', yScale(dataset.length + 1))\n            .attr('stroke-dasharray', '3,4')\n            .style('stroke', \"#EF8020\")\n            .style('stroke-width', '0.5');\n\n        Object.keys(xAxeTag).forEach((key, index) => {\n            canvas.append('text')\n                .attr('id', \"xTag-\"+ index)\n                .attr('x', xScale(xAxeTag[index]))\n                .attr('y', yScale(dataset.length + 2))\n                .attr('font-size', initial.fontSize)\n                .attr('font-weight', 'regular')\n                .attr('fill', \"#0C3544\")\n                .attr('text-anchor', 'middle')\n                .text(xAxeTag[index])\n        });\n\n        Object.keys(xAxeTag).forEach((key, index) => {\n            canvas.append('line')\n                .attr('id', \"xAxeDash\"+ index)\n                .attr('x1', xScale(xAxeTag[index]))\n                .attr('x2', xScale(xAxeTag[index]))\n                .attr('y1', yScale(dataset.length+1) - 5)\n                .attr('y2', yScale(dataset.length+1) + 5)\n                .style('stroke', \"#0C3544\")\n                .style('stroke-width', '0.5');\n        });\n\n        canvas.append('text')\n            .attr('x', xScale(0))\n            .attr('y', yScale(dataset.length + 2.7))\n            .attr('font-size', initial.fontSize)\n            .attr('font-weight', 'regular')\n            .attr('fill', \"#0C3544\")\n            .attr('text-anchor', 'middle')\n            .text('Hazard Ratio')\n\n        /*Creating Data Point*/\n        Object.keys(props.individuals).forEach((key, index) => {\n\n            let tooltipId = `point-${dataset[key].study.replace(/[^a-zA-Z]/g, \"\")}`;\n            \n            let datapoint = svg.append('g')\n                .attr('id', \"datapoint-\" +index)\n                .style('cursor', 'arrow')\n                .on('click', () => console.log(index))\n                .on('mouseover', () => {\n                    renderToolTip(key, tooltipId, dataset[key]);\n                })\n                .on('mouseout', () => {\n                    removeToolTip(`#${tooltipId}`);\n                });\n            \n            datapoint.append('a')\n                .attr('id', \"tag-\"+index)\n                .attr('class', 'pointLink')\n                .attr('xlink:href', '/')\n                .append('text')\n                    .attr('x', 0)\n                    .attr('y', yScale(index))\n                    .attr('font-size', initial.fontSize)\n                    .attr('fill', \"#0C3544\")\n                    .text(`${dataset[key].study}(${dataset[key].primary_tissue}, ${dataset[key].sequencing})`);\n            \n            let line = datapoint.append('line')\n                .attr('id', \"interval-\" + index)\n                .attr('x1', xScale(Number(dataset[key][\"_95ci_low\"])))\n                .attr('x2', xScale(Number(dataset[key][\"_95ci_high\"])))\n                .attr('y1', yScale(index))\n                .attr('y2', yScale(index))\n                .style('stroke', \"#73848E\")\n                .style('stroke-width', '2');\n            line.append('title')\n                .text(`95CI:(${data()[key][\"_95ci_low\"]}, ${data()[key][\"_95ci_high\"]})`);\n            \n            datapoint.append('rect')\n                .attr('id', \"datPoint-\" +index)\n                .attr('x', xScale(Number(dataset[key][\"effect_size\"])) - initial.edgeSize / 2)\n                .attr('y', yScale(index) - initial.edgeSize / 2)\n                .style('width', initial.edgeSize)\n                .style('height', initial.edgeSize)\n                .style('fill', \"#236e96\");\n        });\n\n        /*Creating Diamond*/\n        let pooledEffect = svg.append('g')\n                .attr('id', 'pooled-effect')\n                .on('mouseover', () => {\n                    renderToolTip(dataset.length, 'polygon-tooltip', overall);\n                })\n                .on('mouseout', () => {\n                    removeToolTip('#polygon-tooltip');\n                });\n\n        pooledEffect.append('text')\n            .attr('id', \"tag-pooled-effect\")\n            .attr('x', 0)\n            .attr('y', yScale(dataset.length))\n            .attr('font-size', initial.fontSize)\n            .attr('fill', \"#0C3544\")\n            .text(`Pooled Effect Sizes`);\n\n        pooledEffect.append('polygon')\n            .attr('id', 'diamond')\n            .attr('points', polygonPoints())\n            .style('fill', colors.orange_highlight);\n    }\n\n    /***\n     * Creating the plot\n     ***/\n    return (\n        <Container id={`${props.id}PlotContainer`}>\n            <svg id={props.id}></svg>\n        </Container>\n    )\n}\n\nexport default withSize()(ForestPlot);\n","import React, {useState, useEffect} from 'react';\nimport styled from 'styled-components';\nimport CustomSelect from '../UtilComponents/CustomSelect';\nimport { FaSortAmountDown, FaSortAmountUpAlt } from \"react-icons/fa\";\nimport ForestPlot from '../Diagram/ForestPlot3';\n\nconst Container = styled.div`\n    width: 100%;\n`;\n\nconst PlotHeader = styled.div`\n    width: 100%;\n    display: flex;\n    align-items: center;\n    margin-bottom: 20px;\n    font-size: 12px;\n\n    .title {\n        font-weight: bold;\n    }\n\n    .parameterLine {\n        .value {\n            font-weight: bold;\n        }\n    }\n    \n    .filter {\n        display: flex;\n        flex: 30%;\n        align-items: center;\n        margin-left: 20px;\n        .label {\n            margin-right: 5px;\n        }\n        .dropdown {\n            flex: 30%;\n        }\n        .sortIconBtn {\n            font-size: 14px;\n            margin-left: 10px;\n            background: none;\n            border: none;\n            padding: 0;\n            cursor: pointer;\n            outline: none;\n        }\n    }\n\n    .effectSizeValues {\n        display: flex;\n        .valueLine {\n            margin-left: 15px;\n            .value {\n                margin-left: 5px;\n                font-weight: bold;\n            }\n        }\n    }\n`;\n\nconst ForestPlotContainer = (props) => {\n\n    const {parameters, forestPlotData} = props;\n    const [plotData, setPlotdata] = useState({ready: false, individuals: [], meta: []});\n    const [sort, setSort] = useState({value: 'effect_size', asc: true});\n    const [tissueValue, setTissueValue] = useState('all');\n    const [sequenceValue, setSequenceValue] = useState('all');\n\n    const [tissueOptions, setTissueOptions] = useState([]);\n    const [sequenceOptions, setSequenceOptions] = useState([]);\n    const sortOptions = [\n        {value: 'effect_size', label: 'Hazard Ratio'},\n        {value: 'study', label: 'Studies'},\n    ];\n\n    useEffect(() => {\n        console.log(forestPlotData.data.individuals);\n\n        let tmp = forestPlotData.data.individuals.map(item => item.primary_tissue);\n        tmp = [...new Set(tmp)];\n        tmp = tmp.map(item => ({value: item, label: item, isDisabled: false})).sort((a, b) => (a.label.localeCompare(b.label)));\n        tmp.unshift({value: 'all', label: 'All'});\n        setTissueOptions(tmp);\n        \n        tmp = forestPlotData.data.individuals.map(item => item.sequencing);\n        tmp = [...new Set(tmp)];\n        tmp = tmp.map(item => ({value: item, label: item, isDisabled: false})).sort((a, b) => (a.label.localeCompare(b.label)));\n        tmp.unshift({value: 'all', label: 'All'});\n        setSequenceOptions(tmp);\n\n        setPlotdata({\n            individuals: [...forestPlotData.data.individuals].sort((a, b) => a[sort.value] - b[sort.value]),\n            meta: forestPlotData.data.meta,\n            ready: true\n        });\n        \n    }, []);\n\n    useEffect(() => {\n        let individuals = [...forestPlotData.data.individuals];\n        if(tissueValue !== 'all'){\n            individuals = individuals.filter(item => item.primary_tissue === tissueValue);\n            let availableSeq = [...new Set(individuals.map(item => item.sequencing))];\n            sequenceOptions.forEach(item => {\n                item.isDisabled = !availableSeq.includes(item.value) && item.value !== 'all';\n            });\n        }else{\n            sequenceOptions.forEach(item => {\n                item.isDisabled = false;\n            });\n        }\n        if(sequenceValue !== 'all'){\n            individuals = individuals.filter(item => item.sequencing === sequenceValue);\n            let availableTissue = [...new Set(individuals.map(item => item.primary_tissue))];\n            tissueOptions.forEach(item => {\n                item.isDisabled = !availableTissue.includes(item.value) && item.value != 'all';\n            });\n        }else{\n            tissueOptions.forEach(item => {\n                item.isDisabled = false;\n            });\n        }\n\n        if(sort.value === 'effect_size'){\n            individuals.sort((a, b) => (sort.asc ? a[sort.value] - b[sort.value] : b[sort.value] - a[sort.value]));\n        }else{\n            individuals.sort((a, b) => a[sort.value] - b[sort.value]);\n            if(!sort.asc){\n                individuals.reverse();\n            }\n        }\n\n        individuals.sort((a, b) => (sort.asc ? a[sort.value] - b[sort.value] : b[sort.value] - a[sort.value]));\n        setPlotdata(prev => ({...prev, individuals: individuals}));\n    }, [sort, tissueValue, sequenceValue]);\n\n    return(\n        <div>\n            {\n                plotData.ready &&\n                <Container>\n                    <h3>Forest Plot</h3>\n                    <PlotHeader>\n                        <div className='parameterLine'>\n                            Signature: <span className='value'>{parameters.signature}</span>\n                        </div>\n                        <div className='filter'>\n                            <span className='label'>Sort By:</span>\n                            <CustomSelect \n                                className='dropdown' \n                                value={sortOptions.find(option => option.value === sort.value)}\n                                options={sortOptions}\n                                onChange={(e) => {setSort(prev => ({...prev, value: e.value}))}}\n                            />\n                            <button className='sortIconBtn' onClick={(e) => {setSort(prev => ({...prev, asc: !prev.asc}))}}>\n                                {\n                                    sort.asc ? <FaSortAmountDown /> : <FaSortAmountUpAlt />\n                                }\n                            </button>\n                        </div>\n                    </PlotHeader>\n                    <PlotHeader>\n                        <div className='title'>Filter By: </div>\n                        <div className='filter'>\n                            <span className='label'>Tissue Type:</span>\n                            <CustomSelect \n                                className='dropdown' \n                                value={tissueOptions.find(option => option.value === tissueValue)}\n                                options={tissueOptions}\n                                onChange={(e) => {setTissueValue(e.value)}}\n                            />\n                        </div>\n                        <div className='filter'>\n                            <span className='label'>Sequencing Type:</span>\n                            <CustomSelect \n                                className='dropdown' \n                                value={sequenceOptions.find(option => option.value === sequenceValue)}\n                                options={sequenceOptions}\n                                onChange={(e) => {setSequenceValue(e.value)}}\n                            />\n                        </div>\n                    </PlotHeader>\n                    <PlotHeader>\n                        <div className='title'>Pooled Effect Sizes: </div>\n                        <div className='effectSizeValues'>\n                            <div className='valueLine'>P-value: <span className='value'>{Number(plotData.meta[0].pval).toFixed(3)}</span></div>\n                            <div className='valueLine'>Coef: <span className='value'>{Number(plotData.meta[0].se).toFixed(3)}</span></div>\n                            <div className='valueLine'>95CI Low: <span className='value'>{Number(plotData.meta[0]._95ci_low).toFixed(3)}</span></div>\n                            <div className='valueLine'>95CI High: <span className='value'>{Number(plotData.meta[0]._95ci_high).toFixed(3)}</span></div>\n                        </div>    \n                    </PlotHeader>\n                    <ForestPlot id='forestplot' individuals={plotData.individuals} meta={plotData.meta} />\n                </Container>\n            }\n        </div>\n    );\n}\n\nexport default ForestPlotContainer;\n","/* eslint-disable radix */\nimport React, {useState, useEffect} from 'react';\nimport Plotly from 'plotly.js-dist';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport {withSize} from 'react-sizeme';\nimport colors from '../../styles/colors';\nimport * as d3 from 'd3';\n\nconst Plot = createPlotlyComponent(Plotly);\n\n// for changing the cursor on hover of points\nconst hover = () => {\n    d3.selectAll('.nsewdrag').style('cursor', 'pointer');\n};\n\nconst unhover = () => {\n    d3.selectAll('.nsewdrag').style('cursor', '');\n};\n\nconst VolcanoPlot = (props) => {\n    const {data, plotId, getForestPlotData, parameters, setParameters} = props;\n\n    const [plotData, setPlotData] = useState({\n        x: [], \n        y: [], \n        hovertext: [], \n        pointColor: [],\n        pointSize: []\n    });\n\n    const [selectedPointIndex, setSelectedPointIndex] = useState(null);\n\n    useEffect(() => {\n        console.log(data);\n        setPlotData({\n            x: data.map(item => (item.effect_size)),\n            y: data.map(item => (item.logPval)),\n            click_ids: data.map((item, i) => (i)),\n            hovertext: getHoverText(data),\n            pointColor: getPointColor(data),\n            pointSize: getPointSize(data),\n            pointLine: getPointOutline(data)\n        });\n    }, []);\n\n    useEffect(() => {\n        if(selectedPointIndex){\n            console.log(selectedPointIndex);\n            let pointColor = getPointColor(data, selectedPointIndex);\n            let pointLine = getPointOutline(data, selectedPointIndex);\n            setPlotData({\n                ...plotData, \n                pointColor: pointColor,\n                pointLine: pointLine\n            });\n        }\n    }, [selectedPointIndex]);\n\n    const onClick = (data) => {\n        let selectedPoint = props.data[data.points[0].pointIndex]\n        console.log(selectedPoint);\n        setSelectedPointIndex(data.points[0].pointIndex);\n        setParameters({...parameters, signature: selectedPoint.signature});\n        getForestPlotData({\n            signature: selectedPoint.signature, \n            outcome: selectedPoint.outcome, \n            model: selectedPoint.model\n        });\n    }\n\n    /**\n     * get data point sizes based on standard error value (se)\n     * @param {*} points \n     */\n    const getPointSize = (points) => {\n        let size = [];\n        points.forEach(point => {\n            if(point.se <= 0.05){\n                size.push(6);\n            }else if(point.se > 0.05 && point.se <= 0.1){\n                size.push(8);\n            }else if(point.se > 0.1 && point.se <= 0.15){\n                size.push(10);\n            }else if(point.se > 0.15){\n                size.push(12);\n            }\n        });\n        return size;\n    }\n\n    /**\n     * get data point color based on HR (effect size) value and -log10 p-value\n     * @param {*} points \n     */\n    const getPointColor = (points, index = null) => {\n        let pointColors = [];\n        for(let i = 0; i < points.length; i++){\n            if(i === index){\n                pointColors.push(colors.orange_highlight);\n                continue;\n            }\n\n            if(points[i].logPval < -Math.log10(0.05)){\n                pointColors.push(colors.gray_text);\n            }else{\n                if(points[i].effect_size > 0){\n                    pointColors.push(colors.red);\n                }else{\n                    pointColors.push(colors.blue);\n                }\n            }\n        }\n        return pointColors;\n    }\n\n    /**\n     * get data point outline.\n     * The outline is added if the point specified with the index is clicked.\n     * @param {*} points \n     * @param {*} index \n     */\n    const getPointOutline = (points, index=null) => {\n        let outlineColor = [];\n        let outlineWidth = [];\n        points.forEach((point, i) => {\n            if(i === index){\n                outlineColor.push(colors.gray_text);\n                outlineWidth.push(2);\n            }else{\n                outlineColor.push(undefined);\n                outlineWidth.push(0);\n            }\n        });\n        return { color: outlineColor, width: outlineWidth };\n    }\n\n    /**\n     * get formatted hovertext for each data point.\n     * @param {*} points \n     */\n    const getHoverText = (points) => {\n        let hoverText = [];\n        points.forEach(point => {\n            hoverText.push(\n            `Subgroup: ${point.subgroup}<br>Signature: ${point.signature}<br>Coef: ${Math.round(point.effect_size * 1000) / 1000}<br>P-value: ${Math.round(point.pval * 10000) / 10000}<br>I2: ${Math.round(point.i2 * 10000) / 10000}<br>P-value I2: ${Math.round(point.pval_i2 * 1000) / 1000}`)\n        });\n        return hoverText;\n    }\n\n    return(\n        <div>\n            <Plot\n                data={[\n                    {\n                        showlegend: false,\n                        type: 'scatter',\n                        mode: 'markers',\n                        x: plotData.x,\n                        y: plotData.y,\n                        click_ids: plotData.click_ids,\n                        hoverinfo: 'text',\n                        hovertext: plotData.hovertext,\n                        marker: {\n                            color: plotData.pointColor,\n                            size: plotData.pointSize,\n                            line: plotData.pointLine\n                        },\n                        name: 'points',\n                    }\n                ]}\n                layout={{\n                    width: props.size.width,\n                    height: props.size.width * 0.8,\n                    autosize: true,\n                    paper_bgcolor: 'white',\n                    plot_bgcolor: 'white',\n                    orientation: 'v',\n                    yaxis: { ticklen: 0, title: '-log10(p value)' },\n                    xaxis: { title: 'Hazard Ratio', zeroline: false },\n                    hovermode: 'closest',\n                    font: {\n                        size: 11,\n                        family: 'Noto Sans',\n                    },\n                    margin: {\n                        l: 45,\n                        r: 10,\n                        t: 10,\n                        b: 40,\n                    },\n                    shapes: [\n                        {\n                            type: 'line',\n                            xref: 'paper',\n                            x0: 0,\n                            y0: -Math.log10(0.05),\n                            x1: 1,\n                            y1: -Math.log10(0.05),\n                            line: {\n                                color: colors.light_gray,\n                                width: 2,\n                                dash: 'dot'\n                            }\n                        },\n                        {\n                            type: 'line',\n                            xref: 'x',\n                            yref: 'paper',\n                            x0: 0,\n                            y0: 0,\n                            x1: 0,\n                            y1: 1,\n                            line: {\n                                color: colors.light_gray,\n                                width: 2,\n                                dash: 'dot'\n                            }\n                        }\n                    ]\n                }}\n                graphDiv={plotId}\n                config={{\n                    responsive: true,\n                    displayModeBar: false,\n                }}\n                onClick={(data) => onClick(data)}\n                onHover={() => hover()}\n                onUnhover={() => unhover()}\n            />\n        </div>\n    );\n}\n\nexport default withSize()(VolcanoPlot);","import React from 'react';\nimport VolcanoPlot from '../Diagram/VolcanoPlot';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    width: 100%;\n    margin-bottom: 30px;\n`\n\nconst PlotParameters = styled.div`\n    width: 100%;\n    display: flex;\n    align-items: center;\n    margin-bottom: 10px;\n    font-size: 12px;\n    .parameterLine {\n        margin-right: 20px;\n    }\n    .value {\n        font-weight: bold;\n    }\n`;\n\nconst VolcanoPlotContainer = (props) => {\n\n    const { parameters, setParameters, volcanoPlotData, getForestPlotData } = props;\n\n    return(\n        <Container>\n            <h3>Volcano Plot</h3>\n            <PlotParameters>\n                <div className='parameterLine'>Outcome: <span className='value'>{parameters.outcome}</span></div>\n                <div className='parameterLine'>Model: <span className='value'>{parameters.model}</span></div>\n                <div className='parameterLine'>Subgroup: <span className='value'>{parameters.subgroup}</span></div>\n            </PlotParameters>\n            <VolcanoPlot \n                plotId='volcano-plot' \n                parameters={parameters} \n                setParameters={setParameters} \n                data={volcanoPlotData.data} \n                getForestPlotData={getForestPlotData}/>\n        </Container>\n    );\n}\n\nexport default VolcanoPlotContainer;","import React, {useState, useEffect} from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport Loader from 'react-loader-spinner';\n\nimport ForestPlotContainer from './ForestPlotContainer';\nimport VolcanoPlotInput from './VolcanoPlotInput';\nimport VolcanoPlotContainer from './VolcanoPlotContainer';\nimport colors from '../../styles/colors';\n\nconst ExploreContainer = styled.div`\n    width: 100%;\n`;\n\nconst PlotContainer = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    .volcano {\n        width: 35%;\n    }\n    .forest {\n        width: 65%;\n    }\n`;\n\nconst StyledPlotArea = styled.div`\n    width: ${props => props.width};\n    // min-width: 400px;\n    padding 10px;\n`;\n\nconst LoaderContainer = styled.div`\n    width: 100%;\n    height: 500px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst Explore = (props) => {\n\n    const {parameters, setParameters} = props;\n    \n    const [volcanoPlotData, setVolcanoPlotData] = useState({data: {}, ready: false});\n    const [forestPlotData, setForestPlotData] = useState({data: {}, loading: false, ready: false});\n\n    const getVolcanoPlotData = async () => {\n        setVolcanoPlotData({data: {}, ready: false}); // reset the data object so that the plot is redrawn.\n        setForestPlotData({data: {}, loading: false, ready: false}); \n        const res = await axios.post('/api/explore/volcano_plot', parameters);\n        setVolcanoPlotData({data: res.data, ready: true});\n    };\n\n    const getForestPlotData = async (params) => {\n        setForestPlotData({data: {}, loading: true, ready: false}); // reset the data object so that the plot is redrawn.\n        const res = await axios.post('/api/explore/forest_plot', params);\n        setForestPlotData({data: res.data, loading: false, ready: true});\n    };\n\n    useEffect(() => {\n        getVolcanoPlotData();\n    }, []);\n\n    return(\n        <ExploreContainer>\n            <h3>Explore pre-computed signature data</h3>\n            <VolcanoPlotInput \n                parameters={parameters} \n                setParameters={setParameters} \n                onSubmit={getVolcanoPlotData} \n                flexDirection='row' \n                resetButton={true} \n                onReset={() => {window.location.reload()}} />\n            <PlotContainer>\n                <StyledPlotArea width='40%'>\n                {\n                    volcanoPlotData.ready ?\n                    <VolcanoPlotContainer \n                        parameters={parameters} \n                        setParameters={setParameters} \n                        volcanoPlotData={volcanoPlotData} \n                        getForestPlotData={getForestPlotData} \n                    />\n                    :\n                    <LoaderContainer>\n                        <Loader type=\"Oval\" color={colors.blue} height={80} width={80}/>\n                    </LoaderContainer>\n                }\n                </StyledPlotArea>\n                <StyledPlotArea width='60%'>\n                {\n                    forestPlotData.ready ?\n                    <ForestPlotContainer parameters={parameters} forestPlotData={forestPlotData} />\n                    :\n                    forestPlotData.loading ?\n                        <LoaderContainer>\n                            <Loader type=\"Oval\" color={colors.blue} height={80} width={80}/>\n                        </LoaderContainer>\n                        :\n                        <div>\n                            <h3>Forest Plot</h3>\n                            <div>Click on a signature point on the volcano plot to display a corresponding forest plot.</div>\n                        </div>\n                }\n                </StyledPlotArea>\n            </PlotContainer>\n        </ExploreContainer>\n    );\n}\n\nexport default Explore;\n","import React, {useState} from 'react';\nimport Layout from '../UtilComponents/Layout';\nimport VolcanoPlotInput from '../Explore/VolcanoPlotInput';\nimport Explore from '../Explore/Explore';\nimport styled from 'styled-components';\n\nconst HomeContainer = styled.div`\n    width: 100%;\n    height: calc(100vh - 105px);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst HomeLogo = styled.div`\n    height: 100px;\n    img {\n        height: 100%;\n    }\n`;\n\nconst AppDescription = styled.div`\n    width: 90%;\n    max-width: 550px;\n    min-width: 415px;\n    margin-top: 20px;\n    margin-bottom: 20px;\n    line-height: 1.5;\n    letter-spacing: 1.5px;\n`;\n\nconst HomeInput = styled.div`\n    width: 90%;\n    max-width: 550px;\n    min-width: 415px;\n    display: flex;\n    flex-direction: column;\n    aling-items: center;\n    margin-top: 30px;\n\n    .subText {\n        font-size: 20px;\n        font-weight: bold;\n    }\n`\n\nconst Home = () => {\n\n    const [displayHome, setDisplayHome] = useState(true);\n\n    const [parameters, setParameters] = useState({\n        signature: '',\n        outcome: '',\n        model: '',\n        subgroup: ''\n    });\n\n    const onSubmit = async () => {\n        setDisplayHome(false);\n    };\n\n    return (\n        <Layout>\n            {\n                displayHome ?\n                <HomeContainer>\n                    <HomeLogo>\n                        <img alt='IO.db' src='./images/logos/IOdb-logo-main.png' />\n                    </HomeLogo>\n                    <AppDescription>\n                        Investigate predictive and prognostic values of your gene.\n                        <br />\n                        Predict a patient response to ICB therapy.\n                    </AppDescription>\n                    <HomeInput>\n                        <div className='subText'>Explore pre-computed signature data</div>\n                        <VolcanoPlotInput \n                                parameters={parameters} \n                                setParameters={setParameters} \n                                onSubmit={onSubmit} \n                                flexDirection='column' />\n                    </HomeInput>\n                </HomeContainer>\n                :\n                <Explore parameters={parameters} setParameters={setParameters} />\n            }\n        </Layout>\n    );\n};\n\nexport default Home;","const studies =  [\n  {\n    \"study\": \"Braun\",\n    \"Primary\": \"Kidney\",\n    \"Sequencing\": \"WES\",\n    \"N\": \"207\",\n    \"coef\": \"1.31\",\n    \"SE\": \"1\",\n    \"95CI_low\": \"-0.63\",\n    \"95CI_high\": \"3.3\",\n    \"Pval\": \"0.19116187669392\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Hugo\",\n    \"Primary\": \"Melanoma\",\n    \"Sequencing\": \"WES\",\n    \"N\": \"38\",\n    \"coef\": \"-1.15\",\n    \"SE\": \"0.88\",\n    \"95CI_low\": \"-3.03\",\n    \"95CI_high\": \"0.51\",\n    \"Pval\": \"0.192069400517325\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Jung\",\n    \"Primary\": \"Lung\",\n    \"Sequencing\": \"WES\",\n    \"N\": \"58\",\n    \"coef\": \"-2.89\",\n    \"SE\": \"1.87\",\n    \"95CI_low\": \"-6.81\",\n    \"95CI_high\": \"0.72\",\n    \"Pval\": \"0.12320240249438\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Liu\",\n    \"Primary\": \"Melanoma\",\n    \"Sequencing\": \"WES\",\n    \"N\": \"133\",\n    \"coef\": \"-0.6\",\n    \"SE\": \"0.33\",\n    \"95CI_low\": \"-1.27\",\n    \"95CI_high\": \"0.04\",\n    \"Pval\": \"0.0699389753777812\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Mariathasan\",\n    \"Primary\": \"Bladder\",\n    \"Sequencing\": \"TGS\",\n    \"N\": \"111\",\n    \"coef\": \"-1.4\",\n    \"SE\": \"0.76\",\n    \"95CI_low\": \"-3.01\",\n    \"95CI_high\": \"-0.01\",\n    \"Pval\": \"0.0654101643137176\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Mariathasan\",\n    \"Primary\": \"Kidney\",\n    \"Sequencing\": \"TGS\",\n    \"N\": \"41\",\n    \"coef\": \"-4.15\",\n    \"SE\": \"1.97\",\n    \"95CI_low\": \"-8.51\",\n    \"95CI_high\": \"-0.67\",\n    \"Pval\": \"0.0354133425733776\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Miao.1\",\n    \"Primary\": \"Kidney\",\n    \"Sequencing\": \"WES\",\n    \"N\": \"26\",\n    \"coef\": \"6.64\",\n    \"SE\": \"4.65\",\n    \"95CI_low\": \"-1.94\",\n    \"95CI_high\": \"16.66\",\n    \"Pval\": \"0.153071317449668\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Miao.2\",\n    \"Primary\": \"Bladder\",\n    \"Sequencing\": \"WES\",\n    \"N\": \"23\",\n    \"coef\": \"-4.06\",\n    \"SE\": \"2.01\",\n    \"95CI_low\": \"-8.59\",\n    \"95CI_high\": \"-0.55\",\n    \"Pval\": \"0.0429795958386913\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Miao.2\",\n    \"Primary\": \"Lung\",\n    \"Sequencing\": \"WES\",\n    \"N\": \"46\",\n    \"coef\": \"-4.08\",\n    \"SE\": \"1.32\",\n    \"95CI_low\": \"-7.01\",\n    \"95CI_high\": \"-1.77\",\n    \"Pval\": \"0.00206350292809808\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Miao.2\",\n    \"Primary\": \"Melanoma\",\n    \"Sequencing\": \"WES\",\n    \"N\": \"121\",\n    \"coef\": \"-0.9\",\n    \"SE\": \"0.41\",\n    \"95CI_low\": \"-1.74\",\n    \"95CI_high\": \"-0.11\",\n    \"Pval\": \"0.0282676251140886\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Nathanson\",\n    \"Primary\": \"Melanoma\",\n    \"Sequencing\": \"WES\",\n    \"N\": \"64\",\n    \"coef\": \"-1.9\",\n    \"SE\": \"0.74\",\n    \"95CI_low\": \"-3.47\",\n    \"95CI_high\": \"-0.53\",\n    \"Pval\": \"0.0103990433952875\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Riaz\",\n    \"Primary\": \"Melanoma\",\n    \"Sequencing\": \"WES\",\n    \"N\": \"42\",\n    \"coef\": \"-0.88\",\n    \"SE\": \"0.59\",\n    \"95CI_low\": \"-2.1\",\n    \"95CI_high\": \"0.26\",\n    \"Pval\": \"0.136832503169481\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Rizvi.15\",\n    \"Primary\": \"Lung\",\n    \"Sequencing\": \"WES\",\n    \"N\": \"27\",\n    \"coef\": \"-3.34\",\n    \"SE\": \"1.54\",\n    \"95CI_low\": \"-6.88\",\n    \"95CI_high\": \"-0.68\",\n    \"Pval\": \"0.0299558614957989\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Rizvi.18\",\n    \"Primary\": \"Lung\",\n    \"Sequencing\": \"TGS\",\n    \"N\": \"29\",\n    \"coef\": \"-1.91\",\n    \"SE\": \"1.43\",\n    \"95CI_low\": \"-5.05\",\n    \"95CI_high\": \"0.74\",\n    \"Pval\": \"0.181139430451187\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Samstein\",\n    \"Primary\": \"Esophagus\",\n    \"Sequencing\": \"TGS\",\n    \"N\": \"21\",\n    \"coef\": \"-0.26\",\n    \"SE\": \"1.57\",\n    \"95CI_low\": \"-3.28\",\n    \"95CI_high\": \"2.68\",\n    \"Pval\": \"0.86966691869969\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Samstein\",\n    \"Primary\": \"HNC\",\n    \"Sequencing\": \"TGS\",\n    \"N\": \"72\",\n    \"coef\": \"0.23\",\n    \"SE\": \"0.56\",\n    \"95CI_low\": \"-0.91\",\n    \"95CI_high\": \"1.31\",\n    \"Pval\": \"0.677660893752833\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Samstein\",\n    \"Primary\": \"Melanoma\",\n    \"Sequencing\": \"TGS\",\n    \"N\": \"108\",\n    \"coef\": \"-1\",\n    \"SE\": \"0.33\",\n    \"95CI_low\": \"-1.66\",\n    \"95CI_high\": \"-0.37\",\n    \"Pval\": \"0.00232570823833877\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Samstein\",\n    \"Primary\": \"Unknown\",\n    \"Sequencing\": \"TGS\",\n    \"N\": \"29\",\n    \"coef\": \"-2.78\",\n    \"SE\": \"0.88\",\n    \"95CI_low\": \"-4.72\",\n    \"95CI_high\": \"-1.22\",\n    \"Pval\": \"0.0015732380306142\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Snyder\",\n    \"Primary\": \"Ureteral\",\n    \"Sequencing\": \"WES\",\n    \"N\": \"22\",\n    \"coef\": \"-1.02\",\n    \"SE\": \"0.88\",\n    \"95CI_low\": \"-2.92\",\n    \"95CI_high\": \"0.62\",\n    \"Pval\": \"0.24338559549317\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Van_Allen\",\n    \"Primary\": \"Melanoma\",\n    \"Sequencing\": \"WES\",\n    \"N\": \"104\",\n    \"coef\": \"-0.52\",\n    \"SE\": \"0.49\",\n    \"95CI_low\": \"-1.5\",\n    \"95CI_high\": \"0.45\",\n    \"Pval\": \"0.288334147400417\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Meta-analysis\",\n    \"Primary\": \"ALL\",\n    \"Sequencing\": \"\",\n    \"N\": \"1322\",\n    \"coef\": \"-1.1\",\n    \"SE\": \"0.24\",\n    \"95CI_low\": \"-1.57\",\n    \"95CI_high\": \"-0.63\",\n    \"Pval\": \"4.09577538170971E-06\",\n    \"I2\": \"0.46\",\n    \"Pval_I2\": \"0.0128496553144055\",\n    \"\": \"\"\n  },\n\n]\n\n\nexport default studies;\n","import React from \"react\";\nimport Layout from '../UtilComponents/Layout';\nimport styled from 'styled-components';\nimport studies from \"../../example_output/sample-output.js\";\nimport * as d3 from 'd3';\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport Button from \"react-bootstrap/Button\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\n\n\nconst StyledHome = styled.div`\n    width: 100%;\n    height: 100%;\n    margin-top: 40px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`;\n\n\nconst initial = {\n  svgWidth: 700,\n  svgHight: 700,\n  edgeSize: 10,\n  fontSize: 9,\n  xAxeMargin: 30,\n  topMargin: 20,\n  leftMargin: 200\n}\n\n/***\n * Get the dataset (studies + overall value)\n * keep the studies in data and the overall\n **/\nconst dataset = studies\n\n\nconst data = () => {\n  return dataset.filter((element) => {\n    return element.study != \"Meta-analysis\";\n  })\n}\n\n\nconst overall = studies[studies.length - 1]\n\n\n/***\n * Find the min and max value of all studies for adjusting the scales and axes\n ***/\n\nconst min_low = () => {\n  return Math.min(...dataset.map(function (d) {\n    return Number(d[\"95CI_low\"])\n  }))\n}\n\nconst max_high = () => {\n  return Math.max(...dataset.map(function (d) {\n    return Number(d[\"95CI_high\"])\n  }))\n}\n\n/***\n * Functions for scaling X and Y\n ***/\n\nconst xScale = (d) => {\n  const scale = d3\n    .scaleLinear()\n    .domain([min_low(), max_high()])\n    .range([initial.leftMargin, initial.leftMargin + 400])\n  return scale(d)\n}\n\nconst yScale = (d) => {\n  const scale = d3\n    .scaleLinear()\n    .domain([0, dataset.length + 1])\n    .range([20, 460])\n  return scale(d)\n}\n\n/***\n * Find the overall rhombus points on svg\n ***/\n\nconst polygonPoints = () => {\n  return (xScale(Number(overall[\"95CI_low\"])) + \", \" + yScale(dataset.length) + \" \" +\n    xScale(Number(overall[\"coef\"])) + \", \" + (yScale(dataset.length) - (initial.edgeSize / 2)) + \" \" +\n    xScale(Number(overall[\"95CI_high\"])) + \", \" + yScale(dataset.length) + \" \" +\n    xScale(Number(overall[\"coef\"])) + \", \" + (yScale(dataset.length) + (initial.edgeSize / 2)) + \" \")\n}\n\n/***\n *\n ***/\n\nconst xAxeTag = [min_low(), overall.coef, 1, max_high()];\n\n/***\n * Mouseover data point group (text+interval+rect)\n */\nconst renderTooltip = (d) => (\n  < div\nstyle = {\n{\n  fontSize:'12px', backgroundColor\n:\n  'rgba(242,255,223,0.95)', padding\n:\n  '2px 10px', color\n:\n  'rgb(7,28,44)', borderRadius\n:\n  3\n}\n}>\n{\n  studies[d].study + \" (\" + studies[d].Primary + \"; \" + studies[d].Sequencing + \"): \" +\n  \"N=\" + studies[d].N + \"; coef=\" + studies[d].coef + \"; P-value=\" + Number(studies[d].Pval).toFixed(4)\n}\n</div>\n)\n;\n\n/***\n * Creating the plot\n ***/\n\nconst ForestPlot = () => {\n  return (\n    <StyledHome>\n    < svg\n  height = \"800\"\n  width = \"800\" >\n    {/*Creating axes*/}\n    < g >\n    < line\n  id = {\"xAxe\"}\n  x1 = {xScale(min_low()\n)\n  -(initial.leftMargin * 2 / 3)\n}\n  y1 = {yScale(dataset.length + 1\n)\n}\n  x2 = {xScale(max_high()\n)\n  +initial.xAxeMargin\n}\n  y2 = {yScale(dataset.length + 1\n)\n}\n  stroke = \"#0C3544\"\n  strokeWidth = \"2\"\n    />\n    < line\n  id = {\"yAxe\"}\n  x1 = {xScale(1\n)\n}\n  y1 = {yScale( - 2\n)\n}\n  x2 = {xScale(1\n)\n}\n  y2 = {yScale(dataset.length + 1\n)\n}\n  stroke = \"#0C3544\"\n  strokeWidth = \"2\"\n    />\n    <line\n  strokeDasharray = \"3,4\"\n  id = {\"yAxe\"}\n  x1 = {xScale(overall.coef\n)\n}\n  y1 = {yScale( - 2\n)\n}\n  x2 = {xScale(overall.coef\n)\n}\n  y2 = {yScale(dataset.length + 1\n)\n}\n  stroke = \"#EF8020\"\n  strokeWidth = \"1\"\n    />\n    {\n      Object.keys(xAxeTag).map((key, index) =>\n        < text\n      id = {\"xTag-\"+index}\n      key = {key}\n      textAnchor = \"middle\"\n      x = {xScale(xAxeTag[index]\n)\n}\n  y = {yScale(dataset.length + 2\n)\n}\n  fontSize = {initial.fontSize}\n  fontWeight = \"bold\"\n  fill = \"#0C3544\"\n    >\n    {xAxeTag[index]}\n    </text>\n)\n}\n  {\n    Object.keys(xAxeTag).map((key, index) =>\n    <line\n    id = {\"xAxeDash\"+index}\n    key = {key}\n    x1 = {xScale(xAxeTag[index]\n  )\n  }\n    y1 = {yScale(dataset.length + 1\n  )\n    -5\n  }\n    x2 = {xScale(xAxeTag[index]\n  )\n  }\n    y2 = {yScale(dataset.length + 1\n  )\n    +5\n  }\n    stroke = \"#0C3544\"\n    strokeWidth = \"2\"\n      >\n      </line>\n  )\n  }\n</g>\n\n  {/*Creating Data Point*/\n  }\n\n  {\n    Object.keys(data()).map((key, index) =>\n    < React.Fragment >\n    < OverlayTrigger\n    placement = \"right\"\n    overlay = {renderTooltip(index)}\n    delay = {\n    {\n      show: 100, hide\n    :\n      200\n    }\n  }\n  >\n  <g\n    id = {\"datapoint-\" +index}\n    onClick = {() => console.log(index)}>\n    /*Tags*/\n  <text\n    id = {\"tag-\"+index}\n    key = {key}\n    x = {initial.leftMargin / 3}\n    y = {yScale(index) + 2\n  }\n    fontSize = {initial.fontSize}\n    fill = \"#0C3544\"\n      >\n      {dataset[key].study}({dataset[key].Primary}, {dataset[key].Sequencing})\n      </text>\n\n      /* Intervals */\n      < line\n    id = {\"interval-\"+index}\n    x1 = {xScale(Number(dataset[key][\"95CI_low\"])\n  )\n  }\n    y1 = {yScale(index)}\n    x2 = {xScale(Number(dataset[key][\"95CI_high\"])\n  )\n  }\n    y2 = {yScale(index)}\n    stroke = \"#73848E\"\n    strokeWidth = \"2\" >\n\n      <title>\n      95\n    CI:({data()[key][\"95CI_low\"]}, {data()[key][\"95CI_high\"]})\n    </title>\n    </line>\n\n    /*Data point marks*/\n    <rect\n    id = {\"datPoint-\" +index}\n    x = {xScale(Number(dataset[key][\"coef\"])\n  )\n    -initial.edgeSize / 2\n  }\n    y = {yScale(index) - initial.edgeSize / 2\n  }\n    width = {initial.edgeSize}\n    height = {initial.edgeSize}\n    fill = \"#236e96\" >\n      </rect>\n      </g>\n      </OverlayTrigger>\n      </React.Fragment>\n  )\n  }\n  {/*Creating Diamond*/\n  }\n<polygon\n  id = \"diamond\"\n  points = {polygonPoints()}\n  fill = \"#F2950B\"\n    >\n    </polygon>\n    </svg>\n    </StyledHome>\n)\n}\n\nexport default ForestPlot;\n","\nimport { createGlobalStyle } from 'styled-components';\nimport colors from './colors';\n\nconst GlobalStyles = createGlobalStyle`\n    html, body {\n        height: 100%;\n        margin: 0;\n    }\n    // html {\n    //     background-image: url('./images/background.png');\n    //     background-size: cover;\n    //     background-position: center;\n    //     background-repeat: no-repeat;\n    // }\n\n    body {\n        color: ${colors.gray_text};\n        font-family: 'Noto Sans', sans-serif;\n        font-weight: 400;\n    }\n\n    #root {\n        height: 100%;\n        min-height: 100vh;\n    }\n\n    main {\n        min-height: calc(100vh - 105px);\n        width: 85%;\n        max-width: 1500px;\n        margin-left: auto;\n        margin-right: auto;\n        display: flex;\n        flex-direction: column;\n    }\n\n    a {\n        text-decoration: none;\n        transition: all 0.25s ease-out 0s;\n    }\n\n    a:hover {\n        transition: all 0.25s ease-out 0s;\n    }\n`;\n\nexport default GlobalStyles;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n// individual page components\nimport {\n  Home\n} from './Components/index';\n\n// styled component\nimport GlobalStyles from './styles/GlobalStyles';\n\nconst App = () => {\n  return (\n    <React.Fragment>\n      <GlobalStyles />\n        <Router>\n          <Switch>\n            <Route path='/' exact component={Home} />\n          </Switch>\n        </Router>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}