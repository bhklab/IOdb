{"version":3,"sources":["styles/colors.js","Components/Navigation/NavigationStyles.js","Components/Navigation/Navigation.js","Components/Footer/Footer.js","Components/UtilComponents/Layout.js","Components/UtilComponents/StyledForm.js","Components/UtilComponents/ActionButton.js","Components/UtilComponents/CustomDropdown.js","Components/UtilComponents/CustomMultiSelect.js","Components/IOExplore/VolcanoPlotInput.js","Components/Home/Home.js","Components/Diagram/VolcanoPlot.js","Components/IOExplore/VolcanoPlotContainer.js","Components/Diagram/ForestPlot3.js","Components/IOExplore/ForestPlotContainer.js","styles/PlotStyles.js","Components/Modal/DescriptionModal.js","Components/IOExplore/ModalContainer.js","Components/IOExplore/Explore.js","Components/UtilComponents/CustomInputText.js","Components/BiomarkerEvaluation/GeneSearch.js","Components/BiomarkerEvaluation/BiomarkerEvaluationRequest.js","Components/BiomarkerEvaluation/ResultInfo.js","Components/BiomarkerEvaluation/BiomarkerEvaluationResult.js","example_output/sample-output.js","Components/Diagram/ForestPlot.js","Components/Test/Test.js","styles/GlobalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["colors","blue","red","purple","hover_blue","hover_red","orange_highlight","gray_text","light_gray","StyledNavigation","styled","div","NavigationContent","LogoContainer","StyledLinks","Navigation","alt","src","to","StyledFooter","FooterContent","FooterItem","Footer","className","Main","main","Layout","props","children","Fragment","defaultProps","page","StyledForm","flexDirection","StyledButton","button","disabled","color","background","fontColor","hover","ActionButton","onClick","text","style","useState","ready","colorScheme","setColorScheme","useEffect","type","StyledDropdown","Dropdown","CustomDropdown","value","options","onChange","placeholder","StyledMultiSelect","MultiSelect","checkbox","selectedTemplate","option","CustomMultiSelect","selectedItemTemplate","filter","VolcanoPlotInput","parameters","setParameters","onSubmit","onReset","signatureOptions","setSignatureOptions","outcomeOptions","setOutcomeOptions","modelOptions","setModelOptions","a","axios","get","res","console","log","data","signatures","map","item","label","unshift","outcome","model","setSelectOptions","e","selected","modelValue","modelOptionsCopy","JSON","parse","stringify","find","isDisabled","forEach","filtered","prev","onOutcomeSelect","outcomeValue","onModelSelect","selections","signatureOptionsCopy","includes","onSignatureSelect","subgroup","HomeContainer","HomeLogo","AppDescription","HomeInput","Home","redirect","setRedirect","pathname","state","preset","Plot","createPlotlyComponent","Plotly","withSize","plotId","getForestPlotData","onthefly","x","y","hovertext","pointColor","pointSize","plotData","setPlotData","undefined","selectedPointIndex","setSelectedPointIndex","effect_size","logPval","click_ids","i","getHoverText","getPointColor","getPointSize","pointLine","getPointOutline","points","size","point","se","push","index","pointColors","length","analysis_id","Math","log10","outlineColor","outlineWidth","width","hoverText","signature","round","pval","i2","pval_i2","showlegend","mode","hoverinfo","marker","line","name","layout","height","autosize","paper_bgcolor","plot_bgcolor","orientation","yaxis","ticklen","title","xaxis","zeroline","hovermode","font","family","margin","l","r","t","b","shapes","xref","x0","y0","x1","y1","dash","yref","graphDiv","config","responsive","displayModeBar","selectedPoint","pointIndex","onHover","d3","onUnhover","Container","PlotParameters","VolcanoPlotContainer","volcanoPlotData","getModalData","draw","individuals","dim","initial","base","overall","dataset","meta","min_low","min","d","Number","max_high","max","xScale","domain","range","scale","yScale","xAxeLabels","studyValues","list","abs","renderToolTip","key","id","tooltip","append","attr","study","html","primary_tissue","sequencing","n","toFixed","removeToolTip","remove","svg","selectAll","canvas","Object","keys","tooltipId","replace","datapoint","on","dataset_name","_95ci_low","_95ci_high","PlotHeader","ForestPlotContainer","forestPlotData","setPlotdata","asc","sort","setSort","tissueValue","setTissueValue","sequenceValue","setSequenceValue","tissueOptions","setTissueOptions","sequenceOptions","setSequenceOptions","tmp","tissue_type","localeCompare","filterVal","reverse","PlotContainer","StyledPlotArea","LoaderContainer","StyledModal","Modal","modalData","summary","pmid","removeModalData","display","justifyContent","alignItems","float","position","right","bottom","fontSize","marginLeft","as","href","target","rel","primary","ModalWrapper","ModalContainer","ExploreContainer","Explore","location","loading","setVolcanoPlotData","setForestPlotData","setModalData","getVolcanoPlotData","presetParams","post","params","StyledInputText","InputText","InputTextWithLabel","span","CustomInputText","withLabel","htmlFor","CustomAutoComplete","AutoComplete","GeneSearch","selectedGenes","suggestions","setSuggestions","searchGene","query","gene","gene_name","gene_id","completeMethod","field","multiple","StyledMessages","Messages","BiomarkerEvaluationRequest","messages","useRef","dataType","sex","drugType","sequencingType","email","submitting","dataTypeOptions","setDataTypeOptions","sexOptions","setSexOptions","primaryOptions","setPrimaryOptions","drugTypeOptions","setDrugTypeOptions","sequencingOptions","setSequencingOptions","studyOptions","setStudyOptions","submitRequest","preventDefault","g","error","current","show","severity","detail","sticky","getDropdownOptions","dropdownName","paramStr","uri","drugtype","buildQueryStr","paramList","paramName","str","concat","getDownstreamSex","getDownStreamPrimary","getDownstreamDrugType","getDownstreamSequencing","ref","marginRight","test","StyledResultInfo","ResultInfo","reqInfo","time_submitted","time_completed","input_genes","join","input_datatype","input_sex","s","input_primary","input_drug_type","input_sequencing","BiomarkerEvaluationResult","useParams","setReqInfo","outcomeDropdown","setOutcomeDropdown","modelDropdown","setModelDropdown","getData","models","studies","Test","coef","GlobalStyles","createGlobalStyle","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kNAWeA,EAXA,CACXC,KAAM,UACNC,IAAK,UACLC,OAAQ,SACRC,WAAY,UACZC,UAAW,UACXC,iBAAkB,UAClBC,UAAW,UACXC,WAAY,W,0zBCLT,IAAMC,EAAmBC,IAAOC,IAAV,IAGLX,EAAOC,MAGlBW,EAAoBF,IAAOC,IAAV,KAWjBE,EAAgBH,IAAOC,IAAV,KAQbG,EAAcJ,IAAOC,IAAV,KCGTI,EApBI,WACf,OACI,cAACN,EAAD,UACI,eAACG,EAAD,WACI,cAACC,EAAD,UACI,qBAAKG,IAAI,QAAQC,IAAI,oCAEzB,eAACH,EAAD,WACI,cAAC,IAAD,CAAMI,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,uBAAT,qCACA,cAAC,IAAD,CAAMA,GAAG,6BAAT,kCACA,cAAC,IAAD,CAAMA,GAAG,IAAT,mBACA,cAAC,IAAD,CAAMA,GAAG,IAAT,sBACA,cAAC,IAAD,CAAMA,GAAG,IAAT,8B,+qBCpBpB,IAAMC,EAAeT,IAAOC,IAAV,KASZS,EAAgBV,IAAOC,IAAV,IAMSX,EAAOC,MAM7BoB,EAAaX,IAAOC,IAAV,IACHX,EAAOC,KAGHD,EAAOC,MA0BTqB,EAnBA,WACX,OACI,cAACH,EAAD,UACI,eAACC,EAAD,WACI,eAACC,EAAD,WACI,sBAAME,UAAU,OAAhB,mBACA,sBAAMA,UAAU,UAAhB,eACA,sBAAMA,UAAU,OAAhB,qBACA,sBAAMA,UAAU,UAAhB,eACA,sBAAMA,UAAU,OAAhB,wBAEJ,cAACF,EAAD,2C,0OCzChB,IAAMG,EAAOd,IAAOe,KAAV,KAaJC,EAAS,SAACC,GAAW,IAChBC,EAAYD,EAAZC,SACP,OACI,eAAC,IAAMC,SAAP,WACI,cAAC,EAAD,IACA,cAACL,EAAD,UACKI,IAEL,cAAC,EAAD,QAeZF,EAAOI,aAAe,CAClBC,KAAM,GACNH,SAAU,MAGCF,Q,2uBC7Cf,IAkCeM,EAlCItB,IAAOC,IAAV,KACH,SAAAgB,GAAK,MAA4B,WAAxBA,EAAMM,cAA6B,OAAS,SAG5C,SAAAN,GAAK,OAAIA,EAAMM,iBAMpB,SAAAN,GAAK,MAA4B,WAAxBA,EAAMM,cAA6B,OAAS,SAG3C,SAAAN,GAAK,MAA4B,WAAxBA,EAAMM,cAA6B,gBAAkB,YAEjE,SAAAN,GAAK,MAA4B,WAAxBA,EAAMM,cAA6B,MAAQ,UAYjD,SAAAN,GAAK,MAA4B,WAAxBA,EAAMM,cAA6B,WAAa,gB,mbCzBpF,IAAMC,EAAexB,IAAOyB,OAAV,KASM,SAAAR,GAAK,OAAIA,EAAMS,SAAWpC,EAAOQ,WAAamB,EAAMU,MAAMC,cAErE,SAAAX,GAAK,OAAIA,EAAMY,UAAYZ,EAAMY,UAAY,aAC5C,SAAAZ,GAAK,OAAIA,EAAMS,SAAW,UAAY,aAGvB,SAAAT,GAAK,OAAIA,EAAMS,SAAWpC,EAAOQ,WAAamB,EAAMU,MAAMG,SACnE,SAAAb,GAAK,OAAIA,EAAMU,MAAMG,SAwC1BC,EApCM,SAACd,GAAW,IACtBJ,EAAmCI,EAAnCJ,UAAWmB,EAAwBf,EAAxBe,QAASC,EAAehB,EAAfgB,KAAMC,EAASjB,EAATiB,MADL,EAEUC,mBAAS,CAC3CP,WAAYtC,EAAOC,KACnBuC,MAAOxC,EAAOI,WACd0C,OAAO,IALiB,mBAErBC,EAFqB,KAERC,EAFQ,KAwB5B,OAhBAC,qBAAU,WACN,OAAOtB,EAAMuB,MACT,IAAK,QACDF,EAAe,CACXV,WAAYtC,EAAOE,IACnBsC,MAAOxC,EAAOK,UACdyC,OAAO,IAEX,MACJ,QACIE,EAAe,2BAAID,GAAL,IAAkBD,OAAO,QAIhD,IAGC,cAAC,IAAMjB,SAAP,UAEQkB,EAAYD,OACZ,cAACZ,EAAD,CAAcX,UAAWA,EAAWmB,QAASA,EAASL,MAAOU,EAAaH,MAAOA,EAAOR,SAAUT,EAAMS,SAAxG,SACKO,O,8YChDrB,IAAMQ,EAAiBzC,YAAO0C,WAAP1C,CAAH,IAEHV,EAAOO,UAIPP,EAAOO,WA0BT8C,EAfQ,SAAC1B,GAAW,IACxBJ,EAA8DI,EAA9DJ,UAAW+B,EAAmD3B,EAAnD2B,MAAOC,EAA4C5B,EAA5C4B,QAASC,EAAmC7B,EAAnC6B,SAAUC,EAAyB9B,EAAzB8B,YAAarB,EAAYT,EAAZS,SAEzD,OACE,cAACe,EAAD,CACE5B,UAAWA,EACX+B,MAAOA,EACPC,QAASA,EACTC,SAAUA,EACVC,YAAaA,EACbrB,SAAUA,K,ssBC3BlB,IAAMsB,EAAoBhD,YAAOiD,cAAPjD,CAAH,KAEJ,SAAAiB,GAAK,OAAIA,EAAMiC,SAAW,QAAU,SAGtC5D,EAAOO,UAIPP,EAAOO,WAmBlBsD,EAAmB,SAACC,GACtB,OAAIA,EACQ,sBAAMvC,UAAU,gBAAhB,SAAiCuC,IAEtC,aAqBIC,EAlBW,SAACpC,GAAW,IAC3BJ,EAAwEI,EAAxEJ,UAAW+B,EAA6D3B,EAA7D2B,MAAOC,EAAsD5B,EAAtD4B,QAASC,EAA6C7B,EAA7C6B,SAAUC,EAAmC9B,EAAnC8B,YAAarB,EAAsBT,EAAtBS,SAAUwB,EAAYjC,EAAZiC,SAEnE,OACI,cAACF,EAAD,CACInC,UAAWA,EACX+B,MAAOA,EACPC,QAASA,EACTC,SAAUA,EACVQ,qBAAsBH,EACtBI,QAAQ,EACRR,YAAaA,EACbrB,SAAUA,EACVwB,SAAUA,KC+FPM,GA7IU,SAACvC,GAAW,IAEzBwC,EAAiDxC,EAAjDwC,WAAYC,EAAqCzC,EAArCyC,cAAeC,EAAsB1C,EAAtB0C,SAAUC,EAAY3C,EAAZ2C,QAFb,EAIgBzB,mBAAS,IAJzB,mBAIzB0B,EAJyB,KAIPC,EAJO,OAKY3B,mBAAS,IALrB,mBAKzB4B,EALyB,KAKTC,EALS,OAMQ7B,mBAAS,IANjB,mBAMzB8B,EANyB,KAMXC,EANW,KA2FhC,OAbA3B,qBAAU,YACgB,uCAAG,8BAAA4B,EAAA,sEACHC,IAAMC,IAAI,gCADP,OACfC,EADe,OAErBC,QAAQC,IAAIF,EAAIG,OACZC,EAAaJ,EAAIG,KAAKC,WAAWC,KAAI,SAAAC,GAAI,MAAK,CAAChC,MAAOgC,EAAMC,MAAOD,EAAMlD,UAAU,OAC5EoD,QAAQ,CAAClC,MAAO,MAAOiC,MAAO,MAAOnD,UAAU,IAC1DoC,EAAoBY,GACpBV,EAAkBM,EAAIG,KAAKM,QAAQJ,KAAI,SAAAC,GAAI,MAAK,CAAChC,MAAOgC,EAAMC,MAAOD,EAAMlD,UAAU,OACrFwC,EAAgBI,EAAIG,KAAKO,MAAML,KAAI,SAAAC,GAAI,MAAK,CAAChC,MAAOgC,EAAMC,MAAOD,EAAMlD,UAAU,OAP5D,2CAAH,qDAStBuD,KACD,IAGC,eAAC,EAAD,CAAY1D,cAAeN,EAAMM,cAAjC,UACI,sBAAKV,UAAU,YAAf,UACI,qBAAKA,UAAU,QAAf,uBACA,cAAC,EAAD,CACIA,UAAU,QACV+B,MAAOa,EAAWsB,QAClBlC,QAASkB,EACTjB,SAAU,SAACoC,IAnFH,SAACC,GACrB,IAAIC,EAAa,GACbC,EAAmBC,KAAKC,MAAMD,KAAKE,UAAUvB,IAE3B,aAAnBkB,EAASvC,OACRyC,EAAiBI,MAAK,SAAAb,GAAI,MAAmB,mBAAfA,EAAKhC,SAA4B8C,YAAa,EAC5EL,EAAiB9B,QAAO,SAAAqB,GAAI,MAAmB,mBAAfA,EAAKhC,SAChC+C,SAAQ,SAAAC,GACLA,EAASF,YAAa,KAE9BN,EAAkC,mBAArB3B,EAAWuB,OAA8B,KAEtDK,EAAiBI,MAAK,SAAAb,GAAI,MAAmB,mBAAfA,EAAKhC,SAA4B8C,YAAa,EAC5EL,EAAiB9B,QAAO,SAAAqB,GAAI,MAAmB,mBAAfA,EAAKhC,SAChC+C,SAAQ,SAAAC,GACLA,EAASF,YAAa,KAE9BN,EAAkC,mBAArB3B,EAAWuB,OAA8B,IAE1DI,EAAgC,aAAnBD,EAASvC,MAAuB,iBAAwC,OAArBa,EAAWuB,MAAe,KAAK,MAC/Fd,EAAgBmB,GAEhB3B,GAAc,SAAAmC,GAAI,kCACXA,GADW,IAEdb,MAAOI,EACPL,QAASI,EAASvC,WA0DQkD,CAAgBZ,IAClCnC,YAAY,iBAGpB,sBAAKlC,UAAU,YAAf,UACI,qBAAKA,UAAU,QAAf,qBACA,cAAC,EAAD,CACIA,UAAU,QACV+B,MAAOa,EAAWuB,MAClBnC,QAASoB,EAAaV,QAAO,SAAAqB,GAAI,OAAwB,IAApBA,EAAKc,cAC1C5C,SAAU,SAACoC,IAhEL,SAACC,GACnB,IAAIY,EAAkC,mBAAnBZ,EAASvC,MAA6B,WAAoC,QAAvBa,EAAWsB,QAAkB,MAAQ,KAE3GrB,GAAc,SAAAmC,GAAI,kCACXA,GADW,IAEdb,MAAOG,EAASvC,MAChBmC,QAASgB,OA0DiBC,CAAcd,IAChCnC,YAAY,iBAGpB,sBAAKlC,UAAU,YAAf,UACI,qBAAKA,UAAU,QAAf,0BACA,cAAC,EAAD,CACIA,UAAU,QACV+B,MAAOa,EAAWiB,WAClB7B,QAASgB,EACTf,SAAU,SAACmD,IAhED,SAACA,GACvB,IAAIC,EAAuBZ,KAAKC,MAAMD,KAAKE,UAAU3B,IAClDoC,EAAWrD,MAAMuD,SAAS,QACzBD,EAAqBP,SAAQ,SAAAf,GACP,QAAfA,EAAKhC,MACJgC,EAAKlD,UAAW,EAEhBkD,EAAKlD,UAAW,KAGxBuE,EAAWrD,MAAQqD,EAAWrD,MAAMW,QAAO,SAAAqB,GAAI,MAAa,QAATA,MAEnDsB,EAAqBP,SAAQ,SAAAf,GACzBA,EAAKlD,UAAW,KAIxBoC,EAAoBoC,GACpBxC,EAAc,2BACPD,GADM,IAETiB,WAAYuB,EAAWrD,SA4CYwD,CAAkBH,IAC7C1C,QAAQ,EACRR,YAAY,iBAGpB,sBAAKlC,UAAU,wBAAf,UACI,cAAC,EAAD,CACIA,UAAU,OACVmB,QAAS,SAACkD,GAAOvB,KACjB1B,KAAK,SACLP,SAvHa,KAArB+B,EAAWuB,OACY,KAAvBvB,EAAWsB,SACa,KAAxBtB,EAAW4C,WAuHP,cAAC,EAAD,CACIrE,QAAS,SAACkD,GAAOtB,KACjB3B,KAAK,QACLO,KAAK,iB,i5BCvIzB,IAAM8D,GAAgBtG,IAAOC,IAAV,MASbsG,GAAWvG,IAAOC,IAAV,MAORuG,GAAiBxG,IAAOC,IAAV,MAUdwG,GAAYzG,IAAOC,IAAV,MA2DAyG,GA5CF,WAAO,IAAD,EACiBvE,oBAAS,GAD1B,mBACRwE,EADQ,KACEC,EADF,OAEqBzE,mBAAS,CAACuC,WAAY,CAAC,OAAQK,QAAS,GAAIC,MAAO,KAFxE,mBAERvB,EAFQ,KAEIC,EAFJ,KAITC,EAAQ,uCAAG,sBAAAQ,EAAA,sDACbyC,GAAY,GADC,2CAAH,qDAId,OACI,cAAC,EAAD,UAEQD,EACA,cAAC,IAAD,CACInG,GAAI,CACAqG,SAAU,uBACVC,MAAO,CAAEC,OAAQtD,MAIzB,eAAC6C,GAAD,WACI,cAACC,GAAD,UACI,qBAAKjG,IAAI,YAAYC,IAAI,mCAE7B,eAACiG,GAAD,wEAEI,uBAFJ,gDAKA,eAACC,GAAD,WACI,qBAAK5F,UAAU,UAAf,iDACA,cAAC,GAAD,CACI4C,WAAYA,EACZC,cAAeA,EACfC,SAAUA,EACVC,QAAS,WAAOF,EAAc,CAACgB,WAAY,CAAC,OAAQK,QAAS,GAAIC,MAAO,MACxEzD,cAAc,oB,8EC1EpCyF,GAAOC,KAAsBC,MA4OpBC,0BAjOK,SAAClG,GAAW,IACrBwD,EAAwExD,EAAxEwD,KAAM2C,EAAkEnG,EAAlEmG,OAAQC,EAA0DpG,EAA1DoG,kBAAmB5D,EAAuCxC,EAAvCwC,WAAYC,EAA2BzC,EAA3ByC,cAAe4D,EAAYrG,EAAZqG,SADxC,EAGKnF,mBAAS,CACrCoF,EAAG,GACHC,EAAG,GACHC,UAAW,GACXC,WAAY,GACZC,UAAW,KARY,mBAGpBC,EAHoB,KAGVC,EAHU,OAWyB1F,wBAAS2F,GAXlC,mBAWpBC,EAXoB,KAWAC,EAXA,KAa3BzF,qBAAU,WACNgC,QAAQC,IAAIC,GACZoD,EAAY,CACRN,EAAG9C,EAAKE,KAAI,SAAAC,GAAI,OAAKA,EAAKqD,eAC1BT,EAAG/C,EAAKE,KAAI,SAAAC,GAAI,OAAKA,EAAKsD,WAC1BC,UAAW1D,EAAKE,KAAI,SAACC,EAAMwD,GAAP,OAAcA,KAClCX,UAAWY,EAAa5D,GACxBiD,WAAYY,EAAc7D,GAC1BkD,UAAWY,EAAa9D,GACxB+D,UAAWC,EAAgBhE,OAGhC,IAEHlC,qBAAU,WACN,GAAiC,qBAAvBwF,EAAmC,CACzCxD,QAAQC,IAAIuD,GACZ,IAAIL,EAAaY,EAAc7D,EAAMsD,GACjCS,EAAYC,EAAgBhE,EAAMsD,GACtCF,EAAY,2BACLD,GADI,IAEPF,WAAYA,EACZc,UAAWA,QAIpB,CAACT,IAEJ,IAeMQ,EAAe,SAACG,GAClB,IAAIC,EAAO,GAYX,OAXAD,EAAO/C,SAAQ,SAAAiD,GACRA,EAAMC,IAAM,IACXF,EAAKG,KAAK,GACLF,EAAMC,GAAK,KAAQD,EAAMC,IAAM,GACpCF,EAAKG,KAAK,GACLF,EAAMC,GAAK,IAAOD,EAAMC,IAAM,IACnCF,EAAKG,KAAK,IACLF,EAAMC,GAAK,KAChBF,EAAKG,KAAK,OAGXH,GAOLL,EAAgB,SAACI,GAEnB,IAFkD,IAAvBK,EAAsB,4DAAdjB,EAC/BkB,EAAc,GACVZ,EAAI,EAAGA,EAAIM,EAAOO,OAAQb,IAC3BA,IAAMW,EAKNL,EAAON,GAAGc,YACTF,EAAYF,KAAKxJ,EAAOG,QAErBiJ,EAAON,GAAGF,SAAWiB,KAAKC,MAAM,KAC/BJ,EAAYF,KAAKxJ,EAAOO,WAErB6I,EAAON,GAAGH,YAAc,EACvBe,EAAYF,KAAKxJ,EAAOE,KAExBwJ,EAAYF,KAAKxJ,EAAOC,MAbhCyJ,EAAYF,KAAKxJ,EAAOM,kBAkBhC,OAAOoJ,GASLP,EAAkB,SAACC,GAA6B,IAArBK,EAAoB,4DAAdjB,EAC/BuB,EAAe,GACfC,EAAe,GAUnB,OATAZ,EAAO/C,SAAQ,SAACiD,EAAOR,GAChBA,IAAMW,GACLM,EAAaP,KAAKxJ,EAAOO,WACzByJ,EAAaR,KAAK,KAElBO,EAAaP,UAAKhB,GAClBwB,EAAaR,KAAK,OAGnB,CAAEnH,MAAO0H,EAAcE,MAAOD,IAOnCjB,EAAe,SAACK,GAClB,IAAIc,EAAY,GAWhB,OAVAd,EAAO/C,SAAQ,SAAAiD,GACXY,EAAUV,KACN,UAAGxB,EAAW,GAAH,oBAAqBsB,EAAMvC,SAA3B,SAAX,qBACcuC,EAAMa,UAAYb,EAAMa,UAAY,SADlD,wBAESN,KAAKO,MAA0B,IAApBd,EAAMX,aAAsB,IAFhD,2BAGYkB,KAAKO,MAAmB,IAAbd,EAAMe,MAAgB,IAH7C,sBAIOR,KAAKO,MAAiB,IAAXd,EAAMgB,IAAc,IAJtC,8BAKeT,KAAKO,MAAsB,IAAhBd,EAAMiB,SAAkB,SAGnDL,GAGX,OACI,8BACI,cAACxC,GAAD,CACIvC,KAAM,CACF,CACIqF,YAAY,EACZtH,KAAM,UACNuH,KAAM,UACNxC,EAAGK,EAASL,EACZC,EAAGI,EAASJ,EACZW,UAAWP,EAASO,UACpB6B,UAAW,OACXvC,UAAWG,EAASH,UACpBwC,OAAQ,CACJtI,MAAOiG,EAASF,WAChBiB,KAAMf,EAASD,UACfuC,KAAMtC,EAASY,WAEnB2B,KAAM,WAGdC,OAAQ,CACJb,MAAOtI,EAAM0H,KAAKY,MAClBc,OAA2B,GAAnBpJ,EAAM0H,KAAKY,MACnBe,UAAU,EACVC,cAAe,QACfC,aAAc,QACdC,YAAa,IACbC,MAAO,CAAEC,QAAS,EAAGC,MAAO,kBAAkB,YAAa,GAC3DC,MAAO,CAAED,MAAO,eAAgBE,UAAU,EAAM,YAAa,GAC7DC,UAAW,UACXC,KAAM,CACFrC,KAAM,GACNsC,OAAQ,aAEZC,OAAQ,CACJC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,IAEPC,OAAQ,CACJ,CACI/I,KAAM,OACNgJ,KAAM,QACNC,GAAI,EACJC,IAAKvC,KAAKC,MAAM,KAChBuC,GAAI,EACJC,IAAKzC,KAAKC,MAAM,KAChBc,KAAM,CACFvI,MAAOrC,EAAOQ,WACdyJ,MAAO,EACPsC,KAAM,QAGd,CACIrJ,KAAM,OACNgJ,KAAM,IACNM,KAAM,QACNL,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJ1B,KAAM,CACFvI,MAAOrC,EAAOQ,WACdyJ,MAAO,EACPsC,KAAM,UAKtBE,SAAU3E,EACV4E,OAAQ,CACJC,YAAY,EACZC,gBAAgB,GAEpBlK,QAAS,SAACyC,GAAD,OAhLL,SAACA,GACb,IAAI0H,EAAgBlL,EAAMwD,KAAKA,EAAKiE,OAAO,GAAG0D,YAC9CpE,EAAsBvD,EAAKiE,OAAO,GAAG0D,YACrC1I,EAAc,2BAAID,GAAL,IAAiBgG,UAAW0C,EAAc1C,aACvDpC,EAAkB,CACdoC,UAAW0C,EAAc1C,UACzB1E,QAASoH,EAAcpH,QACvBC,MAAOmH,EAAcnH,QAyKEhD,CAAQyC,IAC3B4H,QAAS,WAjOrBC,KAAa,aAAapK,MAAM,SAAU,YAkO9BqK,UAAW,WA9NvBD,KAAa,aAAapK,MAAM,SAAU,Y,yZCZ9C,IAAMsK,GAAYxM,IAAOC,IAAV,MAKTwM,GAAiBzM,IAAOC,IAAV,MAsCLyM,GAxBc,SAACzL,GAAW,IAE7BwC,EAA4ExC,EAA5EwC,WAAYC,EAAgEzC,EAAhEyC,cAAeiJ,EAAiD1L,EAAjD0L,gBAAiBtF,EAAgCpG,EAAhCoG,kBAAmBC,EAAarG,EAAbqG,SAEvE,OACI,eAACkF,GAAD,WACI,8CACA,eAACC,GAAD,WACI,sBAAK5L,UAAU,gBAAf,sBAAwC,sBAAMA,UAAU,QAAhB,SAAyB4C,EAAWsB,aAC5E,sBAAKlE,UAAU,gBAAf,oBAAsC,sBAAMA,UAAU,QAAhB,SAAyB4C,EAAWuB,WACxEsC,EAAiH,GAAtG,sBAAKzG,UAAU,gBAAf,uBAAyC,sBAAMA,UAAU,QAAhB,SAAyB4C,EAAW4C,iBAE9F,cAAC,GAAD,CACIe,OAAO,eACP3D,WAAYA,EACZC,cAAeA,EACfe,KAAMkI,EAAgBlI,KACtB4C,kBAAmBA,EACnBC,SAAUA,Q,yfC7B1B,IAAMkF,GAAYxM,IAAOC,IAAV,MAuTAkH,0BAhSI,SAAClG,GAEhB,IAAM2L,EAAe3L,EAAM2L,aAE3BrK,qBAAU,WACNsK,MAED,CAAC5L,EAAM0H,KAAKY,MAAOtI,EAAM6L,cAE5B,IAAMD,EAAO,WAET,IAAME,EAAM,CACRxD,MAAOtI,EAAM0H,KAAKY,MAClBc,OAAQpJ,EAAM0H,KAAKY,OAGjByD,EACQ,EADRA,EAEQ,GAFRA,EAGU,GAHVA,EAKU,IALVA,EAMW,GAGXC,EAAO,WACT,MAAsB,OAAlBC,EAAQlI,MAAuB,EAC5B,GAMLmI,EAAUlM,EAAM6L,YAChBI,EAAUjM,EAAMmM,KAAK,GAKrBC,EAAU,WACZ,OAAOlE,KAAKmE,IAAL,MAAAnE,KAAI,aAAQgE,EAAQxI,KAAI,SAAU4I,GAAI,OAAOC,OAAOD,EAAC,iBAG1DE,EAAW,WACb,OAAOtE,KAAKuE,IAAL,MAAAvE,KAAI,aAAQgE,EAAQxI,KAAI,SAAU4I,GAAI,OAAOC,OAAOD,EAAC,kBAM1DI,EAAQ,SAACJ,GAKX,OAJcjB,OAETsB,OAAO,CAACP,IAAWI,MACnBI,MAAM,CAACb,EAAoBD,EAAIxD,MAAQyD,GACrCc,CAAMP,IAGXQ,EAAQ,SAACR,GAKX,OAJcjB,OAETsB,OAAO,EAAE,EAAGT,EAAQlE,OAAS,IAC7B4E,MAAM,CAAC,GAAI,KACTC,CAAMP,IAkBXS,EAAY,WAId,IAHA,IACIC,EAAc,CAACZ,IAAWlE,KAAKO,MAA4B,IAAtBwD,EAAQjF,aAAqB,IAAMwF,KACxES,EAAM,CAACjB,KACF7E,EAAI,EAAEA,EAAI6F,EAAYhF,OAASb,IAChCe,KAAKgF,IAAIR,EAAOM,EAAY7F,IAAKuF,EAAOV,MAJ9B,IAKViB,EAAKpF,KAAKmF,EAAY7F,IAC9B,OAAO8F,GAgBLE,EAAgB,SAACC,EAAKC,EAAI1F,GAC5B,IAAI2F,EAAUjC,KAAA,WAAcrL,EAAMqN,GAApB,kBACTE,OAAO,OACPC,KAAK,KAAMH,GACXG,KAAK,QAAS,WACdvM,MAAM,OAJG,UAIQyL,EAAOF,KAAc,IAJ7B,OAKTvL,MAAM,MALG,UAKO6L,EAAOM,GAAO,GALrB,OAMXzF,EAAM8F,MACLH,EAAQI,KACJ/F,EAAM8F,MAAQ,KAAO9F,EAAMgG,eAAiB,KAAOhG,EAAMiG,WAAzDjG,YACaA,EAAMkG,EACnB,sBAAwBtB,OAAO5E,EAAMX,aAAa8G,QAAQ,GAC1D,iBAAmBvB,OAAO5E,EAAMe,MAAMoF,QAAQ,IAElDR,EAAQI,KACJ,6BACa/F,EAAMkG,EACnB,sBAAwBtB,OAAO5E,EAAMX,aAAa8G,QAAQ,GAC1D,iBAAmBvB,OAAO5E,EAAMe,MAAMoF,QAAQ,KAIpDC,EAAgB,SAACV,GACnBhC,KAAUgC,GAAIW,UAMdC,EAAM5C,KAAA,WAAcrL,EAAMqN,KAC9BY,EAAIC,UAAU,KAAKF,SACnBC,EAAIT,KAAK,QAAS1B,EAAIxD,OAAOkF,KAAK,SAAU1B,EAAI1C,QAChD,IAAI+E,EAASF,EAAIV,OAAO,KAGxBY,EAAOZ,OAAO,QACTC,KAAK,KAAM,QACXA,KAAK,KAAMd,EAAON,KAAWL,GAC7ByB,KAAK,KAAMd,EAAOF,KAAYT,GAC9ByB,KAAK,KAAMV,EAAOZ,EAAQlE,SAC1BwF,KAAK,KAAMV,EAAOZ,EAAQlE,SAC1B/G,MAAM,SAAU,WAChBA,MAAM,eAAgB,OAE3BkN,EAAOZ,OAAO,QACTC,KAAK,KAAM,QACXA,KAAK,KAAMd,EAAOV,MAClBwB,KAAK,KAAMd,EAAOV,MAClBwB,KAAK,KAAMV,GAAQ,IACnBU,KAAK,KAAMV,EAAOZ,EAAQlE,SAC1B/G,MAAM,SAAU,WAChBA,MAAM,eAAgB,OAE3BmN,OAAOC,KAAKtB,KAAcrI,SAAQ,SAAC0I,EAAKtF,GACpCqG,EAAOZ,OAAO,QACTC,KAAK,KAAM,QAAS1F,GACpB0F,KAAK,IAAKd,EAAOK,IAAajF,KAC9B0F,KAAK,IAAKV,EAAOZ,EAAQlE,OAAS,MAClCwF,KAAK,YAAazB,GAClByB,KAAK,cAAe,WACpBA,KAAK,OAAQ,WACbA,KAAK,cAAe,UACpBxM,KAAK+L,IAAajF,OAG3BsG,OAAOC,KAAKtB,KAAcrI,SAAQ,SAAC0I,EAAKtF,GACpCqG,EAAOZ,OAAO,QACTC,KAAK,KAAM,WAAY1F,GACvB0F,KAAK,KAAMd,EAAOK,IAAajF,KAC/B0F,KAAK,KAAMd,EAAOK,IAAajF,KAC/B0F,KAAK,KAAMV,EAAOZ,EAAQlE,QAAU,GACpCwF,KAAK,KAAMV,EAAOZ,EAAQlE,QAAU,GACpC/G,MAAM,SAAU,WAChBA,MAAM,eAAgB,QAG/BkN,EAAOZ,OAAO,QACTC,KAAK,IAAKd,EAAO,IACjBc,KAAK,IAAKV,EAAOZ,EAAQlE,OAAS,MAClCwF,KAAK,YAAazB,EAAmB,GACrCyB,KAAK,cAAe,WACpBA,KAAK,OAAQ,WACbA,KAAK,cAAe,UACpBxM,KAAK,gBAGVoN,OAAOC,KAAKrO,EAAM6L,aAAanH,SAAQ,SAAC0I,EAAKtF,GAEzC,IAAIwG,EAAS,gBAAYpC,EAAQkB,GAAKK,MAAMc,QAAQ,aAAc,KAE9DC,EAAYP,EAAIV,OAAO,KACtBC,KAAK,KAAM,aAAc1F,GACzB0F,KAAK,QAAS,aACdvM,MAAM,SAAU,QAChBwN,GAAG,SAAS,YAxGL,SAACjL,GACb,IAAI0H,EAAgBgB,EAAQ1I,GAAMiK,MAClC9B,EAAa,CACT+C,aAAcxD,IAsGVnK,CAASqM,MAEZqB,GAAG,aAAa,WACbtB,EAAcC,EAAKkB,EAAWpC,EAAQkB,OAEzCqB,GAAG,YAAY,WACZV,EAAc,IAAD,OAAKO,OAG1BE,EAAUjB,OAAO,KACZC,KAAK,KAAM,OAAO1F,GAClB0F,KAAK,QAAS,aACdD,OAAO,QACPC,KAAK,IAAK,GACVA,KAAK,IAAKV,EAAOhF,IACjB0F,KAAK,YAAazB,GAClByB,KAAK,OAAQ,WACbxM,KARL,UAQakL,EAAQkB,GAAKK,MAR1B,aAQoCvB,EAAQkB,GAAKO,eARjD,aAQoEzB,EAAQkB,GAAKQ,WARjF,MAUAY,EAAUjB,OAAO,QACZC,KAAK,KAAM,YAAc1F,GACzB0F,KAAK,KAAMd,EAAOH,OAAOL,EAAQkB,GAAR,aACzBI,KAAK,KAAMd,EAAOH,OAAOL,EAAQkB,GAAR,cACzBI,KAAK,KAAMV,EAAOhF,IAClB0F,KAAK,KAAMV,EAAOhF,IAClB7G,MAAM,SAAU,WAChBA,MAAM,eAAgB,KAE3BuN,EAAUjB,OAAO,SACZvM,KADL,gBACmBkL,EAAQkB,GAAR,UADnB,aACiDlB,EAAQkB,GAAR,WADjD,MAGAoB,EAAUjB,OAAO,QACZC,KAAK,KAAM,YAAa1F,GACxB0F,KAAK,IAAKd,EAAOH,OAAOL,EAAQkB,GAAR,cAAgCrB,EAAmB,GAC3EyB,KAAK,IAAKV,EAAOhF,GAASiE,EAAmB,GAC7C9K,MAAM,QAAS8K,GACf9K,MAAM,SAAU8K,GAChB9K,MAAM,OAAQ,cAIvBkN,EAAOZ,OAAO,QACTC,KAAK,KAAM,aACXA,KAAK,KAAMd,EAAOT,EAAQjF,cAC1BwG,KAAK,KAAMd,EAAOT,EAAQjF,cAC1BwG,KAAK,KAAMV,GAAQ,IACnBU,KAAK,KAAMV,EAAOZ,EAAQlE,SAC1BwF,KAAK,mBAAoB,OACzBvM,MAAM,SAAU5C,EAAOM,kBACvBsC,MAAM,eAAgB,KACtBA,MAAM,SAAU,QAChBwN,GAAG,aAAa,WACbtB,GAAe,EAAG,kBAAmBlB,MAExCwC,GAAG,YAAY,WACZV,EAAc,uBAGtBI,EAAOZ,OAAO,QACTC,KAAK,KAAM,qBACXA,KAAK,IAAK,GACVA,KAAK,IAAKV,GAAQ,IAClBU,KAAK,YAAazB,GAClByB,KAAK,OAAQ,WACbxM,KANL,uBAQAmN,EAAOZ,OAAO,WACTC,KAAK,KAAM,WACXA,KAAK,SApMFd,EAAOH,OAAON,EAAQ0C,YAAc,KAAM7B,GAAQ,GAAI,IACtDJ,EAAOH,OAAON,EAAQjF,cAAgB,MAAO8F,GAAQ,GAAMf,EAAiB,GAAK,IACjFW,EAAOH,OAAON,EAAQ2C,aAAc,KAAM9B,GAAQ,GAAI,IACtDJ,EAAOH,OAAON,EAAQjF,cAAgB,MAAO8F,GAAQ,GAAMf,EAAiB,GAAK,KAkMpF9K,MAAM,OAAQ5C,EAAOM,kBACrBsC,MAAM,SAAU,QAChBwN,GAAG,aAAa,WACbtB,GAAe,EAAG,kBAAmBlB,MAExCwC,GAAG,YAAY,WACZV,EAAc,wBAO1B,OACI,cAAC,GAAD,CAAWV,GAAE,UAAKrN,EAAMqN,GAAX,iBAAb,SACI,qBAAKA,GAAIrN,EAAMqN,U,+mCCxT3B,IAAM9B,GAAYxM,IAAOC,IAAV,MAIT6P,GAAa9P,IAAOC,IAAV,MAuMD8P,GApJa,SAAC9O,GAAW,IAE7BwC,EAA4CxC,EAA5CwC,WAAYuM,EAAgC/O,EAAhC+O,eAAgBpD,EAAgB3L,EAAhB2L,aAFA,EAGHzK,mBAAS,CAACC,OAAO,EAAO0K,YAAa,GAAIM,KAAM,KAH5C,mBAG5BxF,EAH4B,KAGlBqI,EAHkB,OAIX9N,mBAAS,CAACS,MAAO,cAAesN,KAAK,IAJ1B,mBAI5BC,EAJ4B,KAItBC,EAJsB,OAKGjO,mBAAS,OALZ,mBAK5BkO,EAL4B,KAKfC,EALe,OAMOnO,mBAAS,OANhB,mBAM5BoO,EAN4B,KAMbC,EANa,OAQOrO,mBAAS,IARhB,mBAQ5BsO,EAR4B,KAQbC,EARa,OASWvO,mBAAS,IATpB,mBAS5BwO,EAT4B,KASXC,EATW,KAyEnC,OA1DArO,qBAAU,WAGN,IAAIsO,EAAMb,EAAevL,KAAK2I,KAAK7J,QAAO,SAAAqB,GAAI,MAAsB,UAAlBA,EAAKyB,UAAwBzB,EAAKkK,GAAK,MACzF+B,EAAMA,EAAIlM,KAAI,SAAAC,GAAI,MAAK,CAAChC,MAAOgC,EAAKkM,YAAajM,MAAOD,EAAKkM,gBAAeX,MAAK,SAAChM,EAAGmH,GAAJ,OAAWnH,EAAEU,MAAMkM,cAAczF,EAAEzG,WAChHC,QAAQ,CAAClC,MAAO,MAAOiC,MAAO,QAElC6L,EAAiBG,IAGjBA,GADAA,EAAMb,EAAevL,KAAK2I,KAAK7J,QAAO,SAAAqB,GAAI,MAAsB,eAAlBA,EAAKyB,UAA6BzB,EAAKkK,GAAK,MAChFnK,KAAI,SAAAC,GAAI,MAAK,CAAChC,MAAOgC,EAAKkM,YAAajM,MAAOD,EAAKkM,gBAAeX,MAAK,SAAChM,EAAGmH,GAAJ,OAAWnH,EAAEU,MAAMkM,cAAczF,EAAEzG,WAChHC,QAAQ,CAAClC,MAAO,MAAOiC,MAAO,QAElC+L,EAAmBC,GAEnBZ,EAAY,CACRnD,YAAa,aAAIkD,EAAevL,KAAKqI,aAAaqD,MAAK,SAAChM,EAAGmH,GAAJ,OAAUnH,EAAEgM,EAAKvN,OAAS0I,EAAE6E,EAAKvN,UACxFwK,KAAM4C,EAAevL,KAAK2I,KAAK7J,QAAO,SAAAqB,GAAI,MAAyB,QAArBA,EAAKkM,eACnD1O,OAAO,MAGZ,IAEHG,qBAAU,WACN,IAAIyO,EAAY,MACZlE,EAAW,aAAOkD,EAAevL,KAAKqI,aACtCM,EAAI,aAAO4C,EAAevL,KAAK2I,MAEhB,QAAhBiD,IACCvD,EAAcA,EAAYvJ,QAAO,SAAAqB,GAAI,OAAIA,EAAKgK,iBAAmByB,KACjEW,EAAYX,EACZG,EAAiB,QAGA,QAAlBD,IACCzD,EAAcA,EAAYvJ,QAAO,SAAAqB,GAAI,OAAIA,EAAKiK,aAAe0B,KAC7DS,EAAYT,EACZD,EAAe,QAGD,gBAAfH,EAAKvN,MACJkK,EAAYqD,MAAK,SAAChM,EAAGmH,GAAJ,OAAW6E,EAAKD,IAAM/L,EAAEgM,EAAKvN,OAAS0I,EAAE6E,EAAKvN,OAAS0I,EAAE6E,EAAKvN,OAASuB,EAAEgM,EAAKvN,WAE9FkK,EAAYqD,MAAK,SAAChM,EAAGmH,GAAJ,OAAUnH,EAAEgM,EAAKvN,OAAS0I,EAAE6E,EAAKvN,UAC9CuN,EAAKD,KACLpD,EAAYmE,WAIpBnE,EAAYqD,MAAK,SAAChM,EAAGmH,GAAJ,OAAW6E,EAAKD,IAAM/L,EAAEgM,EAAKvN,OAAS0I,EAAE6E,EAAKvN,OAAS0I,EAAE6E,EAAKvN,OAASuB,EAAEgM,EAAKvN,UAC9FqN,GAAY,SAAApK,GAAI,kCACTA,GADS,IAEZiH,YAAaA,EACbM,KAAMA,EAAK7J,QAAO,SAAAqB,GAAI,OAAIA,EAAKkM,cAAgBE,YAGpD,CAACb,EAAME,EAAaE,IAGnB,8BAEQ3I,EAASxF,OACT,eAAC,GAAD,WACI,6CACA,eAAC0N,GAAD,WACI,sBAAKjP,UAAU,gBAAf,wBACe,sBAAMA,UAAU,QAAhB,SAAyB4C,EAAWgG,UAAYhG,EAAWgG,UAAY,cAEtF,sBAAK5I,UAAU,SAAf,UACI,sBAAMA,UAAU,QAAhB,sBACA,cAAC,EAAD,CACIA,UAAU,WACV+B,MAAOuN,EAAKvN,MACZC,QA9ER,CAChB,CAACD,MAAO,cAAeiC,MAAO,gBAC9B,CAACjC,MAAO,QAASiC,MAAO,YA6EA/B,SAAU,SAACoC,GAAOkL,GAAQ,SAAAvK,GAAI,kCAASA,GAAT,IAAejD,MAAOsC,EAAEtC,YACtDG,YAAY,cAEhB,wBAAQlC,UAAU,cAAcmB,QAAS,SAACkD,GAAOkL,GAAQ,SAAAvK,GAAI,kCAASA,GAAT,IAAeqK,KAAMrK,EAAKqK,UAAvF,SAEQC,EAAKD,IAAM,cAAC,KAAD,IAAuB,cAAC,KAAD,YAKlD,eAACJ,GAAD,WACI,qBAAKjP,UAAU,QAAf,yBACA,sBAAKA,UAAU,SAAf,UACI,sBAAMA,UAAU,QAAhB,0BACA,cAAC,EAAD,CACIA,UAAU,WACV+B,MAAOyN,EACPxN,QAAS4N,EACT3N,SAAU,SAACoC,GAAOoL,EAAepL,EAAEtC,QACnClB,SAA4B,QAAlB6O,EACVxN,YAAY,iBAGpB,sBAAKlC,UAAU,SAAf,UACI,sBAAMA,UAAU,QAAhB,8BACA,cAAC,EAAD,CACIA,UAAU,WACV+B,MAAO2N,EACP1N,QAAS8N,EACT7N,SAAU,SAACoC,GAAOsL,EAAiBtL,EAAEtC,QACrClB,SAA0B,QAAhB2O,EACVtN,YAAY,oBAIxB,eAAC+M,GAAD,WACI,qBAAKjP,UAAU,QAAf,mCACA,sBAAKA,UAAU,mBAAf,UACI,sBAAKA,UAAU,YAAf,kBAEI,uBAAMA,UAAU,QAAhB,UAAyB2M,OAAO5F,EAASwF,KAAK,GAAGnF,aAAa8G,QAAQ,GAAtE,OAFJ,UAII,uBAAMlO,UAAU,QAAhB,UAAyB2M,OAAO5F,EAASwF,KAAK,GAAGwC,WAAWb,QAAQ,GAApE,OAJJ,IAMI,sBAAMlO,UAAU,QAAhB,SAAyB2M,OAAO5F,EAASwF,KAAK,GAAGyC,YAAYd,QAAQ,KANzE,OASA,sBAAKlO,UAAU,YAAf,sBAAoC,sBAAMA,UAAU,QAAhB,SAAyB2M,OAAO5F,EAASwF,KAAK,GAAGzD,MAAMoF,QAAQ,QACnG,sBAAKlO,UAAU,YAAf,sBAAoC,sBAAMA,UAAU,QAAhB,SAAyB2M,OAAO5F,EAASwF,KAAK,GAAGxD,IAAImF,QAAQ,QACjG,sBAAKlO,UAAU,YAAf,sBAAoC,sBAAMA,UAAU,QAAhB,SAAyB2M,OAAO5F,EAASwF,KAAK,GAAGvD,SAASkF,QAAQ,cAG9G,cAAC,GAAD,CAAYT,GAAG,aAAaxB,YAAalF,EAASkF,YAAaM,KAAMxF,EAASwF,KAAMR,aAAcA,U,8kBCxM/G,IAAMsE,GAAgBlR,IAAOC,IAAV,MAYbkR,GAAiBnR,IAAOC,IAAV,MACd,SAAAgB,GAAK,OAAIA,EAAMsI,SAOf6H,GAAkBpR,IAAOC,IAAV,M,m9BClB5B,IAAMuB,GAAexB,IAAOyB,OAAV,KAUMnC,EAAOC,MAUzB8R,GAAcrR,IAAOC,IAAV,KAkBA,YACFX,EAAOQ,YAoEPwR,GAzDM,SAACrQ,GAAW,IAAD,EAOxBA,EAAMsQ,UAAU9M,KALhBkL,EAFwB,EAExBA,aACA/E,EAHwB,EAGxBA,MAEA4G,EALwB,EAKxBA,QACAC,EANwB,EAMxBA,KAEEC,EAAkBzQ,EAAMyQ,gBAM9B,OACI,eAACL,GAAD,WACI,gCACI,qBAAKnP,MAAO,CAACyP,QAAS,OAAQC,eAAgB,SAAUC,WAAY,UAApE,SACI,+BAAKlC,EAAL,cAEJ,8BAAK,6BAAK/E,MACV,8BAAM4G,IAAc,0BAIxB,uBACA,sBAAKtP,MAAO,CAAEyP,QAAS,OAAQG,MAAO,SAAUC,SAAS,WAAYC,MAAM,OAAQC,OAAO,QAA1F,UAEI,8BACI,cAAC,GAAD,CACI/P,MAAO,CAACqH,MAAO,OAAQc,OAAQ,OAAQ6H,SAAU,OAAQC,WAAY,SAErEC,GAAG,IACHC,KAAMZ,EACNa,OAAO,SACPC,IAAI,WACJC,SAAO,EAPX,sBAWJ,8BACI,cAAC,GAAD,CACItQ,MAAO,CAACqH,MAAO,OAAQc,OAAQ,OAAQ6H,SAAU,OAAQC,WAAY,QACrEC,GAAG,IACHpQ,QAlCD,WACf0P,KAkCgBY,OAAO,SACPC,IAAI,WACJC,SAAO,EANX,4B,saCzFpB,IAAMC,GAAezS,IAAOC,IAAV,KAePX,EAAOO,WAiBH6S,GAbQ,SAACzR,GAAW,IACvBsQ,EAA+BtQ,EAA/BsQ,UAAWG,EAAoBzQ,EAApByQ,gBACnB,OACI,cAACe,GAAD,UAEQ,cAAC,GAAD,CAAOlB,UAAWA,EACXG,gBAAmBA,O,2FClB1C,IAAMiB,GAAmB3S,IAAOC,IAAV,MA0HP2S,GAtHC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACM1Q,mBAAS,CAACuC,WAAY,CAAC,OAAQK,QAAS,GAAIC,MAAO,KADzD,mBACvBvB,EADuB,KACXC,EADW,OAEgBvB,mBAAS,CAACsC,KAAM,GAAIqO,SAAS,EAAO1Q,OAAO,IAF3D,mBAEvBuK,EAFuB,KAENoG,EAFM,OAGc5Q,mBAAS,CAACsC,KAAM,GAAIqO,SAAS,EAAO1Q,OAAO,IAHzD,mBAGvB4N,EAHuB,KAGPgD,EAHO,OAIE7Q,mBAAS,CAACsC,KAAM,GAAIrC,OAAO,IAJ7B,mBAIvBmP,EAJuB,KAIZ0B,EAJY,KAMxBC,EAAkB,uCAAG,0CAAA/O,EAAA,6DAAOgP,EAAP,+BAAsB,KAC7CJ,EAAmB,CAACtO,KAAM,GAAIqO,SAAS,EAAM1Q,OAAO,IACpD4Q,EAAkB,CAACvO,KAAM,GAAIqO,SAAS,EAAO1Q,OAAO,IAF7B,SAGLgC,IAAMgP,KAAK,4BAA6BD,GAA8B1P,GAHjE,OAGjBa,EAHiB,OAIvByO,EAAmB,CAACtO,KAAMH,EAAIG,KAAMqO,SAAS,EAAO1Q,OAAO,IAJpC,2CAAH,qDAOlBiF,EAAiB,uCAAG,WAAOgM,GAAP,eAAAlP,EAAA,6DACtB6O,EAAkB,CAACvO,KAAM,GAAIqO,SAAS,EAAM1Q,OAAO,IAD7B,SAEJgC,IAAMgP,KAAK,2BAA4BC,GAFnC,OAEhB/O,EAFgB,OAGtBC,QAAQC,IAAIF,EAAIG,MAChBuO,EAAkB,CAACvO,KAAMH,EAAIG,KAAMqO,SAAS,EAAO1Q,OAAO,IAJpC,2CAAH,sDAOjBwK,EAAY,uCAAG,WAAOyG,GAAP,eAAAlP,EAAA,6DACjB8O,EAAa,CAACxO,KAAM,GAAIrC,OAAO,IADd,SAECgC,IAAMgP,KAAK,iCAAkCC,GAF9C,OAEX/O,EAFW,OAGjBC,QAAQC,IAAIF,EAAIG,MAChBwO,EAAa,CAACxO,KAAMH,EAAIG,KAAMrC,OAAO,IAJpB,2CAAH,sDAyBlB,OARAG,qBAAU,WACHsQ,EAAS/L,QACRoM,EAAmBL,EAAS/L,MAAMC,QAClCrD,EAAcmP,EAAS/L,MAAMC,WAGlC,IAGC,cAAC,EAAD,UACI,eAAC4L,GAAD,WACI,qEACA,cAAC,GAAD,CACIlP,WAAYA,EACZC,cAAeA,EACfC,SAAUuP,EACVtP,QAtBE,WACdF,EAAc,CAACgB,WAAY,CAAC,OAAQK,QAAS,GAAIC,MAAO,KACxD+N,EAAmB,CAACtO,KAAM,GAAIqO,SAAS,EAAO1Q,OAAO,IACrD4Q,EAAkB,CAACvO,KAAM,GAAIqO,SAAS,EAAO1Q,OAAO,KAoBxCb,cAAc,QAElB,eAAC2P,GAAD,WACI,cAACC,GAAD,CAAgB5H,MAAM,MAAtB,SAEIoD,EAAgBvK,MAChB,cAAC,GAAD,CACIqB,WAAYA,EACZC,cAAeA,EACfiJ,gBAAiBA,EACjBtF,kBAAmBA,IAGvBsF,EAAgBmG,QACZ,cAAC1B,GAAD,UACI,cAAC,KAAD,CAAQ5O,KAAK,OAAOb,MAAOrC,EAAOC,KAAM8K,OAAQ,GAAId,MAAO,OAG/D,gCACI,8CACA,qBAAK1I,UAAU,oBAAf,sEAMZ,cAACsQ,GAAD,CAAgB5H,MAAM,MAAtB,SAEIyG,EAAe5N,MACf,cAAC,GAAD,CACIqB,WAAYA,EACZuM,eAAgBA,EAChBpD,aAAcA,IAGlBoD,EAAe8C,QACX,cAAC1B,GAAD,UACI,cAAC,KAAD,CAAQ5O,KAAK,OAAOb,MAAOrC,EAAOC,KAAM8K,OAAQ,GAAId,MAAO,OAG/D,gCACI,6CACA,qBAAK1I,UAAU,oBAAf,4GAOhB,cAACqQ,GAAD,UAEQK,EAAUnP,MACN,cAAC,GAAD,CACImP,UAAWA,EACXG,gBAjFJ,WACpBuB,EAAa,CAACxO,KAAM,GAAIrC,OAAO,OAkFX,cAAC+O,GAAD,Y,sSC1H5B,IAAMmC,GAAkBtT,YAAOuT,aAAPvT,CAAH,KAERV,EAAOO,WAId2T,GAAqBxT,IAAOyT,KAAV,MAwCTC,GAjCS,SAACzS,GAAW,IACzBqN,EAA2ErN,EAA3EqN,GAAIzN,EAAuEI,EAAvEJ,UAAW+B,EAA4D3B,EAA5D2B,MAAOE,EAAqD7B,EAArD6B,SAAUC,EAA2C9B,EAA3C8B,YAAarB,EAA8BT,EAA9BS,SAAUiS,EAAoB1S,EAApB0S,UAAW9O,EAAS5D,EAAT4D,MAEzE,OACI,cAAC,IAAM1D,SAAP,UAEQwS,EACA,eAACH,GAAD,CAAoB3S,UAAU,gBAA9B,UACI,cAACyS,GAAD,CACIhF,GAAIA,EACJzN,UAAWA,EACX+B,MAAOA,EACPE,SAAUA,EACVC,YAAaA,EACbrB,SAAUA,IAEd,uBAAOkS,QAAStF,EAAhB,SAAqBzJ,OAGzB,cAACyO,GAAD,CACIhF,GAAIA,EACJzN,UAAWA,EACX+B,MAAOA,EACPE,SAAUA,EACVC,YAAaA,EACbrB,SAAUA,O,qZCrC9B,IAAMmS,GAAqB7T,YAAO8T,gBAAP9T,CAAH,KAMHV,EAAOO,UAKXP,EAAOO,WAmCTkU,GA5BI,SAAC9S,GAAW,IAEpBJ,EAAsCI,EAAtCJ,UAAWmT,EAA2B/S,EAA3B+S,cAAelR,EAAY7B,EAAZ6B,SAFP,EAIYX,mBAAS,IAJrB,mBAInB8R,EAJmB,KAINC,EAJM,KAMpBC,EAAU,uCAAG,WAAOjP,GAAP,eAAAf,EAAA,sEACGC,IAAMC,IAAN,iCAAoCa,EAAEkP,QADzC,OACT9P,EADS,OAEf4P,EAAe5P,EAAIG,KAAKE,KAAI,SAAA0P,GAAI,MAAK,CACjClK,KAAMkK,EAAKC,UACX1R,MAAOyR,EAAKE,aAJD,2CAAH,sDAQhB,OACI,cAACV,GAAD,CACIhT,UAAWA,EACX+B,MAAOoR,EACPC,YAAaA,EACbO,eAAgBL,EAChBM,MAAM,OACNC,UAAU,EACV5R,SAAUA,EACVC,YAAY,yB,oeC9BxB,IAAMyJ,GAAYxM,IAAOC,IAAV,MAKT0U,GAAiB3U,YAAO4U,YAAP5U,CAAH,MAgaL6U,GAjZoB,WAC/B,IAAMC,EAAWC,iBAAO,MADa,EAGD5S,mBAAS,CACzCkS,KAAM,GACNW,SAAU,GACVC,IAAK,GACLzC,QAAS,GACT0C,SAAU,GACVC,eAAgB,GAChBzG,MAAO,GACP0G,MAAO,GACPC,YAAY,IAZqB,mBAG9B5R,EAH8B,KAGlBC,EAHkB,OAeSvB,mBAAS,CAACU,QAAS,GAAInB,UAAU,IAf1C,mBAe9B4T,EAf8B,KAebC,EAfa,OAgBDpT,mBAAS,CAACU,QAAS,GAAInB,UAAU,IAhBhC,mBAgB9B8T,EAhB8B,KAgBlBC,EAhBkB,OAiBOtT,mBAAS,CAACU,QAAS,GAAInB,UAAU,IAjBxC,mBAiB9BgU,EAjB8B,KAiBdC,EAjBc,OAkBSxT,mBAAS,CAACU,QAAS,GAAInB,UAAU,IAlB1C,mBAkB9BkU,EAlB8B,KAkBbC,EAlBa,OAmBa1T,mBAAS,CAACU,QAAS,GAAInB,UAAU,IAnB9C,mBAmB9BoU,EAnB8B,KAmBXC,EAnBW,OAoBG5T,mBAAS,CAACU,QAAS,GAAInB,UAAU,IApBpC,mBAoB9BsU,EApB8B,KAoBhBC,EApBgB,KAqC/BC,EAAa,uCAAG,WAAOhR,GAAP,iBAAAf,EAAA,sDAClBe,EAAEiR,iBACFzS,EAAc,2BAAID,GAAL,IAAiB4R,YAAY,KAC1C9Q,QAAQC,IAAIf,GACRuR,EAAW,GAJG,KAKXvR,EAAWuR,SALA,OAMT,eANS,OAST,QATS,OAYT,QAZS,+BAOVA,EAAW,MAPD,mCAUVA,EAAW,MAVD,oCAaVA,EAAW,MAbD,kFAkBA5Q,IAAMgP,KAAK,iCAAX,2BACX3P,GADW,IAEd4Q,KAAM5Q,EAAW4Q,KAAK1P,KAAI,SAAAyR,GAAC,OAAIA,EAAEjM,QACjC6K,SAAUA,KArBI,QAkBZ1Q,EAlBY,OAuBlBC,QAAQC,IAAIF,EAAIG,MAChBf,EAAc,2BAAID,GAAL,IAAiB4R,YAAY,KACvC/Q,EAAIG,KAAK4R,MACRvB,EAASwB,QAAQC,KAAK,CAClB,CACIC,SAAU,QACVhF,QAAS,2BACTiF,OAAQ,qDACRC,QAAQ,KAIhB5B,EAASwB,QAAQC,KAAK,CAClB,CACIC,SAAU,UACVhF,QAAS,6BACTiF,OAAQ,yEACRC,QAAQ,KAxCF,4CAAH,sDA8CbC,EAAkB,uCAAG,WAAOC,EAAcC,GAArB,iBAAA1S,EAAA,6DACnB2S,EADmB,uCACmBF,EADnB,YACmCC,GAC1DtS,QAAQC,IAAIsS,GAFW,SAGL1S,IAAMC,IAAIyS,GAHL,OAGjBxS,EAHiB,OAIvBC,QAAQC,IAAIF,EAAIG,MAJO,KAMhBmS,EANgB,OAOd,aAPc,OAUd,QAVc,QAyBd,YAzBc,QA+Bd,aA/Bc,QAoCd,eApCc,QAwCd,UAxCc,+BAQfrB,EAAmB,CAAC1S,QAASyB,EAAIG,KAAM/C,UAAU,IARlC,oCAWf+T,EAAc,CAAC5S,QAASyB,EAAIG,KAAKwQ,IAAKvT,UAAU,IAChDiU,EAAkB,CAAC9S,QAASyB,EAAIG,KAAK+N,QAAS9Q,UAAU,IACxDmU,EAAmB,CAAChT,QAASyB,EAAIG,KAAKsS,SAAUrV,UAAU,IAC1DqU,EAAqB,CAAClT,QAASyB,EAAIG,KAAKoK,WAAYnN,UAAU,IAC9DuU,EAAgB,CAACpT,QAASyB,EAAIG,KAAKiK,MAAOhN,UAAU,IACpDgC,EAAc,2BACPD,GADM,IAETwR,IAAK3Q,EAAIG,KAAKwQ,IAAItQ,KAAI,SAAAC,GAAI,OAAIA,EAAKhC,SACnC4P,QAASlO,EAAIG,KAAK+N,QAAQ7N,KAAI,SAAAC,GAAI,OAAIA,EAAKhC,SAC3CsS,SAAU5Q,EAAIG,KAAKsS,SAASpS,KAAI,SAAAC,GAAI,OAAIA,EAAKhC,SAC7CuS,eAAgB7Q,EAAIG,KAAKoK,WAAWlK,KAAI,SAAAC,GAAI,OAAIA,EAAKhC,SACrD8L,MAAOpK,EAAIG,KAAKiK,MAAM/J,KAAI,SAAAC,GAAI,OAAIA,EAAKhC,YAtB5B,oCA0Bf+S,EAAkB,CAAC9S,QAASyB,EAAIG,KAAK+N,QAAS9Q,UAAU,IACxDmU,EAAmB,CAAChT,QAASyB,EAAIG,KAAKsS,SAAUrV,UAAU,IAC1DqU,EAAqB,CAAClT,QAASyB,EAAIG,KAAKoK,WAAYnN,UAAU,IAC9DuU,EAAgB,CAACpT,QAASyB,EAAIG,KAAKiK,MAAOhN,UAAU,IA7BrC,oCAgCfmU,EAAmB,CAAChT,QAASyB,EAAIG,KAAKsS,SAAUrV,UAAU,IAC1DqU,EAAqB,CAAClT,QAASyB,EAAIG,KAAKoK,WAAYnN,UAAU,IAC9DuU,EAAgB,CAACpT,QAASyB,EAAIG,KAAKiK,MAAOhN,UAAU,IAlCrC,oCAqCfqU,EAAqB,CAAClT,QAASyB,EAAIG,KAAKoK,WAAYnN,UAAU,IAC9DuU,EAAgB,CAACpT,QAASyB,EAAIG,KAAKiK,MAAOhN,UAAU,IAtCrC,oCAyCfuU,EAAgB,CAACpT,QAASyB,EAAIG,KAAKiK,MAAOhN,UAAU,IAzCrC,0FA+ChB4C,EAAIG,MA/CY,4CAAH,wDAkDlBuS,EAAgB,SAACC,EAAWC,GAC9B,IAAIC,EAAM,GAKV,OAJAF,EAAUtR,SAAQ,SAACf,EAAMwD,GACrB7D,QAAQC,IAAII,GACZuS,EAAMA,EAAIC,OAAJ,UAAcF,EAAd,YAA2BtS,GAA3B,OAAkCwD,EAAI6O,EAAUhO,OAAS,EAAI,IAAM,QAEtEkO,GAGX5U,qBAAU,WASN,GAPAmB,EAAc,2BAAID,GAAL,IAAiBuR,SAAU,GAAIC,IAAK,GAAIzC,QAAS,GAAI0C,SAAU,GAAIC,eAAgB,GAAIzG,MAAO,MAC3G6G,EAAmB,CAAC1S,QAAS,GAAInB,UAAU,IAC3C+T,EAAc,CAAC5S,QAAS,GAAInB,UAAU,IACtCiU,EAAkB,CAAC9S,QAAS,GAAInB,UAAU,IAC1CmU,EAAmB,CAAChT,QAAS,GAAInB,UAAU,IAC3CqU,EAAqB,CAAClT,QAAS,GAAInB,UAAU,IAC7CuU,EAAgB,CAACpT,QAAS,GAAInB,UAAU,IACrC+B,EAAW4Q,KAAKpL,OAAS,EAAE,CAE1B,IAAI4N,EAAWG,EAAcvT,EAAW4Q,KAAK1P,KAAI,SAAAyR,GAAC,OAAIA,EAAExT,SAAQ,QAEhE+T,EAAmB,WAAYE,MAGpC,CAACpT,EAAW4Q,OAEf9R,qBAAU,WAQN,GANAmB,EAAc,2BAAID,GAAL,IAAiBwR,IAAK,GAAIzC,QAAS,GAAI0C,SAAU,GAAIC,eAAgB,GAAIzG,MAAO,MAC7F+G,EAAc,CAAC5S,QAAS,GAAInB,UAAU,IACtCiU,EAAkB,CAAC9S,QAAS,GAAInB,UAAU,IAC1CmU,EAAmB,CAAChT,QAAS,GAAInB,UAAU,IAC3CqU,EAAqB,CAAClT,QAAS,GAAInB,UAAU,IAC7CuU,EAAgB,CAACpT,QAAS,GAAInB,UAAU,IACrC+B,EAAWuR,SAAS/L,OAAS,EAAE,CAE9B,IAAI4N,EAAWG,EAAcvT,EAAW4Q,KAAK1P,KAAI,SAAAyR,GAAC,OAAIA,EAAExT,SAAQ,QAChEiU,EAAWA,EAASO,OAAT,oBAA6B3T,EAAWuR,WAEnD2B,EAAmB,MAAOE,MAG/B,CAACpT,EAAWuR,WAEf,IAAMqC,EAAgB,uCAAG,WAAOpC,GAAP,iBAAA9Q,EAAA,yDAErBwR,EAAkB,CAAC9S,QAAS,GAAInB,UAAU,IAC1CmU,EAAmB,CAAChT,QAAS,GAAInB,UAAU,IAC3CqU,EAAqB,CAAClT,QAAS,GAAInB,UAAU,IAC7CuU,EAAgB,CAACpT,QAAS,GAAInB,UAAU,MACrC+B,EAAWwR,IAAIhM,OAAS,GANN,wBAUjB4N,GADAA,GADIA,EAAWG,EAAcvT,EAAW4Q,KAAK1P,KAAI,SAAAyR,GAAC,OAAIA,EAAExT,SAAQ,SAC5CwU,OAAT,oBAA6B3T,EAAWuR,YAC/BoC,OAAT,WAAoBJ,EAAc/B,EAAK,SAVjC,UAYG0B,EAAmB,UAAWE,GAZjC,QAYbhU,EAZa,OAajBa,EAAc,2BACPD,GADM,IAETwR,IAAKA,EACLzC,QAAS3P,EAAQ2P,QAAQ7N,KAAI,SAAAC,GAAI,OAAIA,EAAKhC,SAC1CsS,SAAUrS,EAAQkU,SAASpS,KAAI,SAAAC,GAAI,OAAIA,EAAKhC,SAC5CuS,eAAgBtS,EAAQgM,WAAWlK,KAAI,SAAAC,GAAI,OAAIA,EAAKhC,SACpD8L,MAAO7L,EAAQ6L,MAAM/J,KAAI,SAAAC,GAAI,OAAIA,EAAKhC,YAnBzB,wBAsBjBc,EAAc,2BAAID,GAAL,IAAiB+O,QAAS,GAAI0C,SAAU,GAAIC,eAAgB,GAAIzG,MAAO,MAtBnE,4CAAH,sDA0BhB4I,EAAoB,uCAAG,WAAO9E,GAAP,iBAAArO,EAAA,yDAEzB0R,EAAmB,CAAChT,QAAS,GAAInB,UAAU,IAC3CqU,EAAqB,CAAClT,QAAS,GAAInB,UAAU,IAC7CuU,EAAgB,CAACpT,QAAS,GAAInB,UAAU,MACrC+B,EAAW+O,QAAQvJ,OAAS,GALN,wBAUrB4N,GADAA,GADAA,GADIA,EAAWG,EAAcvT,EAAW4Q,KAAK1P,KAAI,SAAAyR,GAAC,OAAIA,EAAExT,SAAQ,SAC5CwU,OAAT,oBAA6B3T,EAAWuR,YAC/BoC,OAAT,WAAoBJ,EAAcvT,EAAWwR,IAAK,UACzCmC,OAAT,WAAoBJ,EAAcxE,EAAS,aAVjC,UAYDmE,EAAmB,WAAYE,GAZ9B,QAYjBhU,EAZiB,OAarBa,EAAc,2BACPD,GADM,IAET+O,QAASA,EACT0C,SAAUrS,EAAQkU,SAASpS,KAAI,SAAAC,GAAI,OAAIA,EAAKhC,SAC5CuS,eAAgBtS,EAAQgM,WAAWlK,KAAI,SAAAC,GAAI,OAAIA,EAAKhC,SACpD8L,MAAO7L,EAAQ6L,MAAM/J,KAAI,SAAAC,GAAI,OAAIA,EAAKhC,YAlBrB,wBAqBrBc,EAAc,2BAAID,GAAL,IAAiByR,SAAU,GAAIC,eAAgB,GAAIzG,MAAO,MArBlD,4CAAH,sDAyBpB6I,EAAqB,uCAAG,WAAOrC,GAAP,iBAAA/Q,EAAA,2DACvBV,EAAWyR,SAASjM,OAAS,GADN,wBAGtB8M,EAAqB,CAAClT,QAAS,GAAInB,UAAU,IAC7CuU,EAAgB,CAACpT,QAAS,GAAInB,UAAU,IAMxCmV,GADAA,GADAA,GADAA,GADIA,EAAWG,EAAcvT,EAAW4Q,KAAK1P,KAAI,SAAAyR,GAAC,OAAIA,EAAExT,SAAQ,SAC5CwU,OAAT,oBAA6B3T,EAAWuR,YAC/BoC,OAAT,WAAoBJ,EAAcvT,EAAWwR,IAAK,UACzCmC,OAAT,WAAoBJ,EAAcvT,EAAW+O,QAAS,cAC7C4E,OAAT,WAAoBJ,EAAc9B,EAAU,cAVjC,UAYFyB,EAAmB,aAAcE,GAZ/B,QAYlBhU,EAZkB,OAatBa,EAAc,2BACPD,GADM,IAETyR,SAAUA,EACVC,eAAgBtS,EAAQgM,WAAWlK,KAAI,SAAAC,GAAI,OAAIA,EAAKhC,SACpD8L,MAAO7L,EAAQ6L,MAAM/J,KAAI,SAAAC,GAAI,OAAIA,EAAKhC,YAjBpB,wBAoBtBc,EAAc,2BAAID,GAAL,IAAiB0R,eAAgB,GAAIzG,MAAO,MApBnC,4CAAH,sDAwBrB8I,EAAuB,uCAAG,WAAOrC,GAAP,iBAAAhR,EAAA,yDAE5B8R,EAAgB,CAACpT,QAAS,GAAInB,UAAU,MACrC+B,EAAW0R,eAAelM,OAAS,GAHV,wBAUxB4N,GADAA,GADAA,GADAA,GADAA,GADIA,EAAWG,EAAcvT,EAAW4Q,KAAK1P,KAAI,SAAAyR,GAAC,OAAIA,EAAExT,SAAQ,SAC5CwU,OAAT,oBAA6B3T,EAAWuR,YAC/BoC,OAAT,WAAoBJ,EAAcvT,EAAWwR,IAAK,UACzCmC,OAAT,WAAoBJ,EAAcvT,EAAW+O,QAAS,cAC7C4E,OAAT,WAAoBJ,EAAcvT,EAAWyR,SAAU,eAC9CkC,OAAT,WAAoBJ,EAAc7B,EAAgB,gBAVrC,UAYJwB,EAAmB,QAASE,GAZxB,QAYpBhU,EAZoB,OAaxBa,EAAc,2BACPD,GADM,IAET0R,eAAgBA,EAChBzG,MAAO7L,EAAQ6L,MAAM/J,KAAI,SAAAC,GAAI,OAAIA,EAAKhC,YAhBlB,wBAmBxBc,EAAc,2BAAID,GAAL,IAAiBiL,MAAO,MAnBb,4CAAH,sDAuB7B,OACI,cAAC,EAAD,UACI,eAAC,GAAD,WACI,sDACA,cAACiG,GAAD,CAAgB8C,IAAK3C,IACrB,eAAC,EAAD,CAAYvT,cAAc,SAA1B,UACI,sBAAKV,UAAU,YAAf,UACI,qBAAKA,UAAU,QAAf,kCACA,cAAC,GAAD,CACIA,UAAU,QACVmT,cAAevQ,EAAW4Q,KAC1BvR,SAAU,SAACoC,GAAOxB,EAAc,2BAAID,GAAL,IAAiB4Q,KAAMnP,EAAEtC,eAGhE,sBAAK/B,UAAU,YAAf,UACI,qBAAKA,UAAU,QAAf,yBACA,cAAC,EAAD,CACIA,UAAU,QACV+B,MAAOa,EAAWuR,SAClBnS,QAASyS,EAAgBzS,QACzBC,SAAU,SAACoC,GAAOxB,EAAc,2BAAID,GAAL,IAAiBuR,SAAU9P,EAAEtC,UAC5DW,QAAQ,EACRL,UAAU,EACVH,YAAY,YACZrB,SAAU4T,EAAgB5T,cAGlC,sBAAKb,UAAU,YAAf,UACI,qBAAKA,UAAU,QAAf,mBACA,cAAC,EAAD,CACIA,UAAU,QACV+B,MAAOa,EAAWwR,IAClBpS,QAAS2S,EAAW3S,QACpBC,SAAU,SAACoC,GAAOmS,EAAiBnS,EAAEtC,QACrCW,QAAQ,EACRL,UAAU,EACVH,YAAY,YACZrB,SAAU8T,EAAW9T,cAG7B,sBAAKb,UAAU,YAAf,UACI,qBAAKA,UAAU,QAAf,8BACA,cAAC,EAAD,CACIA,UAAU,QACV+B,MAAOa,EAAW+O,QAClB3P,QAAS6S,EAAe7S,QACxBC,SAAU,SAACoC,GAAOoS,EAAqBpS,EAAEtC,QACzCW,QAAQ,EACRL,UAAU,EACVH,YAAY,YACZrB,SAAUgU,EAAehU,cAGjC,sBAAKb,UAAU,YAAf,UACI,qBAAKA,UAAU,QAAf,yBACA,cAAC,EAAD,CACIA,UAAU,QACV+B,MAAOa,EAAWyR,SAClBrS,QAAS+S,EAAgB/S,QACzBC,SAAU,SAACoC,GAAOqS,EAAsBrS,EAAEtC,QAC1CW,QAAQ,EACRL,UAAU,EACVH,YAAY,YACZrB,SAAUkU,EAAgBlU,cAGlC,sBAAKb,UAAU,YAAf,UACI,qBAAKA,UAAU,QAAf,+BACA,cAAC,EAAD,CACIA,UAAU,QACV+B,MAAOa,EAAW0R,eAClBtS,QAASiT,EAAkBjT,QAC3BC,SAAU,SAACoC,GAAOsS,EAAwBtS,EAAEtC,QAC5CW,QAAQ,EACRL,UAAU,EACVH,YAAY,YACZrB,SAAUoU,EAAkBpU,cAGpC,sBAAKb,UAAU,YAAf,UACI,qBAAKA,UAAU,QAAf,uBACA,cAAC,EAAD,CACIA,UAAU,QACV+B,MAAOa,EAAWiL,MAClB7L,QAASmT,EAAanT,QACtBC,SAAU,SAACoC,GAAOxB,EAAc,2BAAID,GAAL,IAAiBiL,MAAOxJ,EAAEtC,UACzDW,QAAQ,EACRL,UAAU,EACVH,YAAY,YACZrB,SAAUsU,EAAatU,cAG/B,sBAAKb,UAAU,YAAf,UACI,qBAAKA,UAAU,QAAf,qBACA,cAAC,GAAD,CACIA,UAAU,QACV+B,MAAOa,EAAW2R,MAClBtS,SAAU,SAACoC,GAAOxB,EAAc,2BAAID,GAAL,IAAiB2R,MAAOlQ,EAAEoN,OAAO1P,eAGxE,sBAAK/B,UAAU,wBAAf,UACI,cAAC,EAAD,CACImB,QAAS,SAACkD,GAAOxB,EAAc,2BAAID,GAAL,IAAiB4Q,KAAM,GAAIe,MAAO,OAChEnT,KAAK,QACLO,KAAK,QACLN,MAAO,CAACqH,MAAO,OAAQc,OAAQ,OAAQ6H,SAAU,OAAQwF,YAAa,UAGtEjU,EAAW4R,WACX,cAAC,KAAD,CAAQ7S,KAAK,OAAOb,MAAOrC,EAAOC,KAAM8K,OAAQ,GAAId,MAAO,KAE3D,cAAC,EAAD,CACIvH,QAASkU,EACTjU,KAAK,SACLC,MAAO,CAACqH,MAAO,OAAQc,OAAQ,OAAQ6H,SAAU,QACjDxQ,SA9WQ,IAA5B+B,EAAWiL,MAAMzF,QACS,IAA1BxF,EAAWwR,IAAIhM,QACe,IAA9BxF,EAAW+O,QAAQvJ,QACY,IAA/BxF,EAAWyR,SAASjM,QACW,IAA/BxF,EAAWuR,SAAS/L,QACiB,IAArCxF,EAAW0R,eAAelM,QACE,IAA5BxF,EAAW2R,MAAMnM,SARP,8CASH0O,KAAKlU,EAAW2R,QACvB3R,EAAW4R,yB,mSCnEvB,IAAMuC,GAAmB5X,IAAOC,IAAV,MAyEP4X,GA1DI,SAAC5W,GAAW,IAEpB6W,EAAW7W,EAAX6W,QAEP,OACI,eAACF,GAAD,WACI,uBAAO/W,UAAU,OAAjB,SACI,kCACI,+BACI,oBAAIA,UAAU,QAAd,2BACA,6BAAKiX,EAAQ5O,iBAEjB,+BACI,oBAAIrI,UAAU,QAAd,8BACA,6BAAKiX,EAAQC,oBAEjB,+BACI,oBAAIlX,UAAU,QAAd,8BACA,6BAAKiX,EAAQE,yBAIzB,uBAAOnX,UAAU,OAAjB,SACI,kCACI,+BACI,oBAAIA,UAAU,QAAd,qBACA,6BAAKiX,EAAQG,YAAYC,KAAK,WAElC,+BACI,oBAAIrX,UAAU,QAAd,wBACA,6BAAKiX,EAAQK,oBAEjB,+BACI,oBAAItX,UAAU,QAAd,mBACA,6BAAKiX,EAAQM,UAAUzT,KAAI,SAAA0T,GAAC,MAAU,MAANA,EAAY,OAAS,YAAUH,KAAK,gBAIhF,gCACI,kCACI,+BACI,oBAAIrX,UAAU,QAAd,uBACA,6BAAKiX,EAAQQ,cAAcJ,KAAK,WAEpC,+BACI,oBAAIrX,UAAU,QAAd,yBACA,6BAAKiX,EAAQS,gBAAgBL,KAAK,WAEtC,+BACI,oBAAIrX,UAAU,QAAd,+BACA,6BAAKiX,EAAQU,iBAAiBN,KAAK,oBCkI5CO,GAtLmB,WAAO,IAE7BnK,EAAOoK,cAAPpK,GAF4B,EAGNnM,qBAHM,mBAG7B2V,EAH6B,KAGpBa,EAHoB,OAIAxW,mBAAS,CAACuC,WAAY,CAAC,OAAQK,QAAS,GAAIC,MAAO,KAJnD,mBAI7BvB,EAJ6B,KAIjBC,EAJiB,OAKUvB,mBAAS,IALnB,mBAK7ByW,EAL6B,KAKZC,EALY,OAMM1W,mBAAS,IANf,mBAM7B2W,EAN6B,KAMdC,EANc,OAOU5W,mBAAS,CAACsC,KAAM,GAAIqO,SAAS,EAAO1Q,OAAO,IAPrD,mBAO7BuK,EAP6B,KAOZoG,EAPY,OAQQ5Q,mBAAS,CAACsC,KAAM,GAAIqO,SAAS,EAAO1Q,OAAO,IARnD,mBAQ7B4N,EAR6B,KAQbgD,EARa,OASF7Q,mBAAS,CAACsC,KAAM,GAAIrC,OAAO,IATzB,mBAS7BmP,EAT6B,KASlB0B,EATkB,KAsB9BC,EAAkB,uCAAG,WAAOhO,GAAP,eAAAf,EAAA,6DACvBe,EAAEiR,iBACFpD,EAAmB,CAACtO,KAAM,GAAIqO,SAAS,EAAM1Q,OAAO,IAF7B,SAGLgC,IAAMC,IAAN,qDAAwDiK,EAAxD,oBAAsE7K,EAAWsB,QAAjF,kBAAkGtB,EAAWuB,QAHxG,OAGjBV,EAHiB,OAIvBC,QAAQC,IAAIF,EAAIG,MAChBsO,EAAmB,CAACtO,KAAMH,EAAIG,KAAMqO,SAAS,EAAO1Q,OAAO,IALpC,2CAAH,sDAQlBiF,EAAiB,uCAAG,WAAOgM,GAAP,eAAAlP,EAAA,yDACtB6O,EAAkB,CAACvO,KAAM,GAAIqO,SAAS,EAAM1Q,OAAO,IACnDsB,EAAc2P,GACV/O,EAAM,GACc,WAArB+O,EAAO5J,UAJY,gCAKNrF,IAAMC,IAAN,oDAAuDiK,EAAvD,kBAAmE+E,EAAOrO,MAA1E,oBAA2FqO,EAAOtO,UAL5F,OAKlBT,EALkB,+CAONF,IAAMgP,KAAK,2BAA4BC,GAPjC,QAOlB/O,EAPkB,eAStB0O,EAAkB,CAACvO,KAAMH,EAAIG,KAAMqO,SAAS,EAAO1Q,OAAO,IATpC,4CAAH,sDAYjBwK,EAAY,uCAAG,WAAOyG,GAAP,eAAAlP,EAAA,sEAECC,IAAMgP,KAAK,iCAAkCC,GAF9C,OAEX/O,EAFW,OAGjBC,QAAQC,IAAIF,EAAIG,MAChBwO,EAAa,CAACxO,KAAMH,EAAIG,KAAMrC,OAAO,IAJpB,2CAAH,sDAyClB,OA9BAG,qBAAU,YACO,uCAAG,4BAAA4B,EAAA,6DACZI,QAAQC,IAAI8J,GADA,SAEMlK,IAAMC,IAAN,wCAA2CiK,IAFjD,OAENhK,EAFM,OAGZC,QAAQC,IAAIF,EAAIG,MAChBkU,EAAWrU,EAAIG,KAAKqT,SACpBe,EAAmBvU,EAAIG,KAAKmU,iBAC5BG,EAAiBzU,EAAIG,KAAKqU,eANd,2CAAH,qDAQbE,KAED,IAEHzW,qBAAU,WACN,GAA0B,aAAvBkB,EAAWsB,QAAuB,CACjCrB,EAAc,2BAAID,GAAL,IAAiBuB,MAAO,YACrC,IAAIiU,EAASH,EAAcnU,KAAI,SAAAC,GAAI,kCAASA,GAAT,IAAelD,SAAyB,WAAfkD,EAAKhC,WACjEmW,EAAiBE,QACf,GAA0B,OAAvBxV,EAAWsB,SAA2C,QAAvBtB,EAAWsB,QAAkB,CACjErB,EAAc,2BAAID,GAAL,IAAiBuB,MAAO,MACrC,IAAIiU,EAASH,EAAcnU,KAAI,SAAAC,GAAI,kCAASA,GAAT,IAAelD,SAAyB,WAAfkD,EAAKhC,WACjEmW,EAAiBE,OAChB,CACDvV,EAAc,2BAAID,GAAL,IAAiBuB,MAAO,MACrC,IAAIiU,EAASH,EAAcnU,KAAI,SAAAC,GAAI,kCAASA,GAAT,IAAelD,UAAU,OAC5DqX,EAAiBE,MAGtB,CAACxV,EAAWsB,UAGX,eAAC,EAAD,WACI,6DAEuB,qBAAZ+S,GAA2B,cAAC,GAAD,CAAYA,QAASA,IAE3D,eAAC,EAAD,CAAYvW,cAAc,MAA1B,UACI,sBAAKV,UAAU,YAAf,UACI,qBAAKA,UAAU,QAAf,uBACA,cAAC,EAAD,CACIA,UAAU,QACV+B,MAAOa,EAAWsB,QAClBlC,QAAS+V,EACT9V,SAAU,SAACoC,GAAOxB,EAAc,2BAAID,GAAL,IAAiBsB,QAASG,EAAEtC,UAC3DG,YAAY,iBAGpB,sBAAKlC,UAAU,YAAf,UACI,qBAAKA,UAAU,QAAf,qBACA,cAAC,EAAD,CACIA,UAAU,QACV+B,MAAOa,EAAWuB,MAClBnC,QAASiW,EACThW,SAAU,SAACoC,GAAOxB,EAAc,2BAAID,GAAL,IAAiBuB,MAAOE,EAAEtC,UACzDG,YAAY,YACZrB,SAAwC,IAA9B+B,EAAWsB,QAAQkE,YAGrC,sBAAKpI,UAAU,wBAAf,UACI,cAAC,EAAD,CACIA,UAAU,OACVmB,QAASkR,EACTjR,KAAK,SACLP,SAxGqB,IAA9B+B,EAAWsB,QAAQkE,QAA4C,IAA5BxF,EAAWuB,MAAMiE,SA0G/C,cAAC,EAAD,CACIjH,QAxGN,SAACkD,GACXA,EAAEiR,iBACFzS,EAAc,CAACgB,WAAY,CAAC,OAAQK,QAAS,GAAIC,MAAO,KACxD+N,EAAmB,CAACtO,KAAM,GAAIqO,SAAS,EAAO1Q,OAAO,IACrD4Q,EAAkB,CAACvO,KAAM,GAAIqO,SAAS,EAAO1Q,OAAO,KAqGpCH,KAAK,QACLO,KAAK,gBAIjB,eAAC0O,GAAD,WACI,cAACC,GAAD,CAAgB5H,MAAM,MAAtB,SAEIoD,EAAgBvK,MAChB,cAAC,GAAD,CACIqB,WAAYA,EACZC,cAAeA,EACfiJ,gBAAiBA,EACjBtF,kBAAmBA,EACnBC,UAAU,IAGdqF,EAAgBmG,QACZ,cAAC1B,GAAD,UACI,cAAC,KAAD,CAAQ5O,KAAK,OAAOb,MAAOrC,EAAOC,KAAM8K,OAAQ,GAAId,MAAO,OAG/D,gCACI,8CACA,qBAAK1I,UAAU,oBAAf,qEAMZ,cAACsQ,GAAD,CAAgB5H,MAAM,MAAtB,SAEIyG,EAAe5N,MACf,cAAC,GAAD,CAAqBqB,WAAYA,EAAYuM,eAAgBA,EAAgBpD,aAAcA,IAE3FoD,EAAe8C,QACX,cAAC1B,GAAD,UACI,cAAC,KAAD,CAAQ5O,KAAK,OAAOb,MAAOrC,EAAOC,KAAM8K,OAAQ,GAAId,MAAO,OAG/D,gCACI,6CACA,qBAAK1I,UAAU,oBAAf,4GAOhB,cAACqQ,GAAD,UAEIK,EAAUnP,OACV,cAAC,GAAD,CACImP,UAAWA,EACXG,gBA7HQ,WACpBuB,EAAa,CAACxO,KAAM,GAAIrC,OAAO,aCyOxB8W,GA3SE,CACf,CACE,MAAS,QACT,QAAW,SACX,WAAc,MACd,EAAK,MACL,KAAQ,OACR,GAAM,IACN,WAAY,QACZ,YAAa,MACb,KAAQ,mBACR,GAAM,GACN,QAAW,GACX,GAAI,IAEN,CACE,MAAS,OACT,QAAW,WACX,WAAc,MACd,EAAK,KACL,KAAQ,QACR,GAAM,OACN,WAAY,QACZ,YAAa,OACb,KAAQ,oBACR,GAAM,GACN,QAAW,GACX,GAAI,IAEN,CACE,MAAS,OACT,QAAW,OACX,WAAc,MACd,EAAK,KACL,KAAQ,QACR,GAAM,OACN,WAAY,QACZ,YAAa,OACb,KAAQ,mBACR,GAAM,GACN,QAAW,GACX,GAAI,IAEN,CACE,MAAS,MACT,QAAW,WACX,WAAc,MACd,EAAK,MACL,KAAQ,OACR,GAAM,OACN,WAAY,QACZ,YAAa,OACb,KAAQ,qBACR,GAAM,GACN,QAAW,GACX,GAAI,IAEN,CACE,MAAS,cACT,QAAW,UACX,WAAc,MACd,EAAK,MACL,KAAQ,OACR,GAAM,OACN,WAAY,QACZ,YAAa,QACb,KAAQ,qBACR,GAAM,GACN,QAAW,GACX,GAAI,IAEN,CACE,MAAS,cACT,QAAW,SACX,WAAc,MACd,EAAK,KACL,KAAQ,QACR,GAAM,OACN,WAAY,QACZ,YAAa,QACb,KAAQ,qBACR,GAAM,GACN,QAAW,GACX,GAAI,IAEN,CACE,MAAS,SACT,QAAW,SACX,WAAc,MACd,EAAK,KACL,KAAQ,OACR,GAAM,OACN,WAAY,QACZ,YAAa,QACb,KAAQ,oBACR,GAAM,GACN,QAAW,GACX,GAAI,IAEN,CACE,MAAS,SACT,QAAW,UACX,WAAc,MACd,EAAK,KACL,KAAQ,QACR,GAAM,OACN,WAAY,QACZ,YAAa,QACb,KAAQ,qBACR,GAAM,GACN,QAAW,GACX,GAAI,IAEN,CACE,MAAS,SACT,QAAW,OACX,WAAc,MACd,EAAK,KACL,KAAQ,QACR,GAAM,OACN,WAAY,QACZ,YAAa,QACb,KAAQ,sBACR,GAAM,GACN,QAAW,GACX,GAAI,IAEN,CACE,MAAS,SACT,QAAW,WACX,WAAc,MACd,EAAK,MACL,KAAQ,OACR,GAAM,OACN,WAAY,QACZ,YAAa,QACb,KAAQ,qBACR,GAAM,GACN,QAAW,GACX,GAAI,IAEN,CACE,MAAS,YACT,QAAW,WACX,WAAc,MACd,EAAK,KACL,KAAQ,OACR,GAAM,OACN,WAAY,QACZ,YAAa,QACb,KAAQ,qBACR,GAAM,GACN,QAAW,GACX,GAAI,IAEN,CACE,MAAS,OACT,QAAW,WACX,WAAc,MACd,EAAK,KACL,KAAQ,QACR,GAAM,OACN,WAAY,OACZ,YAAa,OACb,KAAQ,oBACR,GAAM,GACN,QAAW,GACX,GAAI,IAEN,CACE,MAAS,WACT,QAAW,OACX,WAAc,MACd,EAAK,KACL,KAAQ,QACR,GAAM,OACN,WAAY,QACZ,YAAa,QACb,KAAQ,qBACR,GAAM,GACN,QAAW,GACX,GAAI,IAEN,CACE,MAAS,WACT,QAAW,OACX,WAAc,MACd,EAAK,KACL,KAAQ,QACR,GAAM,OACN,WAAY,QACZ,YAAa,OACb,KAAQ,oBACR,GAAM,GACN,QAAW,GACX,GAAI,IAEN,CACE,MAAS,WACT,QAAW,YACX,WAAc,MACd,EAAK,KACL,KAAQ,QACR,GAAM,OACN,WAAY,QACZ,YAAa,OACb,KAAQ,mBACR,GAAM,GACN,QAAW,GACX,GAAI,IAEN,CACE,MAAS,WACT,QAAW,MACX,WAAc,MACd,EAAK,KACL,KAAQ,OACR,GAAM,OACN,WAAY,QACZ,YAAa,OACb,KAAQ,oBACR,GAAM,GACN,QAAW,GACX,GAAI,IAEN,CACE,MAAS,WACT,QAAW,WACX,WAAc,MACd,EAAK,MACL,KAAQ,KACR,GAAM,OACN,WAAY,QACZ,YAAa,QACb,KAAQ,sBACR,GAAM,GACN,QAAW,GACX,GAAI,IAEN,CACE,MAAS,WACT,QAAW,UACX,WAAc,MACd,EAAK,KACL,KAAQ,QACR,GAAM,OACN,WAAY,QACZ,YAAa,QACb,KAAQ,qBACR,GAAM,GACN,QAAW,GACX,GAAI,IAEN,CACE,MAAS,SACT,QAAW,WACX,WAAc,MACd,EAAK,KACL,KAAQ,QACR,GAAM,OACN,WAAY,QACZ,YAAa,OACb,KAAQ,mBACR,GAAM,GACN,QAAW,GACX,GAAI,IAEN,CACE,MAAS,YACT,QAAW,WACX,WAAc,MACd,EAAK,MACL,KAAQ,QACR,GAAM,OACN,WAAY,OACZ,YAAa,OACb,KAAQ,oBACR,GAAM,GACN,QAAW,GACX,GAAI,IAEN,CACE,MAAS,gBACT,QAAW,MACX,WAAc,GACd,EAAK,OACL,KAAQ,OACR,GAAM,OACN,WAAY,QACZ,YAAa,QACb,KAAQ,uBACR,GAAM,OACN,QAAW,qBACX,GAAI,K,oPC3RWlZ,IAAOC,IAAV,MAAhB,IAyBMkN,GAAU+L,GAUVhM,GAAUgM,GAAQA,GAAQjQ,OAAS,GAOnCoE,GAAU,WACd,OAAOlE,KAAKmE,IAAL,MAAAnE,KAAI,aAAQgE,GAAQxI,KAAI,SAAU4I,GACvC,OAAOC,OAAOD,EAAE,mBAIdE,GAAW,WACf,OAAOtE,KAAKuE,IAAL,MAAAvE,KAAI,aAAQgE,GAAQxI,KAAI,SAAU4I,GACvC,OAAOC,OAAOD,EAAE,oBClCL4L,IDyEE9L,KAAWH,GAAQkM,KAAS3L,KC/FhC,WAeT,OAbAlL,qBAAU,YACO,uCAAG,4BAAA4B,EAAA,+EAEUC,IAAMC,IAAI,+CAFpB,OAEFC,EAFE,OAGRC,QAAQC,IAAIF,EAAIG,MAHR,gDAKRF,QAAQC,IAAR,MALQ,yDAAH,qDAQbwU,KAED,IAGC,cAAC,EAAD,UACI,0C,4eCjBZ,IA2BeK,GA3BMC,YAAH,KAODha,EAAOO,WCqBT0Z,GAjBH,WACV,OACE,eAAC,IAAMpY,SAAP,WACE,cAAC,GAAD,IACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqY,KAAK,IAAIC,OAAK,EAACC,UAAWhT,KACjC,cAAC,IAAD,CAAO8S,KAAK,uBAAuBC,OAAK,EAACC,UAAW9G,KACpD,cAAC,IAAD,CAAO4G,KAAK,6BAA6BC,OAAK,EAACC,UAAW7E,KAC1D,cAAC,IAAD,CAAO2E,KAAK,gCAAgCC,OAAK,EAACC,UAAWjB,KAC7D,cAAC,IAAD,CAAOe,KAAK,QAAQC,OAAK,EAACC,UAAWP,cCblCQ,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,qBCCdQ,IAASC,OACP,cAAC,IAAMlZ,SAAP,UACE,cAAC,GAAD,MAEFmZ,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.abbdc15f.chunk.js","sourcesContent":["const colors = {\n    blue: '#3375B1',\n    red: '#b13336',\n    purple: 'b15f9b',\n    hover_blue: '#2A6193',\n    hover_red: '#9f2d30',\n    orange_highlight: '#F2950B',\n    gray_text: '#666666',\n    light_gray: '#999999'\n};\n\nexport default colors;","import styled from 'styled-components';\nimport colors from '../../styles/colors';\n\nexport const StyledNavigation = styled.div`\n    width: 100%;\n    height: 50px;\n    background-color: ${colors.blue};\n`;\n\nexport const NavigationContent = styled.div`\n    width: 90%;\n    max-width: 1500px;\n    height: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    display: flex;\n    align-items: center;\n    font-size: 12px;\n`\n\nexport const LogoContainer = styled.div`\n    height: 70%;\n    align-items: center;\n    img {\n        height: 100%;\n    }\n`\n\nexport const StyledLinks = styled.div`\n    width: 70%;\n    min-width: 560px;\n    display: flex;\n    justify-content: space-between;\n    padding: 0px 30px;\n    a {\n        color: #ffffff;\n    }\n    a:last-child {\n        margin-right: 0;\n    }\n`","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {StyledNavigation, NavigationContent, LogoContainer, StyledLinks} from './NavigationStyles';\n\n/**\n * Component for the navigation with links and logo.\n *\n * @component\n * @example\n *\n */\nconst Navigation = () => {\n    return (\n        <StyledNavigation>\n            <NavigationContent>\n                <LogoContainer>\n                    <img alt='IO.db' src='./images/logos/logo-white.png'/>\n                </LogoContainer>\n                <StyledLinks>\n                    <Link to='/'>Home</Link>\n                    <Link to='/explore/precomputed'>Pre-computed Signatures</Link>\n                    <Link to='/explore/biomarker/request'>Biomarker Evaluation</Link>\n                    <Link to='/'>About</Link>\n                    <Link to='/'>Download</Link>\n                    <Link to='/'>Contact</Link>\n                </StyledLinks>\n            </NavigationContent>\n        </StyledNavigation>\n    );\n};\n\nexport default Navigation;","import React from 'react';\nimport styled from 'styled-components';\nimport colors from '../../styles/colors';\n\nconst StyledFooter = styled.div`\n    position relative;\n    bottom: 0%;\n    width: 100%;\n    height: 44px;\n    display: flex;\n    align-items: center;\n`\n\nconst FooterContent = styled.div`\n    width: 85%;\n    height: 100%;\n    max-width: 1500px;\n    margin-left: auto;\n    margin-right: auto;\n    border-top: 1px solid ${colors.blue};\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n`\n\nconst FooterItem = styled.div`\n    color: ${colors.blue};\n    font-size: 10px;\n    a {\n        color: ${colors.blue};\n    }\n    .divider {\n        margin: 0px 10px;\n    }\n`\n\nconst Footer = () => {\n    return (\n        <StyledFooter>\n            <FooterContent>\n                <FooterItem>\n                    <span className='link'>Terms</span>\n                    <span className='divider'>|</span>\n                    <span className='link'>Privacy</span>\n                    <span className='divider'>|</span>\n                    <span className='link'>Support</span>\n                </FooterItem>\n                <FooterItem>\n                    BHK Lab &#169; 2020-2021\n                </FooterItem>\n            </FooterContent>\n        </StyledFooter>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Navigation from '../Navigation/Navigation';\nimport Footer from '../Footer/Footer';\nimport styled from 'styled-components';\n\nconst Main = styled.main`\n    min-height: 100vh;\n    width: 90%;\n    max-width: 1500px;\n    margin-left: auto;\n    margin-right: auto;\n    display: flex;\n    flex-direction: column;\n`;\n\n/**\n * wrapper for every page\n */\nconst Layout = (props) => {\n    const {children} = props;\n    return(\n        <React.Fragment>\n            <Navigation />\n            <Main>\n                {children}\n            </Main>\n            <Footer />\n        </React.Fragment>\n    );\n};\n\nLayout.propTypes = {\n    /**\n     * Layout's children (components on the page)\n     */\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node,\n    ]),\n};\n  \nLayout.defaultProps = {\n    page: '',\n    children: null,\n};\n\nexport default Layout;","import styled from 'styled-components';\n\nconst StyledForm = styled.div`\n    width: ${props => props.flexDirection === 'column' ? '100%' : '80%'};\n    margin-top: 30px;\n    display: flex;\n    flex-direction: ${props => props.flexDirection};\n    align-items: center;\n    justify-content: space-between;\n    font-size: 12px;\n\n    .formField {\n        width: ${props => props.flexDirection === 'column' ? '100%' : '30%'};\n        display: flex;\n        align-items: center;\n        justify-content: ${props => props.flexDirection === 'column' ? 'space-between' : 'center'};\n        margin-bottom: 10px;\n        margin-right: ${props => props.flexDirection === 'column' ? '0px' : '20px'};\n        .label {\n            margin-right: 10px;\n            font-size: 12px;\n        }\n        .input {\n            width: 70%;\n        }\n    }\n\n    .buttonField {\n        display: flex;\n        justify-content: ${props => props.flexDirection === 'column' ? 'flex-end' : 'flex-start'};\n        .left {\n            margin-right: 5px;\n        }\n    }\n`;\n\nexport default StyledForm;","import React, {useState, useEffect} from 'react';\nimport styled from 'styled-components';\nimport colors from '../../styles/colors';\n\nconst StyledButton = styled.button`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 4px;\n    border: none;\n    font-weight: normal;\n    letter-spacing: 1px;\n    padding: 0.4rem 0.6rem;\n    background-color: ${props => props.disabled ? colors.light_gray : props.color.background};\n    font-size: 12px;\n    color: ${props => props.fontColor ? props.fontColor : '#ffffff'};\n    cursor: ${props => props.disabled ? 'default' : 'pointer'};\n\n    :hover {\n        background-color: ${ props => props.disabled ? colors.light_gray : props.color.hover };\n        outline: ${ props => props.color.hover };\n    }\n`;\n\nconst ActionButton = (props) => {\n    const {className, onClick, text, style} = props;\n    const [colorScheme, setColorScheme] = useState({\n        background: colors.blue,\n        hover: colors.hover_blue,\n        ready: false\n    });\n\n    useEffect(() =>{\n        switch(props.type) {\n            case 'reset':\n                setColorScheme({\n                    background: colors.red,\n                    hover: colors.hover_red,\n                    ready: true\n                });\n                break;\n            default:\n                setColorScheme({...colorScheme, ready: true});\n                break;\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <React.Fragment>\n            {\n                colorScheme.ready &&\n                <StyledButton className={className} onClick={onClick} color={colorScheme} style={style} disabled={props.disabled} >\n                    {text}\n                </StyledButton>\n            }\n        </React.Fragment>\n    );\n}\n\nexport default ActionButton;","import React from 'react';\nimport { Dropdown } from 'primereact/dropdown';\nimport styled from 'styled-components';\nimport colors from '../../styles/colors';\n\nconst StyledDropdown = styled(Dropdown)`\n    .pi {\n        color: ${colors.gray_text};\n        font-size: 0.7rem;\n    }\n    .p-dropdown-items .p-dropdown-item {\n        color: ${colors.gray_text};\n    }\n    .p-dropdown-label, .p-dropdown-item {\n        font-family: 'Noto Sans', sans-serif;\n        font-size: 12px;\n    }\n    .p-inputtext{\n        padding: 0.3rem 0.5rem;\n    }\n`;\n\nconst CustomDropdown = (props) => {\n    const {className, value, options, onChange, placeholder, disabled} = props;\n\n    return(\n      <StyledDropdown \n        className={className}\n        value={value}\n        options={options} \n        onChange={onChange} \n        placeholder={placeholder}\n        disabled={disabled}\n      />\n    );\n}\n\nexport default CustomDropdown;","import React from 'react';\nimport { MultiSelect } from 'primereact/multiselect';\nimport styled from 'styled-components';\nimport colors from '../../styles/colors';\n\nconst StyledMultiSelect = styled(MultiSelect)`\n    .p-multiselect-header .p-checkbox {\n        display: ${props => props.checkbox ? 'block' : 'none'};\n    }\n    .p-multiselect-trigger .pi {\n        color: ${colors.gray_text};\n        font-size: 0.7rem;\n    }\n    .p-multiselect-items .p-multiselect-item {\n        color: ${colors.gray_text};\n        font-family: 'Noto Sans', sans-serif;\n        font-size: 12px;\n    }\n    .p-multiselect-label-container {\n        font-family: 'Noto Sans', sans-serif;\n        font-size: 12px;\n    }\n    .p-multiselect-label {\n        padding: 0.3rem 0.5rem;\n    }\n    .p-multiselect-filter-container input {\n        font-size: 12px;\n    }\n    .selected-item {\n        margin-right: 5px;\n    }\n`;\n\nconst selectedTemplate = (option) => {\n    if (option) {\n        return (<span className='selected-item'>{option}</span>);\n    }\n    return \"Select...\";\n}\n\nconst CustomMultiSelect = (props) => {\n    const {className, value, options, onChange, placeholder, disabled, checkbox} = props;\n\n    return(\n        <StyledMultiSelect \n            className={className}\n            value={value}\n            options={options} \n            onChange={onChange} \n            selectedItemTemplate={selectedTemplate}\n            filter={true}\n            placeholder={placeholder}\n            disabled={disabled}\n            checkbox={checkbox}\n        />\n    );\n}\n\nexport default CustomMultiSelect;","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport StyledForm from '../UtilComponents/StyledForm';\nimport ActionButton from '../UtilComponents/ActionButton';\nimport CustomDropdown from '../UtilComponents/CustomDropdown';\nimport CustomMultiSelect from '../UtilComponents/CustomMultiSelect';\n\nconst VolcanoPlotInput = (props) => {\n\n    const { parameters, setParameters, onSubmit, onReset } = props;\n\n    const [signatureOptions, setSignatureOptions] = useState([]);\n    const [outcomeOptions, setOutcomeOptions] = useState([]);\n    const [modelOptions, setModelOptions] = useState([]);\n\n    const readyToSubmit = () => {\n        return(\n            parameters.model === '' ||\n            parameters.outcome === '' ||\n            parameters.subgroup === ''\n        );\n    };\n\n    const onOutcomeSelect = (selected) => {\n        let modelValue = '';\n        let modelOptionsCopy = JSON.parse(JSON.stringify(modelOptions));\n\n        if(selected.value !== 'Response'){\n            modelOptionsCopy.find(item => item.value === 'Log_regression').isDisabled = true;\n            modelOptionsCopy.filter(item => item.value !== 'Log_regression')\n                .forEach(filtered => {\n                    filtered.isDisabled = false;\n                });\n            modelValue = parameters.model === 'Log_regression' && '';\n        }else{\n            modelOptionsCopy.find(item => item.value === 'Log_regression').isDisabled = false;\n            modelOptionsCopy.filter(item => item.value !== 'Log_regression')\n                .forEach(filtered => {\n                    filtered.isDisabled = true;\n                });\n            modelValue = parameters.model !== 'Log_regression' && '';\n        }\n        modelValue = selected.value === 'Response' ? 'Log_regression' : parameters.model === 'DI'?'DI':'COX';\n        setModelOptions(modelOptionsCopy);\n\n        setParameters(prev => ({\n            ...prev,\n            model: modelValue,\n            outcome: selected.value\n        }));\n    }\n\n    const onModelSelect = (selected) => {\n        let outcomeValue = selected.value === 'Log_regression' ? 'Response' : parameters.outcome === 'PFS'?'PFS' : 'OS';\n\n        setParameters(prev => ({\n            ...prev,\n            model: selected.value,\n            outcome: outcomeValue\n        }));\n    }\n\n    const onSignatureSelect = (selections) => {\n        let signatureOptionsCopy = JSON.parse(JSON.stringify(signatureOptions));\n        if(selections.value.includes('ALL')){\n            signatureOptionsCopy.forEach(item => {\n                if(item.value === 'ALL'){\n                    item.disabled = false;\n                }else{\n                    item.disabled = true;\n                }\n            });\n            selections.value = selections.value.filter(item => item === 'ALL');\n        }else{\n            signatureOptionsCopy.forEach(item => {\n                item.disabled = false;\n            });\n        }\n\n        setSignatureOptions(signatureOptionsCopy);\n        setParameters({\n            ...parameters,\n            signatures: selections.value});\n    }\n\n    useEffect(() => {\n        const setSelectOptions = async () => {\n            const res = await axios.get('/api/dropdown_option/explore');\n            console.log(res.data);\n            let signatures = res.data.signatures.map(item => ({value: item, label: item, disabled: true}));\n            signatures.unshift({value: 'ALL', label: 'ALL', disabled: false});\n            setSignatureOptions(signatures);\n            setOutcomeOptions(res.data.outcome.map(item => ({value: item, label: item, disabled: false})));\n            setModelOptions(res.data.model.map(item => ({value: item, label: item, disabled: false})));\n        }\n        setSelectOptions();\n    }, []);\n\n    return(\n        <StyledForm flexDirection={props.flexDirection}>\n            <div className='formField'>\n                <div className='label'>Outcome: </div>\n                <CustomDropdown\n                    className='input'\n                    value={parameters.outcome}\n                    options={outcomeOptions}\n                    onChange={(e) => {onOutcomeSelect(e)}}\n                    placeholder=\"Select...\"\n                />\n            </div>\n            <div className='formField'>\n                <div className='label'>Model: </div>\n                <CustomDropdown\n                    className='input'\n                    value={parameters.model}\n                    options={modelOptions.filter(item => item.isDisabled !== true)}\n                    onChange={(e) => {onModelSelect(e)}}\n                    placeholder=\"Select...\"\n                />\n            </div>\n            <div className='formField'>\n                <div className='label'>Signatures: </div>\n                <CustomMultiSelect\n                    className='input'\n                    value={parameters.signatures}\n                    options={signatureOptions}\n                    onChange={(selections) => {onSignatureSelect(selections)}}\n                    filter={true}\n                    placeholder='Select...'\n                />\n            </div>\n            <div className='formField buttonField'>\n                <ActionButton \n                    className='left' \n                    onClick={(e) => {onSubmit()}} \n                    text='Submit' \n                    disabled={readyToSubmit()} \n                />\n                <ActionButton \n                    onClick={(e) => {onReset()}} \n                    text='Reset' \n                    type='reset' \n                />\n            </div>\n        </StyledForm>\n    );\n}\n\nexport default VolcanoPlotInput;","import React, {useState} from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Layout from '../UtilComponents/Layout';\nimport VolcanoPlotInput from '../IOExplore/VolcanoPlotInput';\nimport styled from 'styled-components';\n\nconst HomeContainer = styled.div`\n    width: 100%;\n    height: calc(100vh - 105px);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst HomeLogo = styled.div`\n    height: 100px;\n    img {\n        height: 100%;\n    }\n`;\n\nconst AppDescription = styled.div`\n    width: 90%;\n    max-width: 550px;\n    min-width: 415px;\n    margin-top: 20px;\n    margin-bottom: 20px;\n    line-height: 1.5;\n    letter-spacing: 1.5px;\n`;\n\nconst HomeInput = styled.div`\n    width: 90%;\n    max-width: 550px;\n    min-width: 415px;\n    display: flex;\n    flex-direction: column;\n    aling-items: center;\n    margin-top: 30px;\n\n    .subText {\n        font-size: 20px;\n        font-weight: bold;\n    }\n`\n\nconst Home = () => {\n    const [redirect, setRedirect] = useState(false);\n    const [parameters, setParameters] = useState({signatures: ['ALL'], outcome: '', model: ''});\n\n    const onSubmit = async () => {\n        setRedirect(true);\n    };\n\n    return (\n        <Layout>\n            {\n                redirect ?\n                <Redirect \n                    to={{\n                        pathname: '/explore/precomputed',\n                        state: { preset: parameters}\n                    }}\n                />\n                :\n                <HomeContainer>\n                    <HomeLogo>\n                        <img alt='PredictIO' src='./images/logos/logo-main.png' />\n                    </HomeLogo>\n                    <AppDescription>\n                        Investigate predictive and prognostic values of your gene.\n                        <br />\n                        Predict a patient response to ICB therapy.\n                    </AppDescription>\n                    <HomeInput>\n                        <div className='subText'>Explore pre-computed signature data</div>\n                        <VolcanoPlotInput \n                            parameters={parameters} \n                            setParameters={setParameters} \n                            onSubmit={onSubmit} \n                            onReset={() => {setParameters({signatures: ['ALL'], outcome: '', model: ''})}}\n                            flexDirection='column' \n                        />\n                    </HomeInput>\n                </HomeContainer>\n            }\n        </Layout>\n    );\n};\n\nexport default Home;","/* eslint-disable radix */\nimport React, {useState, useEffect} from 'react';\nimport Plotly from 'plotly.js-dist';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport {withSize} from 'react-sizeme';\nimport colors from '../../styles/colors';\nimport * as d3 from 'd3';\n\nconst Plot = createPlotlyComponent(Plotly);\n\n// for changing the cursor on hover of points\nconst hover = () => {\n    d3.selectAll('.nsewdrag').style('cursor', 'pointer');\n};\n\nconst unhover = () => {\n    d3.selectAll('.nsewdrag').style('cursor', '');\n};\n\nconst VolcanoPlot = (props) => {\n    const {data, plotId, getForestPlotData, parameters, setParameters, onthefly} = props;\n\n    const [plotData, setPlotData] = useState({\n        x: [], \n        y: [], \n        hovertext: [], \n        pointColor: [],\n        pointSize: []\n    });\n\n    const [selectedPointIndex, setSelectedPointIndex] = useState(undefined);\n\n    useEffect(() => {\n        console.log(data);\n        setPlotData({\n            x: data.map(item => (item.effect_size)),\n            y: data.map(item => (item.logPval)),\n            click_ids: data.map((item, i) => (i)),\n            hovertext: getHoverText(data),\n            pointColor: getPointColor(data),\n            pointSize: getPointSize(data),\n            pointLine: getPointOutline(data)\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        if(typeof selectedPointIndex !== 'undefined'){\n            console.log(selectedPointIndex);\n            let pointColor = getPointColor(data, selectedPointIndex);\n            let pointLine = getPointOutline(data, selectedPointIndex);\n            setPlotData({\n                ...plotData, \n                pointColor: pointColor,\n                pointLine: pointLine\n            });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectedPointIndex]);\n\n    const onClick = (data) => {\n        let selectedPoint = props.data[data.points[0].pointIndex]\n        setSelectedPointIndex(data.points[0].pointIndex);\n        setParameters({...parameters, signature: selectedPoint.signature});\n        getForestPlotData({\n            signature: selectedPoint.signature, \n            outcome: selectedPoint.outcome, \n            model: selectedPoint.model\n        });\n    }\n\n    /**\n     * get data point sizes based on standard error value (se)\n     * @param {*} points \n     */\n    const getPointSize = (points) => {\n        let size = [];\n        points.forEach(point => {\n            if(point.se <= 0.05){\n                size.push(6);\n            }else if(point.se > 0.05 && point.se <= 0.1){\n                size.push(8);\n            }else if(point.se > 0.1 && point.se <= 0.15){\n                size.push(10);\n            }else if(point.se > 0.15){\n                size.push(12);\n            }\n        });\n        return size;\n    }\n\n    /**\n     * get data point color based on HR (effect size) value and -log10 p-value\n     * @param {*} points \n     */\n    const getPointColor = (points, index = undefined) => {\n        let pointColors = [];\n        for(let i = 0; i < points.length; i++){\n            if(i === index){\n                pointColors.push(colors.orange_highlight);\n                continue;\n            }\n\n            if(points[i].analysis_id){\n                pointColors.push(colors.purple);\n            }else{\n                if(points[i].logPval < -Math.log10(0.05)){\n                    pointColors.push(colors.gray_text);\n                }else{\n                    if(points[i].effect_size > 0){\n                        pointColors.push(colors.red);\n                    }else{\n                        pointColors.push(colors.blue);\n                    }\n                }\n            }\n        }\n        return pointColors;\n    }\n\n    /**\n     * get data point outline.\n     * The outline is added if the point specified with the index is clicked.\n     * @param {*} points \n     * @param {*} index \n     */\n    const getPointOutline = (points, index=undefined) => {\n        let outlineColor = [];\n        let outlineWidth = [];\n        points.forEach((point, i) => {\n            if(i === index){\n                outlineColor.push(colors.gray_text);\n                outlineWidth.push(2);\n            }else{\n                outlineColor.push(undefined);\n                outlineWidth.push(0);\n            }\n        });\n        return { color: outlineColor, width: outlineWidth };\n    }\n\n    /**\n     * get formatted hovertext for each data point.\n     * @param {*} points \n     */\n    const getHoverText = (points) => {\n        let hoverText = [];\n        points.forEach(point => {\n            hoverText.push(\n                `${onthefly ? '' : `Subgroup: ${point.subgroup}<br>`}` +\n                `Signature: ${point.signature ? point.signature : 'Custom'}<br>` + \n                `Coef: ${Math.round(point.effect_size * 1000) / 1000}<br>` +\n                `P-value: ${Math.round(point.pval * 10000) / 10000}<br>` +\n                `I2: ${Math.round(point.i2 * 10000) / 10000}<br>` +\n                `P-value I2: ${Math.round(point.pval_i2 * 1000) / 1000}`\n            )\n        });\n        return hoverText;\n    }\n\n    return(\n        <div>\n            <Plot\n                data={[\n                    {\n                        showlegend: false,\n                        type: 'scatter',\n                        mode: 'markers',\n                        x: plotData.x,\n                        y: plotData.y,\n                        click_ids: plotData.click_ids,\n                        hoverinfo: 'text',\n                        hovertext: plotData.hovertext,\n                        marker: {\n                            color: plotData.pointColor,\n                            size: plotData.pointSize,\n                            line: plotData.pointLine\n                        },\n                        name: 'points',\n                    }\n                ]}\n                layout={{\n                    width: props.size.width,\n                    height: props.size.width * 0.8,\n                    autosize: true,\n                    paper_bgcolor: 'white',\n                    plot_bgcolor: 'white',\n                    orientation: 'v',\n                    yaxis: { ticklen: 0, title: '-log10(p value)','fixedrange':true },\n                    xaxis: { title: 'Hazard Ratio', zeroline: false,'fixedrange':true},\n                    hovermode: 'closest',\n                    font: {\n                        size: 11,\n                        family: 'Noto Sans',\n                    },\n                    margin: {\n                        l: 45,\n                        r: 10,\n                        t: 10,\n                        b: 40,\n                    },\n                    shapes: [\n                        {\n                            type: 'line',\n                            xref: 'paper',\n                            x0: 0,\n                            y0: -Math.log10(0.05),\n                            x1: 1,\n                            y1: -Math.log10(0.05),\n                            line: {\n                                color: colors.light_gray,\n                                width: 2,\n                                dash: 'dot'\n                            }\n                        },\n                        {\n                            type: 'line',\n                            xref: 'x',\n                            yref: 'paper',\n                            x0: 0,\n                            y0: 0,\n                            x1: 0,\n                            y1: 1,\n                            line: {\n                                color: colors.light_gray,\n                                width: 2,\n                                dash: 'dot'\n                            }\n                        }\n                    ]\n                }}\n                graphDiv={plotId}\n                config={{\n                    responsive: true,\n                    displayModeBar: false,\n                }}\n                onClick={(data) => onClick(data)}\n                onHover={() => hover()}\n                onUnhover={() => unhover()}\n            />\n        </div>\n    );\n}\n\nexport default withSize()(VolcanoPlot);","import React from 'react';\nimport VolcanoPlot from '../Diagram/VolcanoPlot';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    width: 100%;\n    margin-bottom: 30px;\n`\n\nconst PlotParameters = styled.div`\n    width: 100%;\n    display: flex;\n    align-items: center;\n    margin-bottom: 10px;\n    font-size: 12px;\n    .parameterLine {\n        margin-right: 20px;\n    }\n    .value {\n        font-weight: bold;\n    }\n`;\n\nconst VolcanoPlotContainer = (props) => {\n\n    const { parameters, setParameters, volcanoPlotData, getForestPlotData, onthefly } = props;\n\n    return(\n        <Container>\n            <h3>Volcano Plot</h3>\n            <PlotParameters>\n                <div className='parameterLine'>Outcome: <span className='value'>{parameters.outcome}</span></div>\n                <div className='parameterLine'>Model: <span className='value'>{parameters.model}</span></div>\n                {!onthefly ? <div className='parameterLine'>Subgroup: <span className='value'>{parameters.subgroup}</span></div> : ''}\n            </PlotParameters>\n            <VolcanoPlot \n                plotId='volcano-plot' \n                parameters={parameters} \n                setParameters={setParameters} \n                data={volcanoPlotData.data} \n                getForestPlotData={getForestPlotData}\n                onthefly={onthefly}\n            />\n        </Container>\n    );\n}\n\nexport default VolcanoPlotContainer;","import React, {useEffect} from \"react\";\nimport * as d3 from 'd3';\nimport {withSize} from 'react-sizeme';\nimport styled from 'styled-components';\nimport colors from '../../styles/colors';\n\n/**\n * A responsive version of forest plot.\n * The plot rendering process is in 'draw()' function\n * which is called every time a window size changes.\n */\n\nconst Container = styled.div`\n  width: 100%;\n  height: 80%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  .tooltip {\n    width: 200px;\n    position: absolute;\n    font-size: 11px;\n    background-color: rgba(242,255,223,0.8);\n    padding: 2px 10px;\n    color: rgb(7,28,44);\n    border-radius: 3px;\n  }\n  .pointLink:hover {\n    text-decoration: underline;\n  }\n  .datapoint:hover {\n    cursor: hand;\n  }\n`\n\nconst ForestPlot = (props) => {\n\n    const getModalData = props.getModalData;\n\n    useEffect(() => {\n        draw();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.size.width, props.individuals]);\n\n    const draw = () => {\n\n        const dim = {\n            width: props.size.width,\n            height: props.size.width\n        }\n\n        const initial = {\n            edgeSize: 8,\n            fontSize: 11,\n            xAxeMargin: 30,\n            topMargin: 20,\n            leftMargin: 250,\n            rightMargin: 50\n        }\n\n        const base = () => {\n            if (overall.model === \"DI\") return 1\n            return 0\n        }\n\n        /***\n         * keep the studies in data and the overall\n         **/\n        const dataset = props.individuals;\n        const overall = props.meta[0]\n\n        /***\n         * Find the min and max value of all studies for adjusting the scales and axes\n         ***/\n        const min_low = () => {\n            return Math.min(...dataset.map(function (d){ return Number(d[\"_95ci_low\"])}))\n        }\n\n        const max_high = () => {\n            return Math.max(...dataset.map(function (d){ return Number(d[\"_95ci_high\"])}))\n        }\n\n        /***\n         * Functions for scaling X and Y\n         ***/\n        const xScale= (d) => {\n            const scale = d3\n                .scaleLinear()\n                .domain([min_low(), max_high()])\n                .range([initial.leftMargin, dim.width - initial.rightMargin])\n            return scale(d)\n        }\n\n        const yScale= (d) => {\n            const scale = d3\n                .scaleLinear()\n                .domain([-2, dataset.length + 1])\n                .range([20, 460])\n            return scale(d)\n        }\n\n        /***\n         * Find the overall rhombus points on svg\n         ***/\n        const polygonPoints = () =>{\n            return (\n                xScale(Number(overall._95ci_low)) + \", \"+ yScale(-1) +\" \"+\n                xScale(Number(overall.effect_size)) + \", \"+ (yScale(-1) - (initial.edgeSize/2)) +\" \"+\n                xScale(Number(overall._95ci_high)) +\", \"+ yScale(-1) +\" \"+\n                xScale(Number(overall.effect_size) ) +\", \"+ (yScale(-1) + (initial.edgeSize/2)) +\" \"\n            )\n        }\n\n        /***\n         * Set a threshold for labels on x line- to ignore values too close to base line\n         ***/\n        const xAxeLabels= () => {\n            const threshold = 18\n            let studyValues = [min_low(), Math.round(overall.effect_size * 100) / 100 , max_high()];\n            let list= [base()]\n            for (let i = 0;i < studyValues.length ; i++)\n                if (Math.abs(xScale(studyValues[i])- xScale(base()))> threshold)\n                    list.push(studyValues[i])\n            return list\n        }\n\n        /***\n         * Click on Study rect\n         */\n        const onClick = (data) => {\n            let selectedPoint = dataset[data].study;\n            getModalData({\n                dataset_name: selectedPoint\n            });\n        }\n\n        /***\n         * Mouseover data point group (text+interval+rect)\n         */\n        const renderToolTip = (key, id, point) => {\n            let tooltip = d3.select(`#${props.id}PlotContainer`)\n                .append('div')\n                .attr('id', id)\n                .attr('class', 'tooltip')\n                .style('left', `${xScale(max_high()) - 100}px`)\n                .style('top', `${yScale(key) - 30}px`);\n            if(point.study){\n                tooltip.html(\n                    point.study + \" (\" + point.primary_tissue + \"; \" + point.sequencing + \")\" +\n                    \"<br />N=\" + point.n +\n                    \"<br />hazard ratio=\" + Number(point.effect_size).toFixed(4) +\n                    \"<br />P-value=\" + Number(point.pval).toFixed(4));\n            }else{\n                tooltip.html(\n                    \"Pooled Effect Size\" +\n                    \"<br />N=\" + point.n +\n                    \"<br />hazard ratio=\" + Number(point.effect_size).toFixed(4) +\n                    \"<br />P-value=\" + Number(point.pval).toFixed(4));\n            }\n        }\n\n        const removeToolTip = (id) => {\n            d3.select(id).remove();\n        }\n\n        /**\n         *  start drawing plot\n         */\n        let svg = d3.select(`#${props.id}`);\n        svg.selectAll(\"*\").remove(); // redraw every time the width changes\n        svg.attr('width', dim.width).attr('height', dim.height);\n        let canvas = svg.append('g');\n\n        /*Creating axes*/\n        canvas.append('line')\n            .attr('id', 'xAxe')\n            .attr('x1', xScale(min_low())-initial.leftMargin)\n            .attr('x2', xScale(max_high())+initial.xAxeMargin)\n            .attr('y1', yScale(dataset.length))\n            .attr('y2', yScale(dataset.length))\n            .style('stroke', \"#949494\")\n            .style('stroke-width', '1.5');\n\n        canvas.append('line')\n            .attr('id', 'yAxe')\n            .attr('x1', xScale(base()))\n            .attr('x2', xScale(base()))\n            .attr('y1', yScale(-2))\n            .attr('y2', yScale(dataset.length))\n            .style('stroke', \"#949494\")\n            .style('stroke-width', '1.5');\n\n        Object.keys(xAxeLabels()).forEach((key, index) => {\n            canvas.append('text')\n                .attr('id', \"xTag-\"+ index)\n                .attr('x', xScale(xAxeLabels()[index]))\n                .attr('y', yScale(dataset.length + 0.65))\n                .attr('font-size', initial.fontSize)\n                .attr('font-weight', 'regular')\n                .attr('fill', \"#444444\")\n                .attr('text-anchor', 'middle')\n                .text(xAxeLabels()[index])\n        });\n\n        Object.keys(xAxeLabels()).forEach((key, index) => {\n            canvas.append('line')\n                .attr('id', \"xAxeDash\"+ index)\n                .attr('x1', xScale(xAxeLabels()[index]))\n                .attr('x2', xScale(xAxeLabels()[index]))\n                .attr('y1', yScale(dataset.length) - 5)\n                .attr('y2', yScale(dataset.length) + 5)\n                .style('stroke', \"#949494\")\n                .style('stroke-width', '1');\n        });\n\n        canvas.append('text')\n            .attr('x', xScale(0))\n            .attr('y', yScale(dataset.length + 1.5))\n            .attr('font-size', initial.fontSize + 2)\n            .attr('font-weight', 'regular')\n            .attr('fill', \"#444444\")\n            .attr('text-anchor', 'middle')\n            .text('Hazard Ratio')\n\n        /*Creating Data Point*/\n        Object.keys(props.individuals).forEach((key, index) => {\n\n            let tooltipId = `point-${dataset[key].study.replace(/[^a-zA-Z]/g, \"\")}`;\n\n            let datapoint = svg.append('g')\n                .attr('id', \"datapoint-\" +index)\n                .attr('class', 'datapoint')\n                .style('cursor', 'hand')\n                .on('click', () => {\n                    onClick (key);\n                })\n                .on('mouseover', () => {\n                    renderToolTip(key, tooltipId, dataset[key]);\n                })\n                .on('mouseout', () => {\n                    removeToolTip(`#${tooltipId}`);\n                });\n\n            datapoint.append('a')\n                .attr('id', \"tag-\"+index)\n                .attr('class', 'pointLink')\n                .append('text')\n                .attr('x', 0)\n                .attr('y', yScale(index))\n                .attr('font-size', initial.fontSize)\n                .attr('fill', \"#444444\")\n                .text(`${dataset[key].study} (${dataset[key].primary_tissue}, ${dataset[key].sequencing})`);\n\n            datapoint.append('line')\n                .attr('id', \"interval-\" + index)\n                .attr('x1', xScale(Number(dataset[key][\"_95ci_low\"])))\n                .attr('x2', xScale(Number(dataset[key][\"_95ci_high\"])))\n                .attr('y1', yScale(index))\n                .attr('y2', yScale(index))\n                .style('stroke', \"#8b9eae\")\n                .style('stroke-width', '2');\n\n            datapoint.append('title')\n                .text(`95CI:(${dataset[key][\"_95ci_low\"]}, ${dataset[key][\"_95ci_high\"]})`);\n\n            datapoint.append('rect')\n                .attr('id', \"datPoint-\" +index)\n                .attr('x', xScale(Number(dataset[key][\"effect_size\"])) - initial.edgeSize / 2)\n                .attr('y', yScale(index) - initial.edgeSize / 2)\n                .style('width', initial.edgeSize)\n                .style('height', initial.edgeSize)\n                .style('fill', \"#37799d\");\n        });\n\n        /*Creating Diamond*/\n        canvas.append('line')\n            .attr('id', 'yAxe-dash')\n            .attr('x1', xScale(overall.effect_size))\n            .attr('x2', xScale(overall.effect_size))\n            .attr('y1', yScale(-2))\n            .attr('y2', yScale(dataset.length))\n            .attr('stroke-dasharray', '3,4')\n            .style('stroke', colors.orange_highlight)\n            .style('stroke-width', '2')\n            .style('cursor', 'hand')\n            .on('mouseover', () => {\n                renderToolTip(-1, 'polygon-tooltip', overall);\n            })\n            .on('mouseout', () => {\n                removeToolTip('#polygon-tooltip');\n            });\n\n        canvas.append('text')\n            .attr('id', \"tag-pooled-effect\")\n            .attr('x', 0)\n            .attr('y', yScale(-1))\n            .attr('font-size', initial.fontSize)\n            .attr('fill', \"#444444\")\n            .text(`Pooled Effect Sizes`);\n\n        canvas.append('polygon')\n            .attr('id', 'diamond')\n            .attr('points', polygonPoints())\n            .style('fill', colors.orange_highlight)\n            .style('cursor', 'hand')\n            .on('mouseover', () => {\n                renderToolTip(-1, 'polygon-tooltip', overall);\n            })\n            .on('mouseout', () => {\n                removeToolTip('#polygon-tooltip');\n            });\n    }\n\n    /***\n     * Creating the plot\n     ***/\n    return (\n        <Container id={`${props.id}PlotContainer`}>\n            <svg id={props.id}></svg>\n        </Container>\n    )\n}\n\nexport default withSize()(ForestPlot);\n","import React, {useState, useEffect} from 'react';\nimport styled from 'styled-components';\nimport CustomDropdown from '../UtilComponents/CustomDropdown';\nimport { FaSortAmountDown, FaSortAmountUpAlt } from \"react-icons/fa\";\nimport ForestPlot from '../Diagram/ForestPlot3';\n\nconst Container = styled.div`\n    width: 100%;\n`;\n\nconst PlotHeader = styled.div`\n    width: 100%;\n    display: flex;\n    align-items: center;\n    margin-bottom: 20px;\n    font-size: 12px;\n\n    .title {\n        font-weight: bold;\n    }\n\n    .parameterLine {\n        .value {\n            font-weight: bold;\n        }\n    }\n    \n    .filter {\n        display: flex;\n        flex: 30%;\n        align-items: center;\n        margin-left: 20px;\n        .label {\n            margin-right: 5px;\n        }\n        .dropdown {\n            flex: 30%;\n        }\n        .sortIconBtn {\n            font-size: 14px;\n            margin-left: 10px;\n            background: none;\n            border: none;\n            padding: 0;\n            cursor: pointer;\n            outline: none;\n        }\n    }\n\n    .effectSizeValues {\n        display: flex;\n        .valueLine {\n            margin-left: 15px;\n            .value {\n                margin-left: 5px;\n                font-weight: bold;\n            }\n        }\n    }\n`;\n\nconst ForestPlotContainer = (props) => {\n\n    const {parameters, forestPlotData, getModalData} = props;\n    const [plotData, setPlotdata] = useState({ready: false, individuals: [], meta: []});\n    const [sort, setSort] = useState({value: 'effect_size', asc: true});\n    const [tissueValue, setTissueValue] = useState('ALL');\n    const [sequenceValue, setSequenceValue] = useState('ALL');\n\n    const [tissueOptions, setTissueOptions] = useState([]);\n    const [sequenceOptions, setSequenceOptions] = useState([]);\n    const sortOptions = [\n        {value: 'effect_size', label: 'Hazard Ratio'},\n        {value: 'study', label: 'Studies'},\n    ];\n\n    useEffect(() => {\n\n        // const getModalData = props\n        let tmp = forestPlotData.data.meta.filter(item => item.subgroup === 'Tumor' && item.n >= 3);\n        tmp = tmp.map(item => ({value: item.tissue_type, label: item.tissue_type})).sort((a, b) => (a.label.localeCompare(b.label)));\n        tmp.unshift({value: 'ALL', label: 'All'});\n\n        setTissueOptions(tmp);\n        \n        tmp = forestPlotData.data.meta.filter(item => item.subgroup === 'Sequencing' && item.n >= 3);\n        tmp = tmp.map(item => ({value: item.tissue_type, label: item.tissue_type})).sort((a, b) => (a.label.localeCompare(b.label)));\n        tmp.unshift({value: 'ALL', label: 'All'});\n\n        setSequenceOptions(tmp);\n\n        setPlotdata({\n            individuals: [...forestPlotData.data.individuals].sort((a, b) => a[sort.value] - b[sort.value]),\n            meta: forestPlotData.data.meta.filter(item => item.tissue_type === 'ALL'),\n            ready: true\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        let filterVal = 'ALL';\n        let individuals = [...forestPlotData.data.individuals];\n        let meta = [...forestPlotData.data.meta];\n\n        if(tissueValue !== 'ALL'){\n            individuals = individuals.filter(item => item.primary_tissue === tissueValue);\n            filterVal = tissueValue;\n            setSequenceValue('ALL');\n        }\n\n        if(sequenceValue !== 'ALL'){\n            individuals = individuals.filter(item => item.sequencing === sequenceValue);\n            filterVal = sequenceValue;\n            setTissueValue('ALL');\n        }\n\n        if(sort.value === 'effect_size'){\n            individuals.sort((a, b) => (sort.asc ? a[sort.value] - b[sort.value] : b[sort.value] - a[sort.value]));\n        }else{\n            individuals.sort((a, b) => a[sort.value] - b[sort.value]);\n            if(!sort.asc){\n                individuals.reverse();\n            }\n        }\n\n        individuals.sort((a, b) => (sort.asc ? a[sort.value] - b[sort.value] : b[sort.value] - a[sort.value]));\n        setPlotdata(prev => ({\n            ...prev, \n            individuals: individuals,\n            meta: meta.filter(item => item.tissue_type === filterVal)\n        }));\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [sort, tissueValue, sequenceValue]);\n\n    return(\n        <div>\n            {\n                plotData.ready &&\n                <Container>\n                    <h3>Forest Plot</h3>\n                    <PlotHeader>\n                        <div className='parameterLine'>\n                            Signature: <span className='value'>{parameters.signature ? parameters.signature : 'Custom'}</span>\n                        </div>\n                        <div className='filter'>\n                            <span className='label'>Sort By:</span>\n                            <CustomDropdown \n                                className='dropdown' \n                                value={sort.value}\n                                options={sortOptions}\n                                onChange={(e) => {setSort(prev => ({...prev, value: e.value}))}}\n                                placeholder='Select...'\n                            />\n                            <button className='sortIconBtn' onClick={(e) => {setSort(prev => ({...prev, asc: !prev.asc}))}}>\n                                {\n                                    sort.asc ? <FaSortAmountDown /> : <FaSortAmountUpAlt />\n                                }\n                            </button>\n                        </div>\n                    </PlotHeader>\n                    <PlotHeader>\n                        <div className='title'>Filter By: </div>\n                        <div className='filter'>\n                            <span className='label'>Tissue Type:</span>\n                            <CustomDropdown \n                                className='dropdown' \n                                value={tissueValue}\n                                options={tissueOptions}\n                                onChange={(e) => {setTissueValue(e.value)}}\n                                disabled={sequenceValue !== 'ALL'}\n                                placeholder='Select...'\n                            />\n                        </div>\n                        <div className='filter'>\n                            <span className='label'>Sequencing Type:</span>\n                            <CustomDropdown \n                                className='dropdown' \n                                value={sequenceValue}\n                                options={sequenceOptions}\n                                onChange={(e) => {setSequenceValue(e.value)}}\n                                disabled={tissueValue !== 'ALL'}\n                                placeholder='Select...'\n                            />\n                        </div>\n                    </PlotHeader>\n                    <PlotHeader>\n                        <div className='title'>Pooled Effect Sizes: </div>\n                        <div className='effectSizeValues'>\n                            <div className='valueLine'>\n                                Coef:\n                                <span className='value'>{Number(plotData.meta[0].effect_size).toFixed(2)} </span>\n                                [95CI%:\n                                <span className='value'>{Number(plotData.meta[0]._95ci_low).toFixed(2)} </span>\n                                -\n                                <span className='value'>{Number(plotData.meta[0]._95ci_high).toFixed(2)}</span>\n                                ]\n                            </div>\n                            <div className='valueLine'>P-value: <span className='value'>{Number(plotData.meta[0].pval).toFixed(3)}</span></div>\n                            <div className='valueLine'>Het. I2: <span className='value'>{Number(plotData.meta[0].i2).toFixed(3)}</span></div>\n                            <div className='valueLine'>I2 Pval: <span className='value'>{Number(plotData.meta[0].pval_i2).toFixed(3)}</span></div>\n                        </div>\n                    </PlotHeader>\n                    <ForestPlot id='forestplot' individuals={plotData.individuals} meta={plotData.meta} getModalData={getModalData}/>\n                </Container>\n            }\n        </div>\n    );\n}\n\nexport default ForestPlotContainer;\n","import styled from 'styled-components';\n\nexport const PlotContainer = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    .volcano {\n        width: 35%;\n    }\n    .forest {\n        width: 65%;\n    }\n`;\n\nexport const StyledPlotArea = styled.div`\n    width: ${props => props.width};\n    .forestPlotMessage {\n        font-size: 12px;\n    }\n    padding 10px;\n`;\n\nexport const LoaderContainer = styled.div`\n    width: 100%;\n    height: 500px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;","import React from 'react';\nimport styled from 'styled-components';\nimport colors from '../../styles/colors';\n\nconst StyledButton = styled.button`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 10px;\n    border: none;\n    font-weight: normal;\n    letter-spacing: 1.5px;\n    width: 80px;\n    height: 30px;\n    background-color: ${colors.blue};\n    font-size: 16px;\n    color: #ffffff;\n    cursor: pointer;\n    align-self: flex-end;\n    position: relative;\n    }\n`;\n\n\nconst StyledModal = styled.div`\n  width: 80%;\n  height: auto;\n  overflow-y: scroll;\n  align-items: center;\n  top: -25%;\n  left: 0%;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  border-radius: 10px;\n  z-index: 9;\n  //background: rgb(255, 255, 255);\n  background: rgba(96, 96, 96, 0.95);\n  box-shadow: 0 5px 16px rgba(0, 0, 0, 0.3);\n  position: absolute;\n  align-content: center;\n  font-family: ${\"Noto Sans\"};\n    //color: ${colors.light_gray};\n  color: whitesmoke;\n`;\n\n\n// const Heading = styled.h4`\n//   display: inline;\n//   margin-top:40px;\n// `;\n\n\nexport const Modal = (props) => {\n    const {\n        dataset_name, \n        title, \n        // authors, \n        summary, \n        pmid\n    } = props.modalData.data;\n    const removeModalData = props.removeModalData\n\n    const closeModal = () => {\n        removeModalData();\n    }\n\n    return (\n        <StyledModal>\n            <div>\n                <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\n                    <h3>{dataset_name} Study</h3>\n                </div>\n                <div><h4>{title}</h4></div>\n                <div>{summary}</div><br/>\n                {/*<div><Heading>Authors: </Heading> {authors}</div><br/>*/}\n                {/*<div><Heading>Summary: </Heading> {summary}</div><br/>*/}\n            </div>\n            <br />\n            <div style={{ display: 'flex', float: 'center', position:\"absolute\", right:\"20px\", bottom:\"10px\"}}>\n            {/*<div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>*/}\n                <div>\n                    <StyledButton\n                        style={{width: '90px', height: '34px', fontSize: '14px', marginLeft: '100px'}}\n                        // style={{width: '90px', height: '34px', fontSize: '14px'}}\n                        as=\"a\"\n                        href={pmid}\n                        target=\"_blank\"\n                        rel=\"noopener\"\n                        primary>\n                        Pubmed\n                    </StyledButton>\n                </div>\n                <div>\n                    <StyledButton\n                        style={{width: '90px', height: '34px', fontSize: '14px', marginLeft: '10px'}}\n                        as=\"a\"\n                        onClick={closeModal}\n                        target=\"_blank\"\n                        rel=\"noopener\"\n                        primary>\n                        Close\n                    </StyledButton>\n                </div>\n            </div>\n        </StyledModal>\n    )\n\n}\n\nexport default Modal;","import React from 'react';\nimport styled from 'styled-components';\nimport Modal from \"../Modal/DescriptionModal\";\nimport colors from \"../../styles/colors\";\n\n\nconst ModalWrapper = styled.div`\n  justify-content: space-between;\n  alignment: center;\n  margin-top: -750px;\n  margin-left: 170px;\n  width: 100%;\n  height: 100%;\n  box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\n  background: #cdcdcd;\n  color: #000;\n  display: grid;\n  grid-template-columns: 1fr;\n  position: relative;\n  z-index: 10;\n  border-radius: 10px;\n  color: ${colors.gray_text};\n`;\n\n\nconst ModalContainer = (props) => {\n    const { modalData, removeModalData } = props;\n    return(\n        <ModalWrapper>\n            {\n                <Modal modalData={modalData}\n                       removeModalData = {removeModalData}>\n                </Modal>\n            }\n        </ModalWrapper>\n    );\n};\n\nexport default ModalContainer;\n","import React, {useState, useEffect} from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport Loader from 'react-loader-spinner';\n\nimport Layout from '../UtilComponents/Layout';\nimport VolcanoPlotInput from './VolcanoPlotInput';\nimport VolcanoPlotContainer from './VolcanoPlotContainer';\nimport ForestPlotContainer from './ForestPlotContainer';\nimport { PlotContainer, StyledPlotArea, LoaderContainer } from '../../styles/PlotStyles';\nimport ModalContainer from \"./ModalContainer\";\nimport colors from '../../styles/colors';\n\nconst ExploreContainer = styled.div`\n    width: 100%;\n`;\n\nconst Explore = ({ location }) => {\n    const [parameters, setParameters] = useState({signatures: ['ALL'], outcome: '', model: ''});\n    const [volcanoPlotData, setVolcanoPlotData] = useState({data: {}, loading: false, ready: false});\n    const [forestPlotData, setForestPlotData] = useState({data: {}, loading: false, ready: false});\n    const [modalData, setModalData]=useState({data: {}, ready: false});\n\n    const getVolcanoPlotData = async (presetParams = null) => {\n        setVolcanoPlotData({data: {}, loading: true, ready: false}); // reset the data object so that the plot is redrawn.\n        setForestPlotData({data: {}, loading: false, ready: false}); \n        const res = await axios.post('/api/explore/volcano_plot', presetParams ? presetParams : parameters);\n        setVolcanoPlotData({data: res.data, loading: false, ready: true});\n    };\n\n    const getForestPlotData = async (params) => {\n        setForestPlotData({data: {}, loading: true, ready: false}); // reset the data object so that the plot is redrawn.\n        const res = await axios.post('/api/explore/forest_plot', params);\n        console.log(res.data);\n        setForestPlotData({data: res.data, loading: false, ready: true});\n    };\n\n    const getModalData = async (params) => {\n        setModalData({data: {}, ready: false}); // reset the data object so that the plot is redrawn.\n        const res = await axios.post('/api/explore/description_modal', params);\n        console.log(res.data)\n        setModalData({data: res.data, ready: true});\n    };\n\n    const removeModalData = () => {\n        setModalData({data: {}, ready: false}); // reset the data object so that the plot is redrawn.\n    };\n\n    const resetData = () => {\n        setParameters({signatures: ['ALL'], outcome: '', model: ''});\n        setVolcanoPlotData({data: {}, loading: false, ready: false});\n        setForestPlotData({data: {}, loading: false, ready: false});\n    }\n\n    useEffect(() => {\n        if(location.state){\n            getVolcanoPlotData(location.state.preset);\n            setParameters(location.state.preset);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return(\n        <Layout>\n            <ExploreContainer>\n                <h3>Explore pre-computed signature data</h3>\n                <VolcanoPlotInput \n                    parameters={parameters} \n                    setParameters={setParameters} \n                    onSubmit={getVolcanoPlotData} \n                    onReset={resetData}\n                    flexDirection='row' \n                />\n                <PlotContainer>\n                    <StyledPlotArea width='40%'>\n                    {\n                        volcanoPlotData.ready ?\n                        <VolcanoPlotContainer \n                            parameters={parameters} \n                            setParameters={setParameters} \n                            volcanoPlotData={volcanoPlotData} \n                            getForestPlotData={getForestPlotData} \n                        />\n                        :\n                        volcanoPlotData.loading ?\n                            <LoaderContainer>\n                                <Loader type=\"Oval\" color={colors.blue} height={80} width={80}/>\n                            </LoaderContainer>\n                            :\n                            <div>\n                                <h3>Volcano Plot</h3>\n                                <div className='forestPlotMessage'>\n                                    Select outcome and model to display a volcano plot.\n                                </div>\n                            </div>\n                    }\n                    </StyledPlotArea>\n                    <StyledPlotArea width='60%'>\n                    {\n                        forestPlotData.ready ?\n                        <ForestPlotContainer \n                            parameters={parameters}\n                            forestPlotData={forestPlotData}\n                            getModalData={getModalData}\n                        />\n                        :\n                        forestPlotData.loading ?\n                            <LoaderContainer>\n                                <Loader type=\"Oval\" color={colors.blue} height={80} width={80}/>\n                            </LoaderContainer>\n                            :\n                            <div>\n                                <h3>Forest Plot</h3>\n                                <div className='forestPlotMessage'>\n                                    Click on a signature point on the volcano plot to display a corresponding forest plot.\n                                </div>\n                            </div>\n                    }\n                    </StyledPlotArea>\n                </PlotContainer>\n                <PlotContainer>\n                    {\n                        modalData.ready ?\n                            <ModalContainer\n                                modalData={modalData}\n                                removeModalData = {removeModalData}\n                            /> :\n                            <StyledPlotArea/>\n                    }\n                </PlotContainer>\n            </ExploreContainer>\n        </Layout>\n    );\n}\n\nexport default Explore;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { InputText } from 'primereact/inputtext';\nimport colors from '../../styles/colors';\n\nconst StyledInputText = styled(InputText)`\n    font-size: 12px;\n    color: ${colors.gray_text};\n    width: 100%;\n`;\n\nconst InputTextWithLabel = styled.span`\n    label {\n        font-size: 12px;\n        line-height: 1.3;\n    }\n`;\n\nconst CustomInputText = (props) => {\n    const {id, className, value, onChange, placeholder, disabled, withLabel, label} = props;\n\n    return(\n        <React.Fragment>\n            {\n                withLabel ?\n                <InputTextWithLabel className=\"p-float-label\">\n                    <StyledInputText\n                        id={id} \n                        className={className}\n                        value={value}\n                        onChange={onChange} \n                        placeholder={placeholder}\n                        disabled={disabled}\n                    />\n                    <label htmlFor={id}>{label}</label>\n                </InputTextWithLabel>\n                :\n                <StyledInputText\n                    id={id} \n                    className={className}\n                    value={value}\n                    onChange={onChange} \n                    placeholder={placeholder}\n                    disabled={disabled}\n                />\n            }\n            \n        </React.Fragment>\n    );\n}\n\nexport default CustomInputText;","import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport { AutoComplete } from 'primereact/autocomplete';\nimport axios from 'axios';\nimport colors from '../../styles/colors';\n\nconst CustomAutoComplete = styled(AutoComplete)`\n    width: 100%;\n    .p-inputtext {\n        width: 100%;\n        .p-autocomplete-input-token input {\n            font-size: 12px;\n            color: ${colors.gray_text};\n        }\n    }\n    .p-autocomplete-panel {\n        font-size: 12px;\n        color: ${colors.gray_text};\n    }\n    .p-autocomplete-token {\n        font-size: 12px;\n    }\n`;\n\nconst GeneSearch = (props) => {\n\n    const {className, selectedGenes, onChange} = props;\n\n    const [suggestions, setSuggestions] = useState([]);\n\n    const searchGene = async (e) => {\n        const res = await axios.get(`/api/search_gene?query=${e.query}`);\n        setSuggestions(res.data.map(gene => ({\n            name: gene.gene_name, \n            value: gene.gene_id\n        })));\n    }\n\n    return(\n        <CustomAutoComplete \n            className={className}\n            value={selectedGenes} \n            suggestions={suggestions} \n            completeMethod={searchGene} \n            field=\"name\" \n            multiple={true}\n            onChange={onChange}\n            placeholder='ex. B2M, CD8A, GZMA'\n        />\n    );\n}\n\nexport default GeneSearch;","import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport Loader from 'react-loader-spinner';\nimport axios from 'axios';\nimport { Messages } from 'primereact/messages';\n\nimport colors from '../../styles/colors';\nimport Layout from '../UtilComponents/Layout';\nimport StyledForm from '../UtilComponents/StyledForm';\nimport ActionButton from '../UtilComponents/ActionButton';\nimport CustomMultiSelect from '../UtilComponents/CustomMultiSelect';\nimport CustomInputText from '../UtilComponents/CustomInputText';\nimport CustomDropdown from '../UtilComponents/CustomDropdown';\nimport GeneSearch from './GeneSearch';\n\n// {value: 'B2M', label: 'B2M'}, {value: 'CD8A', label: 'CD8A'}, {value: 'GZMA', label: 'GZMA'}\n\nconst Container = styled.div`\n    width: 80%;\n    height: calc(100vh + 50px);\n`;\n\nconst StyledMessages = styled(Messages)`\n    .p-message {\n        font-size: 12px;\n        .p-message-icon {\n            font-size: 18px;\n            font-weight: bold;\n        }\n        .p-message-summary {\n            font-size: 14px;\n            font-weight: bold;\n            padding-right: 10px;\n        }\n    }\n`;\n\nconst BiomarkerEvaluationRequest = () => {\n    const messages = useRef(null);\n\n    const [parameters, setParameters] = useState({\n        gene: [],\n        dataType: '',\n        sex: [],\n        primary: [],\n        drugType: [],\n        sequencingType: [],\n        study: [],\n        email: '',\n        submitting: false\n    });\n\n    const [dataTypeOptions, setDataTypeOptions] = useState({options: [], disabled: true});\n    const [sexOptions, setSexOptions] = useState({options: [], disabled: true});\n    const [primaryOptions, setPrimaryOptions] = useState({options: [], disabled: true});\n    const [drugTypeOptions, setDrugTypeOptions] = useState({options: [], disabled: true});\n    const [sequencingOptions, setSequencingOptions] = useState({options: [], disabled: true});\n    const [studyOptions, setStudyOptions] = useState({options: [], disabled: true});\n\n    const disableSubmit = () => {\n        const regex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n        return(\n            parameters.study.length === 0 || \n            parameters.sex.length === 0 ||\n            parameters.primary.length === 0 ||\n            parameters.drugType.length === 0 ||\n            parameters.dataType.length === 0 ||\n            parameters.sequencingType.length === 0 ||\n            parameters.email.length === 0 ||\n            !regex.test(parameters.email) ||\n            parameters.submitting\n        )\n    }\n\n    const submitRequest = async (e) => {\n        e.preventDefault();\n        setParameters({...parameters, submitting: true});\n        console.log(parameters);\n        let dataType = '';\n        switch(parameters.dataType){\n            case 'expression':\n                dataType = 'EXP';\n                break;\n            case 'snp':\n                dataType = 'SNP';\n                break;\n            case 'cna':\n                dataType = 'CNA';\n                break;\n            default:\n                break;\n        }\n        const res = await axios.post('/api/explore/biomarker/request', {\n            ...parameters, \n            gene: parameters.gene.map(g => g.name),\n            dataType: dataType\n        });\n        console.log(res.data);\n        setParameters({...parameters, submitting: false});\n        if(res.data.error){\n            messages.current.show([\n                { \n                    severity: 'error', \n                    summary: 'Unable to submit request', \n                    detail: 'Please try again, or contact support@predictio.ca.', \n                    sticky: true \n                }\n            ]);\n        }else{\n            messages.current.show([\n                { \n                    severity: 'success', \n                    summary: 'Request has been submitted', \n                    detail: 'You will receive an email notification once your request is processed.', \n                    sticky: true \n                }\n            ]);\n        }\n    }\n\n    const getDropdownOptions = async (dropdownName, paramStr) => {\n        let uri = `/api/explore/biomarker/query/${dropdownName}?${paramStr}`;\n        console.log(uri);\n        const res = await axios.get(uri);\n        console.log(res.data);\n\n        switch(dropdownName){\n            case 'datatype':\n                setDataTypeOptions({options: res.data, disabled: false});\n                break;\n            case 'sex':\n                setSexOptions({options: res.data.sex, disabled: false});\n                setPrimaryOptions({options: res.data.primary, disabled: false});\n                setDrugTypeOptions({options: res.data.drugtype, disabled: false});\n                setSequencingOptions({options: res.data.sequencing, disabled: false});\n                setStudyOptions({options: res.data.study, disabled: false});\n                setParameters({\n                    ...parameters, \n                    sex: res.data.sex.map(item => item.value),\n                    primary: res.data.primary.map(item => item.value),\n                    drugType: res.data.drugtype.map(item => item.value),\n                    sequencingType: res.data.sequencing.map(item => item.value),\n                    study: res.data.study.map(item => item.value)\n                });\n                break;\n            case 'primary':\n                setPrimaryOptions({options: res.data.primary, disabled: false});\n                setDrugTypeOptions({options: res.data.drugtype, disabled: false});\n                setSequencingOptions({options: res.data.sequencing, disabled: false});\n                setStudyOptions({options: res.data.study, disabled: false});\n                break;\n            case 'drugtype':\n                setDrugTypeOptions({options: res.data.drugtype, disabled: false});\n                setSequencingOptions({options: res.data.sequencing, disabled: false});\n                setStudyOptions({options: res.data.study, disabled: false});\n                break;\n            case 'sequencing':\n                setSequencingOptions({options: res.data.sequencing, disabled: false});\n                setStudyOptions({options: res.data.study, disabled: false});\n                break;\n            case 'study':\n                setStudyOptions({options: res.data.study, disabled: false});\n                break;\n            default:\n                break;\n        }\n\n        return res.data;\n    }\n\n    const buildQueryStr = (paramList, paramName) => {\n        let str = ''\n        paramList.forEach((item, i) => {\n            console.log(item);\n            str = str.concat(`${paramName}=${item}${i < paramList.length - 1 ? '&' : ''}`);\n        });\n        return str;\n    }\n\n    useEffect(() => {\n        // reset parameters and disable dropdowns\n        setParameters({...parameters, dataType: [], sex: [], primary: [], drugType: [], sequencingType: [], study: []});\n        setDataTypeOptions({options: [], disabled: true});\n        setSexOptions({options: [], disabled: true});\n        setPrimaryOptions({options: [], disabled: true});\n        setDrugTypeOptions({options: [], disabled: true});\n        setSequencingOptions({options: [], disabled: true});\n        setStudyOptions({options: [], disabled: true});\n        if(parameters.gene.length > 0){\n            // build query parameter string\n            let paramStr = buildQueryStr(parameters.gene.map(g => g.value), 'gene');\n            // get available data type options and enable the dropdown\n            getDropdownOptions('datatype', paramStr);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [parameters.gene]);\n\n    useEffect(() => {\n        // reset parameters and disable dropdowns\n        setParameters({...parameters, sex: [], primary: [], drugType: [], sequencingType: [], study: []});\n        setSexOptions({options: [], disabled: true});\n        setPrimaryOptions({options: [], disabled: true});\n        setDrugTypeOptions({options: [], disabled: true});\n        setSequencingOptions({options: [], disabled: true});\n        setStudyOptions({options: [], disabled: true});\n        if(parameters.dataType.length > 0){\n            // build query parameter string\n            let paramStr = buildQueryStr(parameters.gene.map(g => g.value), 'gene');\n            paramStr = paramStr.concat(`&datatype=${parameters.dataType}`);\n            // get available data type options and enable downstream dropdowns\n            getDropdownOptions('sex', paramStr);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [parameters.dataType]);\n\n    const getDownstreamSex = async (sex) => {\n        // reset downstream dropdowns\n        setPrimaryOptions({options: [], disabled: true});\n        setDrugTypeOptions({options: [], disabled: true});\n        setSequencingOptions({options: [], disabled: true});\n        setStudyOptions({options: [], disabled: true});\n        if(parameters.sex.length > 0){\n            // build query parameter string\n            let paramStr = buildQueryStr(parameters.gene.map(g => g.value), 'gene');\n            paramStr = paramStr.concat(`&datatype=${parameters.dataType}`);\n            paramStr = paramStr.concat(`&${buildQueryStr(sex, 'sex')}`);\n            // get available options and enable downstream dropdowns\n            let options = await getDropdownOptions('primary', paramStr);\n            setParameters({\n                ...parameters,\n                sex: sex, \n                primary: options.primary.map(item => item.value),\n                drugType: options.drugtype.map(item => item.value),\n                sequencingType: options.sequencing.map(item => item.value),\n                study: options.study.map(item => item.value)\n            });\n        }else{\n            setParameters({...parameters, primary: [], drugType: [], sequencingType: [], study: []});\n        }\n    };\n\n    const getDownStreamPrimary = async (primary) => {\n        // reset downstream dropdowns\n        setDrugTypeOptions({options: [], disabled: true});\n        setSequencingOptions({options: [], disabled: true});\n        setStudyOptions({options: [], disabled: true});\n        if(parameters.primary.length > 0){\n            // build query parameter string\n            let paramStr = buildQueryStr(parameters.gene.map(g => g.value), 'gene');\n            paramStr = paramStr.concat(`&datatype=${parameters.dataType}`);\n            paramStr = paramStr.concat(`&${buildQueryStr(parameters.sex, 'sex')}`);\n            paramStr = paramStr.concat(`&${buildQueryStr(primary, 'primary')}`);\n            // get available options and enable downstream dropdowns\n            let options = await getDropdownOptions('drugtype', paramStr);\n            setParameters({\n                ...parameters,\n                primary: primary,\n                drugType: options.drugtype.map(item => item.value),\n                sequencingType: options.sequencing.map(item => item.value),\n                study: options.study.map(item => item.value)\n            });\n        }else{\n            setParameters({...parameters, drugType: [], sequencingType: [], study: []});\n        }\n    };\n\n    const getDownstreamDrugType = async (drugType) => {\n        if(parameters.drugType.length > 0){\n            // reset downstream dropdowns\n            setSequencingOptions({options: [], disabled: true});\n            setStudyOptions({options: [], disabled: true});\n            // build query parameter string\n            let paramStr = buildQueryStr(parameters.gene.map(g => g.value), 'gene');\n            paramStr = paramStr.concat(`&datatype=${parameters.dataType}`);\n            paramStr = paramStr.concat(`&${buildQueryStr(parameters.sex, 'sex')}`);\n            paramStr = paramStr.concat(`&${buildQueryStr(parameters.primary, 'primary')}`);\n            paramStr = paramStr.concat(`&${buildQueryStr(drugType, 'drugtype')}`);\n            // get available options and enable downstream dropdowns\n            let options = await getDropdownOptions('sequencing', paramStr);\n            setParameters({\n                ...parameters,\n                drugType: drugType,\n                sequencingType: options.sequencing.map(item => item.value),\n                study: options.study.map(item => item.value)\n            });\n        }else{\n            setParameters({...parameters, sequencingType: [], study: []});\n        }\n    };\n\n    const getDownstreamSequencing = async (sequencingType) => {\n        // reset downstream dropdowns\n        setStudyOptions({options: [], disabled: true});\n        if(parameters.sequencingType.length > 0){\n            // build query parameter string\n            let paramStr = buildQueryStr(parameters.gene.map(g => g.value), 'gene');\n            paramStr = paramStr.concat(`&datatype=${parameters.dataType}`);\n            paramStr = paramStr.concat(`&${buildQueryStr(parameters.sex, 'sex')}`);\n            paramStr = paramStr.concat(`&${buildQueryStr(parameters.primary, 'primary')}`);\n            paramStr = paramStr.concat(`&${buildQueryStr(parameters.drugType, 'drugtype')}`);\n            paramStr = paramStr.concat(`&${buildQueryStr(sequencingType, 'sequencing')}`);\n            // get available options and enable downstream dropdowns\n            let options = await getDropdownOptions('study', paramStr);\n            setParameters({\n                ...parameters,\n                sequencingType: sequencingType,\n                study: options.study.map(item => item.value)\n            });\n        }else{\n            setParameters({...parameters, study: []});\n        }\n    };\n\n    return(\n        <Layout>\n            <Container>\n                <h4>Biomarker Evaluation</h4>\n                <StyledMessages ref={messages} />\n                <StyledForm flexDirection='column'>\n                    <div className='formField'>\n                        <div className='label'>Search for Gene(s): </div>\n                        <GeneSearch \n                            className='input'\n                            selectedGenes={parameters.gene}\n                            onChange={(e) => {setParameters({...parameters, gene: e.value})}}\n                        />\n                    </div>\n                    <div className='formField'>\n                        <div className='label'>Data Type: </div> \n                        <CustomDropdown\n                            className='input'\n                            value={parameters.dataType}\n                            options={dataTypeOptions.options} \n                            onChange={(e) => {setParameters({...parameters, dataType: e.value})}} \n                            filter={true}\n                            checkbox={true}\n                            placeholder='Select...'\n                            disabled={dataTypeOptions.disabled}\n                        />\n                    </div>\n                    <div className='formField'>\n                        <div className='label'>Sex: </div> \n                        <CustomMultiSelect \n                            className='input'\n                            value={parameters.sex}\n                            options={sexOptions.options} \n                            onChange={(e) => {getDownstreamSex(e.value)}} \n                            filter={true}\n                            checkbox={true}\n                            placeholder='Select...'\n                            disabled={sexOptions.disabled}\n                        />\n                    </div>\n                    <div className='formField'>\n                        <div className='label'>Primary Tissue: </div> \n                        <CustomMultiSelect \n                            className='input'\n                            value={parameters.primary}\n                            options={primaryOptions.options} \n                            onChange={(e) => {getDownStreamPrimary(e.value)}} \n                            filter={true}\n                            checkbox={true}\n                            placeholder='Select...'\n                            disabled={primaryOptions.disabled}\n                        />\n                    </div>\n                    <div className='formField'>\n                        <div className='label'>Drug Type: </div> \n                        <CustomMultiSelect \n                            className='input'\n                            value={parameters.drugType}\n                            options={drugTypeOptions.options} \n                            onChange={(e) => {getDownstreamDrugType(e.value)}} \n                            filter={true}\n                            checkbox={true}\n                            placeholder='Select...'\n                            disabled={drugTypeOptions.disabled}\n                        />\n                    </div>\n                    <div className='formField'>\n                        <div className='label'>Sequencing Type: </div> \n                        <CustomMultiSelect \n                            className='input'\n                            value={parameters.sequencingType}\n                            options={sequencingOptions.options} \n                            onChange={(e) => {getDownstreamSequencing(e.value)}} \n                            filter={true}\n                            checkbox={true}\n                            placeholder='Select...'\n                            disabled={sequencingOptions.disabled}\n                        />\n                    </div>\n                    <div className='formField'>\n                        <div className='label'>Studies: </div> \n                        <CustomMultiSelect \n                            className='input'\n                            value={parameters.study}\n                            options={studyOptions.options} \n                            onChange={(e) => {setParameters({...parameters, study: e.value})}} \n                            filter={true}\n                            checkbox={true}\n                            placeholder='Select...'\n                            disabled={studyOptions.disabled}\n                        />\n                    </div>\n                    <div className='formField'>\n                        <div className='label'>Email: </div> \n                        <CustomInputText \n                            className='input'\n                            value={parameters.email}\n                            onChange={(e) => {setParameters({...parameters, email: e.target.value})}} \n                        />\n                    </div>\n                    <div className='formField buttonField'>\n                        <ActionButton\n                            onClick={(e) => {setParameters({...parameters, gene: [], email: ''})}}\n                            text='Reset'\n                            type='reset'\n                            style={{width: '90px', height: '34px', fontSize: '14px', marginRight: '10px'}}\n                        />\n                        {\n                            parameters.submitting ?\n                            <Loader type=\"Oval\" color={colors.blue} height={35} width={35}/>\n                            :\n                            <ActionButton \n                                onClick={submitRequest} \n                                text='Submit' \n                                style={{width: '90px', height: '34px', fontSize: '14px'}} \n                                disabled={disableSubmit()}\n                            />\n                        }\n                    </div>\n                </StyledForm>\n            </Container>\n        </Layout>\n    );\n}\n\nexport default BiomarkerEvaluationRequest;","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledResultInfo = styled.div`\n    display: flex;\n    font-size: 12px;\n    .left {\n        margin-right: 30px;\n    }\n    td {\n        padding-bottom: 10px;\n    }\n    .title {\n        font-weight: bold;\n        padding-right: 10px;\n    }\n`;\n\nconst ResultInfo = (props) => {\n\n    const {reqInfo} = props;\n\n    return(\n        <StyledResultInfo>\n            <table className='left'>\n                <tbody>\n                    <tr>\n                        <td className='title'>Analysis ID: </td>\n                        <td>{reqInfo.analysis_id}</td>\n                    </tr>\n                    <tr>\n                        <td className='title'>Time Submitted: </td>\n                        <td>{reqInfo.time_submitted}</td>\n                    </tr>\n                    <tr>\n                        <td className='title'>Time Completed: </td>\n                        <td>{reqInfo.time_completed}</td>\n                    </tr>\n                </tbody>\n            </table>\n            <table className='left'>\n                <tbody>\n                    <tr>\n                        <td className='title'>Genes: </td>\n                        <td>{reqInfo.input_genes.join(', ')}</td>\n                    </tr>\n                    <tr>\n                        <td className='title'>Datatype: </td>\n                        <td>{reqInfo.input_datatype}</td>\n                    </tr>\n                    <tr>\n                        <td className='title'>Sex: </td>\n                        <td>{reqInfo.input_sex.map(s => s === 'M' ? 'Male' : 'Female').join(', ')}</td>\n                    </tr>\n                </tbody>\n            </table>\n            <table>\n                <tbody>\n                    <tr>\n                        <td className='title'>Primary: </td>\n                        <td>{reqInfo.input_primary.join(', ')}</td>\n                    </tr>\n                    <tr>\n                        <td className='title'>Drug Type: </td>\n                        <td>{reqInfo.input_drug_type.join(', ')}</td>\n                    </tr>\n                    <tr>\n                        <td className='title'>Sequencing Type: </td>\n                        <td>{reqInfo.input_sequencing.join(', ')}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </StyledResultInfo>\n    );\n}\n\nexport default ResultInfo;","import React, {useState, useEffect} from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport Loader from 'react-loader-spinner';\n\nimport Layout from '../UtilComponents/Layout';\nimport ResultInfo from './ResultInfo';\nimport StyledForm from '../UtilComponents/StyledForm';\nimport CustomDropdown from '../UtilComponents/CustomDropdown';\nimport ActionButton from '../UtilComponents/ActionButton';\nimport VolcanoPlotContainer from '../IOExplore/VolcanoPlotContainer';\nimport ForestPlotContainer from '../IOExplore/ForestPlotContainer';\nimport { PlotContainer, StyledPlotArea, LoaderContainer } from '../../styles/PlotStyles';\nimport ModalContainer from \"../IOExplore/ModalContainer\";\nimport colors from '../../styles/colors';\n\nconst BiomarkerEvaluationResult = () => {\n\n    const { id } = useParams();\n    const [reqInfo, setReqInfo] = useState();\n    const [parameters, setParameters] = useState({signatures: ['ALL'], outcome: '', model: ''});\n    const [outcomeDropdown, setOutcomeDropdown] = useState([]);\n    const [modelDropdown, setModelDropdown] = useState([]);\n    const [volcanoPlotData, setVolcanoPlotData] = useState({data: {}, loading: false, ready: false});\n    const [forestPlotData, setForestPlotData] = useState({data: {}, loading: false, ready: false});\n    const [modalData, setModalData] = useState({data: {}, ready: false});\n\n    const disableSubmit = () => {\n        return parameters.outcome.length === 0 || parameters.model.length === 0;\n    }\n\n    const reset = (e) => {\n        e.preventDefault();\n        setParameters({signatures: ['ALL'], outcome: '', model: ''});\n        setVolcanoPlotData({data: {}, loading: false, ready: false});\n        setForestPlotData({data: {}, loading: false, ready: false});\n    }\n\n    const getVolcanoPlotData = async (e) => {\n        e.preventDefault();\n        setVolcanoPlotData({data: {}, loading: true, ready: false}); // reset the data object so that the plot is drawn\n        const res = await axios.get(`/api/explore/biomarker/result/volcano_plot/${id}?outcome=${parameters.outcome}&model=${parameters.model}`);\n        console.log(res.data);\n        setVolcanoPlotData({data: res.data, loading: false, ready: true});\n    }\n\n    const getForestPlotData = async (params) => {\n        setForestPlotData({data: {}, loading: true, ready: false}); // reset the data object so that the plot is redrawn.\n        setParameters(params);\n        let res = {};\n        if(params.signature === 'Custom'){\n            res = await axios.get(`/api/explore/biomarker/result/forest_plot/${id}?model=${params.model}&outcome=${params.outcome}`);\n        }else{\n            res = await axios.post('/api/explore/forest_plot', params);\n        }\n        setForestPlotData({data: res.data, loading: false, ready: true});\n    }\n\n    const getModalData = async (params) => {\n        // setModalData({data: {}, ready: false}); // reset the data object so that the plot is redrawn.\n        const res = await axios.post('/api/explore/description_modal', params);\n        console.log(res.data)\n        setModalData({data: res.data, ready: true});\n    };\n\n    const removeModalData = () => {\n        setModalData({data: {}, ready: false}); // reset the data object so that the plot is redrawn.\n    };\n\n    useEffect(() => {\n        const getData = async () => {\n            console.log(id);\n            const res = await axios.get(`/api/explore/biomarker/result/${id}`);\n            console.log(res.data);\n            setReqInfo(res.data.reqInfo);\n            setOutcomeDropdown(res.data.outcomeDropdown);\n            setModelDropdown(res.data.modelDropdown);\n        }\n        getData();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        if(parameters.outcome === 'Response'){\n            setParameters({...parameters, model: 'LogReg'});\n            let models = modelDropdown.map(item => ({...item, disabled: item.value !== 'LogReg'}));\n            setModelDropdown(models);\n        }else if(parameters.outcome === 'OS' || parameters.outcome === 'PFS'){\n            setParameters({...parameters, model: ''});\n            let models = modelDropdown.map(item => ({...item, disabled: item.value === 'LogReg'}));\n            setModelDropdown(models);\n        }else{\n            setParameters({...parameters, model: ''});\n            let models = modelDropdown.map(item => ({...item, disabled: false}));\n            setModelDropdown(models);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [parameters.outcome]);\n\n    return(\n        <Layout>\n            <h3>Biomarker Evaluation Result</h3>\n            {\n                typeof reqInfo !== 'undefined' && <ResultInfo reqInfo={reqInfo} />\n            }\n            <StyledForm flexDirection='row'>\n                <div className='formField'>\n                    <div className='label'>Outcome: </div>\n                    <CustomDropdown\n                        className='input'\n                        value={parameters.outcome}\n                        options={outcomeDropdown}\n                        onChange={(e) => {setParameters({...parameters, outcome: e.value})}}\n                        placeholder=\"Select...\"\n                    />\n                </div>\n                <div className='formField'>\n                    <div className='label'>Model: </div>\n                    <CustomDropdown\n                        className='input'\n                        value={parameters.model}\n                        options={modelDropdown}\n                        onChange={(e) => {setParameters({...parameters, model: e.value})}}\n                        placeholder=\"Select...\"\n                        disabled={parameters.outcome.length === 0}\n                    />\n                </div>\n                <div className='formField buttonField'>\n                    <ActionButton \n                        className='left'\n                        onClick={getVolcanoPlotData} \n                        text='Submit'\n                        disabled={disableSubmit()}\n                    />\n                    <ActionButton\n                        onClick={reset}\n                        text='Reset'\n                        type='reset'\n                    />\n                </div>\n            </StyledForm>\n            <PlotContainer>\n                <StyledPlotArea width='40%'>\n                {\n                    volcanoPlotData.ready ?\n                    <VolcanoPlotContainer \n                        parameters={parameters} \n                        setParameters={setParameters} \n                        volcanoPlotData={volcanoPlotData} \n                        getForestPlotData={getForestPlotData} \n                        onthefly={true}\n                    />\n                    :\n                    volcanoPlotData.loading ?\n                        <LoaderContainer>\n                            <Loader type=\"Oval\" color={colors.blue} height={80} width={80}/>\n                        </LoaderContainer>\n                        :\n                        <div>\n                            <h3>Volcano Plot</h3>\n                            <div className='forestPlotMessage'>\n                                Select outcome and model to view the volcano plot.\n                            </div>\n                        </div>\n                }\n                </StyledPlotArea>\n                <StyledPlotArea width='60%'>\n                {\n                    forestPlotData.ready ?\n                    <ForestPlotContainer parameters={parameters} forestPlotData={forestPlotData} getModalData={getModalData} />\n                    :\n                    forestPlotData.loading ?\n                        <LoaderContainer>\n                            <Loader type=\"Oval\" color={colors.blue} height={80} width={80}/>\n                        </LoaderContainer>\n                        :\n                        <div>\n                            <h3>Forest Plot</h3>\n                            <div className='forestPlotMessage'>\n                                Click on a signature point on the volcano plot to display a corresponding forest plot.\n                            </div>\n                        </div>\n                }\n                </StyledPlotArea>\n            </PlotContainer>\n            <PlotContainer>\n            {\n                modalData.ready &&\n                <ModalContainer\n                    modalData={modalData}\n                    removeModalData = {removeModalData}\n                /> \n            }\n            </PlotContainer>\n        </Layout>\n    );\n}\n\nexport default BiomarkerEvaluationResult;","const studies =  [\n  {\n    \"study\": \"Braun\",\n    \"Primary\": \"Kidney\",\n    \"Sequencing\": \"WES\",\n    \"N\": \"207\",\n    \"coef\": \"1.31\",\n    \"SE\": \"1\",\n    \"95CI_low\": \"-0.63\",\n    \"95CI_high\": \"3.3\",\n    \"Pval\": \"0.19116187669392\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Hugo\",\n    \"Primary\": \"Melanoma\",\n    \"Sequencing\": \"WES\",\n    \"N\": \"38\",\n    \"coef\": \"-1.15\",\n    \"SE\": \"0.88\",\n    \"95CI_low\": \"-3.03\",\n    \"95CI_high\": \"0.51\",\n    \"Pval\": \"0.192069400517325\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Jung\",\n    \"Primary\": \"Lung\",\n    \"Sequencing\": \"WES\",\n    \"N\": \"58\",\n    \"coef\": \"-2.89\",\n    \"SE\": \"1.87\",\n    \"95CI_low\": \"-6.81\",\n    \"95CI_high\": \"0.72\",\n    \"Pval\": \"0.12320240249438\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Liu\",\n    \"Primary\": \"Melanoma\",\n    \"Sequencing\": \"WES\",\n    \"N\": \"133\",\n    \"coef\": \"-0.6\",\n    \"SE\": \"0.33\",\n    \"95CI_low\": \"-1.27\",\n    \"95CI_high\": \"0.04\",\n    \"Pval\": \"0.0699389753777812\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Mariathasan\",\n    \"Primary\": \"Bladder\",\n    \"Sequencing\": \"TGS\",\n    \"N\": \"111\",\n    \"coef\": \"-1.4\",\n    \"SE\": \"0.76\",\n    \"95CI_low\": \"-3.01\",\n    \"95CI_high\": \"-0.01\",\n    \"Pval\": \"0.0654101643137176\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Mariathasan\",\n    \"Primary\": \"Kidney\",\n    \"Sequencing\": \"TGS\",\n    \"N\": \"41\",\n    \"coef\": \"-4.15\",\n    \"SE\": \"1.97\",\n    \"95CI_low\": \"-8.51\",\n    \"95CI_high\": \"-0.67\",\n    \"Pval\": \"0.0354133425733776\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Miao.1\",\n    \"Primary\": \"Kidney\",\n    \"Sequencing\": \"WES\",\n    \"N\": \"26\",\n    \"coef\": \"6.64\",\n    \"SE\": \"4.65\",\n    \"95CI_low\": \"-1.94\",\n    \"95CI_high\": \"16.66\",\n    \"Pval\": \"0.153071317449668\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Miao.2\",\n    \"Primary\": \"Bladder\",\n    \"Sequencing\": \"WES\",\n    \"N\": \"23\",\n    \"coef\": \"-4.06\",\n    \"SE\": \"2.01\",\n    \"95CI_low\": \"-8.59\",\n    \"95CI_high\": \"-0.55\",\n    \"Pval\": \"0.0429795958386913\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Miao.2\",\n    \"Primary\": \"Lung\",\n    \"Sequencing\": \"WES\",\n    \"N\": \"46\",\n    \"coef\": \"-4.08\",\n    \"SE\": \"1.32\",\n    \"95CI_low\": \"-7.01\",\n    \"95CI_high\": \"-1.77\",\n    \"Pval\": \"0.00206350292809808\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Miao.2\",\n    \"Primary\": \"Melanoma\",\n    \"Sequencing\": \"WES\",\n    \"N\": \"121\",\n    \"coef\": \"-0.9\",\n    \"SE\": \"0.41\",\n    \"95CI_low\": \"-1.74\",\n    \"95CI_high\": \"-0.11\",\n    \"Pval\": \"0.0282676251140886\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Nathanson\",\n    \"Primary\": \"Melanoma\",\n    \"Sequencing\": \"WES\",\n    \"N\": \"64\",\n    \"coef\": \"-1.9\",\n    \"SE\": \"0.74\",\n    \"95CI_low\": \"-3.47\",\n    \"95CI_high\": \"-0.53\",\n    \"Pval\": \"0.0103990433952875\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Riaz\",\n    \"Primary\": \"Melanoma\",\n    \"Sequencing\": \"WES\",\n    \"N\": \"42\",\n    \"coef\": \"-0.88\",\n    \"SE\": \"0.59\",\n    \"95CI_low\": \"-2.1\",\n    \"95CI_high\": \"0.26\",\n    \"Pval\": \"0.136832503169481\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Rizvi.15\",\n    \"Primary\": \"Lung\",\n    \"Sequencing\": \"WES\",\n    \"N\": \"27\",\n    \"coef\": \"-3.34\",\n    \"SE\": \"1.54\",\n    \"95CI_low\": \"-6.88\",\n    \"95CI_high\": \"-0.68\",\n    \"Pval\": \"0.0299558614957989\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Rizvi.18\",\n    \"Primary\": \"Lung\",\n    \"Sequencing\": \"TGS\",\n    \"N\": \"29\",\n    \"coef\": \"-1.91\",\n    \"SE\": \"1.43\",\n    \"95CI_low\": \"-5.05\",\n    \"95CI_high\": \"0.74\",\n    \"Pval\": \"0.181139430451187\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Samstein\",\n    \"Primary\": \"Esophagus\",\n    \"Sequencing\": \"TGS\",\n    \"N\": \"21\",\n    \"coef\": \"-0.26\",\n    \"SE\": \"1.57\",\n    \"95CI_low\": \"-3.28\",\n    \"95CI_high\": \"2.68\",\n    \"Pval\": \"0.86966691869969\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Samstein\",\n    \"Primary\": \"HNC\",\n    \"Sequencing\": \"TGS\",\n    \"N\": \"72\",\n    \"coef\": \"0.23\",\n    \"SE\": \"0.56\",\n    \"95CI_low\": \"-0.91\",\n    \"95CI_high\": \"1.31\",\n    \"Pval\": \"0.677660893752833\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Samstein\",\n    \"Primary\": \"Melanoma\",\n    \"Sequencing\": \"TGS\",\n    \"N\": \"108\",\n    \"coef\": \"-1\",\n    \"SE\": \"0.33\",\n    \"95CI_low\": \"-1.66\",\n    \"95CI_high\": \"-0.37\",\n    \"Pval\": \"0.00232570823833877\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Samstein\",\n    \"Primary\": \"Unknown\",\n    \"Sequencing\": \"TGS\",\n    \"N\": \"29\",\n    \"coef\": \"-2.78\",\n    \"SE\": \"0.88\",\n    \"95CI_low\": \"-4.72\",\n    \"95CI_high\": \"-1.22\",\n    \"Pval\": \"0.0015732380306142\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Snyder\",\n    \"Primary\": \"Ureteral\",\n    \"Sequencing\": \"WES\",\n    \"N\": \"22\",\n    \"coef\": \"-1.02\",\n    \"SE\": \"0.88\",\n    \"95CI_low\": \"-2.92\",\n    \"95CI_high\": \"0.62\",\n    \"Pval\": \"0.24338559549317\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Van_Allen\",\n    \"Primary\": \"Melanoma\",\n    \"Sequencing\": \"WES\",\n    \"N\": \"104\",\n    \"coef\": \"-0.52\",\n    \"SE\": \"0.49\",\n    \"95CI_low\": \"-1.5\",\n    \"95CI_high\": \"0.45\",\n    \"Pval\": \"0.288334147400417\",\n    \"I2\": \"\",\n    \"Pval_I2\": \"\",\n    \"\": \"\"\n  },\n  {\n    \"study\": \"Meta-analysis\",\n    \"Primary\": \"ALL\",\n    \"Sequencing\": \"\",\n    \"N\": \"1322\",\n    \"coef\": \"-1.1\",\n    \"SE\": \"0.24\",\n    \"95CI_low\": \"-1.57\",\n    \"95CI_high\": \"-0.63\",\n    \"Pval\": \"4.09577538170971E-06\",\n    \"I2\": \"0.46\",\n    \"Pval_I2\": \"0.0128496553144055\",\n    \"\": \"\"\n  },\n\n]\n\n\nexport default studies;\n","import React from \"react\";\n// import Layout from '../UtilComponents/Layout';\nimport styled from 'styled-components';\nimport studies from \"../../example_output/sample-output.js\";\nimport * as d3 from 'd3';\n// import Tooltip from \"react-bootstrap/Tooltip\";\n// import Button from \"react-bootstrap/Button\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\n\n\nconst StyledHome = styled.div`\n    width: 100%;\n    height: 100%;\n    margin-top: 40px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`;\n\n\nconst initial = {\n  svgWidth: 700,\n  svgHight: 700,\n  edgeSize: 10,\n  fontSize: 9,\n  xAxeMargin: 30,\n  topMargin: 20,\n  leftMargin: 200\n}\n\n/***\n * Get the dataset (studies + overall value)\n * keep the studies in data and the overall\n **/\nconst dataset = studies\n\n\nconst data = () => {\n  return dataset.filter((element) => {\n    return element.study !== \"Meta-analysis\";\n  })\n}\n\n\nconst overall = studies[studies.length - 1]\n\n\n/***\n * Find the min and max value of all studies for adjusting the scales and axes\n ***/\n\nconst min_low = () => {\n  return Math.min(...dataset.map(function (d) {\n    return Number(d[\"95CI_low\"])\n  }))\n}\n\nconst max_high = () => {\n  return Math.max(...dataset.map(function (d) {\n    return Number(d[\"95CI_high\"])\n  }))\n}\n\n/***\n * Functions for scaling X and Y\n ***/\n\nconst xScale = (d) => {\n  const scale = d3\n    .scaleLinear()\n    .domain([min_low(), max_high()])\n    .range([initial.leftMargin, initial.leftMargin + 400])\n  return scale(d)\n}\n\nconst yScale = (d) => {\n  const scale = d3\n    .scaleLinear()\n    .domain([0, dataset.length + 1])\n    .range([20, 460])\n  return scale(d)\n}\n\n/***\n * Find the overall rhombus points on svg\n ***/\n\nconst polygonPoints = () => {\n  return (xScale(Number(overall[\"95CI_low\"])) + \", \" + yScale(dataset.length) + \" \" +\n    xScale(Number(overall[\"coef\"])) + \", \" + (yScale(dataset.length) - (initial.edgeSize / 2)) + \" \" +\n    xScale(Number(overall[\"95CI_high\"])) + \", \" + yScale(dataset.length) + \" \" +\n    xScale(Number(overall[\"coef\"])) + \", \" + (yScale(dataset.length) + (initial.edgeSize / 2)) + \" \")\n}\n\n/***\n *\n ***/\n\nconst xAxeTag = [min_low(), overall.coef, 1, max_high()];\n\n/***\n * Mouseover data point group (text+interval+rect)\n */\nconst renderTooltip = (d) => (\n  < div\nstyle = {\n{\n  fontSize:'12px', backgroundColor:\n  'rgba(242,255,223,0.95)', padding:\n  '2px 10px', color:\n  'rgb(7,28,44)', borderRadius:\n  3\n}\n}>\n{\n  studies[d].study + \" (\" + studies[d].Primary + \"; \" + studies[d].Sequencing + \"): \" +\n  \"N=\" + studies[d].N + \"; coef=\" + studies[d].coef + \"; P-value=\" + Number(studies[d].Pval).toFixed(4)\n}\n</div>\n)\n;\n\n/***\n * Creating the plot\n ***/\n\nconst ForestPlot = () => {\n  return (\n    <StyledHome>\n    < svg\n  height = \"800\"\n  width = \"800\" >\n    {/*Creating axes*/}\n    < g >\n    < line\n  id = {\"xAxe\"}\n  x1 = {xScale(min_low()\n)\n  -(initial.leftMargin * 2 / 3)\n}\n  y1 = {yScale(dataset.length + 1\n)\n}\n  x2 = {xScale(max_high()\n)\n  +initial.xAxeMargin\n}\n  y2 = {yScale(dataset.length + 1\n)\n}\n  stroke = \"#0C3544\"\n  strokeWidth = \"2\"\n    />\n    < line\n  id = {\"yAxe\"}\n  x1 = {xScale(1\n)\n}\n  y1 = {yScale( - 2\n)\n}\n  x2 = {xScale(1\n)\n}\n  y2 = {yScale(dataset.length + 1\n)\n}\n  stroke = \"#0C3544\"\n  strokeWidth = \"2\"\n    />\n    <line\n  strokeDasharray = \"3,4\"\n  id = {\"yAxe\"}\n  x1 = {xScale(overall.coef\n)\n}\n  y1 = {yScale( - 2\n)\n}\n  x2 = {xScale(overall.coef\n)\n}\n  y2 = {yScale(dataset.length + 1\n)\n}\n  stroke = \"#EF8020\"\n  strokeWidth = \"1\"\n    />\n    {\n      Object.keys(xAxeTag).map((key, index) =>\n        < text\n      id = {\"xTag-\"+index}\n      key = {key}\n      textAnchor = \"middle\"\n      x = {xScale(xAxeTag[index]\n)\n}\n  y = {yScale(dataset.length + 2\n)\n}\n  fontSize = {initial.fontSize}\n  fontWeight = \"bold\"\n  fill = \"#0C3544\"\n    >\n    {xAxeTag[index]}\n    </text>\n)\n}\n  {\n    Object.keys(xAxeTag).map((key, index) =>\n    <line\n    id = {\"xAxeDash\"+index}\n    key = {key}\n    x1 = {xScale(xAxeTag[index]\n  )\n  }\n    y1 = {yScale(dataset.length + 1\n  )\n    -5\n  }\n    x2 = {xScale(xAxeTag[index]\n  )\n  }\n    y2 = {yScale(dataset.length + 1\n  )\n    +5\n  }\n    stroke = \"#0C3544\"\n    strokeWidth = \"2\"\n      >\n      </line>\n  )\n  }\n</g>\n\n  {/*Creating Data Point*/\n  }\n\n  {\n    Object.keys(data()).map((key, index) =>\n    < React.Fragment >\n    < OverlayTrigger\n    placement = \"right\"\n    overlay = {renderTooltip(index)}\n    delay = {\n    {\n      show: 100, hide: 200\n    }\n  }\n  >\n  <g\n    id = {\"datapoint-\" +index}\n    onClick = {() => console.log(index)}>\n    {/* Tags */}\n  <text\n    id = {\"tag-\"+index}\n    key = {key}\n    x = {initial.leftMargin / 3}\n    y = {yScale(index) + 2\n  }\n    fontSize = {initial.fontSize}\n    fill = \"#0C3544\"\n      >\n      {dataset[key].study}({dataset[key].Primary}, {dataset[key].Sequencing})\n      </text>\n      {/* Intervals */}\n      < line\n    id = {\"interval-\"+index}\n    x1 = {xScale(Number(dataset[key][\"95CI_low\"])\n  )\n  }\n    y1 = {yScale(index)}\n    x2 = {xScale(Number(dataset[key][\"95CI_high\"])\n  )\n  }\n    y2 = {yScale(index)}\n    stroke = \"#73848E\"\n    strokeWidth = \"2\" >\n\n      <title>\n      95\n    CI:({data()[key][\"95CI_low\"]}, {data()[key][\"95CI_high\"]})\n    </title>\n    </line>\n\n    {/* Data point marks */}\n    <rect\n    id = {\"datPoint-\" +index}\n    x = {xScale(Number(dataset[key][\"coef\"])\n  )\n    -initial.edgeSize / 2\n  }\n    y = {yScale(index) - initial.edgeSize / 2\n  }\n    width = {initial.edgeSize}\n    height = {initial.edgeSize}\n    fill = \"#236e96\" >\n      </rect>\n      </g>\n      </OverlayTrigger>\n      </React.Fragment>\n  )\n  }\n  {/*Creating Diamond*/\n  }\n<polygon\n  id = \"diamond\"\n  points = {polygonPoints()}\n  fill = \"#F2950B\"\n    >\n    </polygon>\n    </svg>\n    </StyledHome>\n)\n}\n\nexport default ForestPlot;\n","import React, {useEffect} from 'react';\nimport Layout from '../UtilComponents/Layout';\nimport axios from 'axios';\n\nconst Test = () => {\n\n    useEffect(() => {\n        const getData = async () => {\n            try{\n                const res = await axios.get('http://localhost:5000/api/explore/itnt_data');\n                console.log(res.data);\n            }catch(error){\n                console.log(error);\n            }\n        }\n        getData();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <Layout>\n            <h1>Test</h1>\n        </Layout>\n    );\n};\n\nexport default Test;","\nimport { createGlobalStyle } from 'styled-components';\nimport colors from './colors';\n\nconst GlobalStyles = createGlobalStyle`\n    html, body {\n        height: 100%;\n        margin: 0;\n    }\n\n    body {\n        color: ${colors.gray_text};\n        font-family: 'Noto Sans', sans-serif;\n        font-weight: 400;\n    }\n\n    #root {\n        height: 100%;\n        min-height: 100vh;\n    }\n\n    a {\n        text-decoration: none;\n        transition: all 0.25s ease-out 0s;\n    }\n\n    a:hover {\n        transition: all 0.25s ease-out 0s;\n    }\n`;\n\nexport default GlobalStyles;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n// individual page components\nimport {\n  Home,\n  Explore,\n  BiomarkerEvaluationRequest,\n  BiomarkerEvaluationResult,\n  Test,\n} from './Components/index';\n\n// styled component\nimport GlobalStyles from './styles/GlobalStyles';\n\nconst App = () => {\n  return (\n    <React.Fragment>\n      <GlobalStyles />\n        <Router>\n          <Switch>\n            <Route path='/' exact component={Home} />\n            <Route path='/explore/precomputed' exact component={Explore} />\n            <Route path='/explore/biomarker/request' exact component={BiomarkerEvaluationRequest} />\n            <Route path='/explore/biomarker/result/:id' exact component={BiomarkerEvaluationResult} />\n            <Route path='/test' exact component={Test} />\n          </Switch>\n        </Router>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'primereact/resources/themes/saga-blue/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}