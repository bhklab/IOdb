colnames(dataset_gene) <- colnames_dataset_gene
for(result in results){
dataset_id <- tolower(str_remove(result, 'results/'))
ds_genes <- c()
if(dataset[dataset_id, 'expr'] == 1){
tmp <- read.csv(paste0(result, '/EXPR.csv.gz'), sep=';', header=T)
expr_genes <- rownames(tmp)
ds_genes <- coalesce(ds_genes, expr_genes)
}
tmp <- data.frame(matrix(ncol=length(colnames_dataset_gene), nrow=length(ds_genes)))
colnames(tmp) <- colnames_dataset_gene
tmp$dataset_id <- dataset_id
tmp$gene_id <- ds_genes
}
View(tmp)
rlang::last_error()
colnames_dataset_gene <- c('dataset_id', 'gene_id')
dataset_gene <- data.frame(matrix(ncol=length(colnames_dataset_gene), nrow=0))
colnames(dataset_gene) <- colnames_dataset_gene
for(result in results){
dataset_id <- tolower(str_remove(result, 'results/'))
ds_genes <- c()
if(dataset[dataset_id, 'expr'] == 1){
tmp <- read.csv(paste0(result, '/EXPR.csv.gz'), sep=';', header=T)
expr_genes <- rownames(tmp)
ds_genes <- unique(paste(ds_genes, expr_genes))
}
tmp <- data.frame(matrix(ncol=length(colnames_dataset_gene), nrow=length(ds_genes)))
colnames(tmp) <- colnames_dataset_gene
tmp$dataset_id <- dataset_id
tmp$gene_id <- ds_genes
}
colnames_dataset_gene <- c('dataset_id', 'gene_id')
dataset_gene <- data.frame(matrix(ncol=length(colnames_dataset_gene), nrow=0))
colnames(dataset_gene) <- colnames_dataset_gene
for(result in results){
dataset_id <- tolower(str_remove(result, 'results/'))
ds_genes <- c()
if(dataset[dataset_id, 'expr'] == 1){
tmp <- read.csv(paste0(result, '/EXPR.csv.gz'), sep=';', header=T)
expr_genes <- rownames(tmp)
ds_genes <- unique(paste(ds_genes, expr_genes))
}
tmp <- data.frame(matrix(ncol=length(colnames_dataset_gene), nrow=length(ds_genes)))
colnames(tmp) <- colnames_dataset_gene
tmp$dataset_id <- dataset_id
tmp$gene_id <- ds_genes
dataset_gene <- rbind(dataset_gene, tmp)
}
View(dataset_gene)
tmp <- read.csv('results/Jung/CNA_gene.csv.gz')
View(tmp)
tmp <- read.csv('results/Jung/CNA_gene.csv.gz', sep=';', header=T)
View(tmp)
tmp <- read.csv('results/Jung/SNV.csv.gz', sep=';', header=T)
View(tmp)
View(tmp)
colnames_dataset_gene <- c('dataset_id', 'gene_id')
dataset_gene <- data.frame(matrix(ncol=length(colnames_dataset_gene), nrow=0))
colnames(dataset_gene) <- colnames_dataset_gene
for(result in results){
dataset_id <- tolower(str_remove(result, 'results/'))
ds_genes <- c()
if(dataset[dataset_id, 'expr'] == 1){
tmp <- read.csv(paste0(result, '/EXPR.csv.gz'), sep=';', header=T)
expr_genes <- rownames(tmp)
ds_genes <- unique(paste(ds_genes, expr_genes))
}
if(dataset[dataset_id, 'cna'] == 1){
tmp <- read.csv(paste0(result, '/CNA_gene.csv.gz'), sep=';', header=T)
cna_genes <- rownames(tmp)
ds_genes <- unique(paste(ds_genes, cna_genes))
}
if(dataset[dataset_id, 'snv'] == 1){
tmp <- read.csv(paste0(result, '/SNV.csv.gz'), sep=';', header=T)
snv_genes <- unique(tmp$Gene)
ds_genes <- unique(paste(ds_genes, snv_genes))
}
tmp <- data.frame(matrix(ncol=length(colnames_dataset_gene), nrow=length(ds_genes)))
colnames(tmp) <- colnames_dataset_gene
tmp$dataset_id <- dataset_id
tmp$gene_id <- ds_genes
dataset_gene <- rbind(dataset_gene, tmp)
}
View(dataset_gene)
tmp <- read.csv('results/Braun/EXPR.csv.gz', sep=';', header=T)
View(tmp)
colnames_dataset_gene <- c('dataset_id', 'gene_id')
dataset_gene <- data.frame(matrix(ncol=length(colnames_dataset_gene), nrow=0))
colnames(dataset_gene) <- colnames_dataset_gene
for(result in results){
dataset_id <- tolower(str_remove(result, 'results/'))
ds_genes <- c()
if(dataset[dataset_id, 'expr'] == 1){
tmp <- read.csv(paste0(result, '/EXPR.csv.gz'), sep=';', header=T)
expr_genes <- rownames(tmp)
ds_genes <- unique(c(ds_genes, expr_genes))
}
if(dataset[dataset_id, 'cna'] == 1){
tmp <- read.csv(paste0(result, '/CNA_gene.csv.gz'), sep=';', header=T)
cna_genes <- rownames(tmp)
ds_genes <- unique(c(ds_genes, cna_genes))
}
if(dataset[dataset_id, 'snv'] == 1){
tmp <- read.csv(paste0(result, '/SNV.csv.gz'), sep=';', header=T)
snv_genes <- unique(tmp$Gene)
ds_genes <- unique(c(ds_genes, snv_genes))
}
tmp <- data.frame(matrix(ncol=length(colnames_dataset_gene), nrow=length(ds_genes)))
colnames(tmp) <- colnames_dataset_gene
tmp$dataset_id <- dataset_id
tmp$gene_id <- ds_genes
dataset_gene <- rbind(dataset_gene, tmp)
}
View(dataset_gene)
tmp <- read.csv('results/Zhao/SNV.csv.gz', sep=';', header=T)
View(tmp)
View(tmp)
x <- str_split('MED12L, P2RY12', ', ')
View(x)
x[[1]]
x <- str_split('MED12L', ', ')
x[[1]]
colnames_dataset_gene <- c('dataset_id', 'gene_id')
dataset_gene <- data.frame(matrix(ncol=length(colnames_dataset_gene), nrow=0))
colnames(dataset_gene) <- colnames_dataset_gene
for(result in results){
dataset_id <- tolower(str_remove(result, 'results/'))
ds_genes <- c()
if(dataset[dataset_id, 'expr'] == 1){
tmp <- read.csv(paste0(result, '/EXPR.csv.gz'), sep=';', header=T)
expr_genes <- rownames(tmp)
ds_genes <- unique(c(ds_genes, expr_genes))
}
if(dataset[dataset_id, 'cna'] == 1){
tmp <- read.csv(paste0(result, '/CNA_gene.csv.gz'), sep=';', header=T)
cna_genes <- rownames(tmp)
ds_genes <- unique(c(ds_genes, cna_genes))
}
if(dataset[dataset_id, 'snv'] == 1){
tmp <- read.csv(paste0(result, '/SNV.csv.gz'), sep=';', header=T)
snv_genes <- unique(tmp$Gene)
cleaned_snv_genes <- c()
for(gene in snv_genes){
str <- str_split(gene, ', ')
cleaned_snv_genes <- unique(c(cleaned_snv_genes, str[[1]]))
}
ds_genes <- unique(c(ds_genes, cleaned_snv_genes))
}
tmp <- data.frame(matrix(ncol=length(colnames_dataset_gene), nrow=length(ds_genes)))
colnames(tmp) <- colnames_dataset_gene
tmp$dataset_id <- dataset_id
tmp$gene_id <- ds_genes
dataset_gene <- rbind(dataset_gene, tmp)
}
View(dataset_gene)
unique_genes <- unique(dataset_gene$gene_id)
gene <- data.frame(matrix(ncol=1, nrow=length(unique_genes)))
colnames(gene) <- c('gene_id')
View(gene)
gene$gene_id <- unique_genes
View(gene)
rownames(gene) <- gene$gene_id
View(gene)
colnames_dataset_gene <- c('dataset_id', 'gene_id')
dataset_gene <- data.frame(matrix(ncol=length(colnames_dataset_gene), nrow=0))
colnames(dataset_gene) <- colnames_dataset_gene
for(result in results){
dataset_id <- tolower(str_remove(result, 'results/'))
ds_genes <- c()
if(dataset[dataset_id, 'expr'] == 1){
tmp <- read.csv(paste0(result, '/EXPR.csv.gz'), sep=';', header=T)
expr_genes <- rownames(tmp)
ds_genes <- unique(c(ds_genes, expr_genes))
}
if(dataset[dataset_id, 'cna'] == 1){
tmp <- read.csv(paste0(result, '/CNA_gene.csv.gz'), sep=';', header=T)
cna_genes <- rownames(tmp)
ds_genes <- unique(c(ds_genes, cna_genes))
}
# if(dataset[dataset_id, 'snv'] == 1){
#   tmp <- read.csv(paste0(result, '/SNV.csv.gz'), sep=';', header=T)
#   snv_genes <- unique(tmp$Gene)
#   cleaned_snv_genes <- c()
#   for(gene in snv_genes){
#     str <- str_split(gene, ', ')
#     cleaned_snv_genes <- unique(c(cleaned_snv_genes, str[[1]]))
#   }
#   ds_genes <- unique(c(ds_genes, cleaned_snv_genes))
# }
tmp <- data.frame(matrix(ncol=length(colnames_dataset_gene), nrow=length(ds_genes)))
colnames(tmp) <- colnames_dataset_gene
tmp$dataset_id <- dataset_id
tmp$gene_id <- ds_genes
dataset_gene <- rbind(dataset_gene, tmp)
}
View(dataset_gene)
unique_genes <- unique(dataset_gene$gene_id)
gene <- data.frame(matrix(ncol=1, nrow=length(unique_genes)))
colnames(gene) <- c('gene_id')
gene$gene_id <- unique_genes
rownames(gene) <- gene$gene_id
View(gene)
write.csv(dataset, 'seed_files/dataset.csv')
rownames(dataset) <- c()
rownames(genes) <- c()
rownames(dataset_gene) <- c()
rownames(clinical_info) <- c()
rownames(dataset) <- c()
rownames(gene) <- c()
rownames(dataset_gene) <- c()
rownames(clinical_info) <- c()
write.csv(dataset, 'seed_files/dataset.csv')
write.csv(genes, 'seed_files/genes.csv')
write.csv(dataset_gene, 'seed_files/dataset_gene.csv')
write.csv(clinical_info, 'seed_files/clinical_info.csv')
write.csv(gene, 'seed_files/genes.csv')
write.csv(dataset, 'seed_files/dataset.csv', row.names=F)
write.csv(gene, 'seed_files/gene.csv', row.names=F)
write.csv(dataset_gene, 'seed_files/dataset_gene.csv', row.names=F)
write.csv(clinical_info, 'seed_files/clinical_info.csv', row.names=F)
con<-file('seed_files/gene.csv',encoding="UTF-8")
write.csv(gene, file=con, row.names=F)
con<-file('csv/gene.csv',encoding="UTF-8")
write.csv(gene, file=con, row.names=F)
View(gene)
colnames(clinical_info)[8] <- 'response_other_info'
View(clinical_info)
write.csv(clinical_info, 'csv/clinical_info.csv', row.names=F)
colnames(clinical_info)[5] <- 'primary_tissue'
View(clinical_info)
write.csv(clinical_info, 'csv/clinical_info.csv', row.names=F)
dataset$dataset_id
unique(clinical_info$dataset_id)
tmp <- clinical_info[, clinical_info$dataset_id == NA]
tmp <- clinical_info[clinical_info$dataset_id == NA]
tmp <- clinical_info[. is.na(clinical_info$dataset_id)]
tmp <- clinical_info[, is.na(clinical_info$dataset_id)]
tmp <- clinical_info[is.na(clinical_info$dataset_id), ]
View(tmp)
View(clinical_info)
x <- read.csv('results/miao.1/cased_sequenced.csv')
View(x)
x <- read.csv('results/miao.1/cased_sequenced.csv', sep=';', header=T)
View(x)
clinical_info <- clinical_info[!is.na(clinical_info$dataset_id)]
clinical_info <- clinical_info[!is.na(clinical_info$dataset_id), ]
write.csv(clinical_info, 'csv/clinical_info.csv', row.names=F)
install.packages("tidyr")
library(tidyr)
replace_na(clinical_info, 'NULL')
x <- list(colnames(clinical_info))
View(x)
clinical_list <- replace_na(clinical_info, list(
sex="NULL",
age="NULL",
primary_tissue="NULL",
histo="NULL",
stage="NULL",
response_other_info="NULL",
recist="NULL",
response="NULL",
drug_type="NULL",
dna="NULL",
rna="NULL",
expr="NULL",
cna="NULL",
snv="NULL"
))
clinical_info <- replace_na(clinical_info, list(
sex="NULL",
age="NULL",
primary_tissue="NULL",
histo="NULL",
stage="NULL",
response_other_info="NULL",
recist="NULL",
response="NULL",
drug_type="NULL",
dna="NULL",
rna="NULL",
expr="NULL",
cna="NULL",
snv="NULL"
))
View(clinical_info)
write.csv(clinical_info, 'csv/clinical_info.csv', row.names=F)
View(clinical_info)
View(clinical_info)
View(clinical_info)
write.csv(clinical_info, 'csv/clinical_info.csv', row.names=F)
colnames_clin <- c("dataset_id", "patient", "sex", "age", "primary", "histo", "stage", "response.other.info", "recist", "response", "drug_type", "dna", "rna", 'expr', 'cna', 'snv')
clinical_info <- data.frame(matrix(ncol=length(colnames_clin), nrow=0))
colnames(clinical_info) <- colnames_clin
for(result in results){
dataset_id <- tolower(str_remove(result, 'results/'))
df_clin <- read.csv(paste0(result, '/CLIN.csv'), sep=';', header=T)
df_seq <- read.csv(paste0(result, '/cased_sequenced.csv'), sep=';', header=T)
df_clin <- cbind(dataset_id=dataset_id, df_clin)
if(!'response.other.info' %in% names(df_clin)){
df_clin$response.other.info <- NA
}
df_clin <- df_clin[, c("dataset_id", "patient", "sex", "age", "primary", "histo", "stage", "response.other.info", "recist", "response", "drug_type", "dna", "rna")]
rownames(df_clin) <- paste0(df_clin$dataset_id, '_', df_clin$patient)
df_clin$expr <- 0
df_clin$cna <- 0
df_clin$snv <- 0
rownames(df_seq) <- paste0(dataset_id, '_', df_seq$patient)
for(row in rownames(df_seq)){
df_clin[row, 'expr'] <- df_seq[row, 'expr']
df_clin[row, 'cna'] <- df_seq[row, 'cna']
df_clin[row, 'snv'] <- df_seq[row, 'snv']
}
clinical_info <- rbind(clinical_info, df_clin)
}
colnames(clinical_info)[5] <- 'primary_tissue'
colnames(clinical_info)[8] <- 'response_other_info'
clinical_info <- clinical_info[!is.na(clinical_info$dataset_id), ]
View(clinical_info)
write.csv(clinical_info, 'csv/clinical_info.csv', row.names=F)
View(gene)
x <- unique_genes[grep('^[0-9a-Z].*', unique_genes)]
x <- unique_genes[grep('^[0-9a-z].*', unique_genes)]
unique_genes[9287]
x <- unique_genes[grep('^[0-9a-z]', unique_genes)]
View(gene)
x <- unique_genes[grep('[0-9a-zA-Z.-_]', unique_genes)]
x <- unique_genes[grep('[^!\]', unique_genes)]
x <- unique_genes[grep('[^!\\]', unique_genes)]
View(gene)
validUTF8(unique_genes)
x <- unique_genes[validUTF8(unique_genes)]
y <- unique_genes[grep('[^!\\]', unique_genes)]
y <- x[grep('[^!\\]', x)]
y <- x[grep('[a-z0-9]', x)]
y <- x[grep('[a-z0-9-]', x)]
y <- x[grep('[a-z0-9-.]', x)]
y <- x[grep('[a-z0-9-\.]', x)]
y <- x[grep('[a-z0-9-._]', x)]
y <- x[grep('[a-zA-Z0-9]', x)]
y <- x[grep('[!]', x)]
y <- x[grep('[^!]', x)]
y <- x[grep('[A-z0-9]', x)]
y <- x[grep('[A-z0-9^!]', x)]
y <- x[grep('[A-z0-9][^!]', x)]
setdiff(x, y)
y <- x[grep('[A-z0-9]{2,}', x)]
y <- x[grep('^[A-z0-9]{2,}', x)]
setdiff(x, y)
colnames_dataset_gene <- c('dataset_id', 'gene_id')
dataset_gene <- data.frame(matrix(ncol=length(colnames_dataset_gene), nrow=0))
colnames(dataset_gene) <- colnames_dataset_gene
for(result in results){
dataset_id <- tolower(str_remove(result, 'results/'))
ds_genes <- c()
if(dataset[dataset_id, 'expr'] == 1){
tmp <- read.csv(paste0(result, '/EXPR.csv.gz'), sep=';', header=T)
expr_genes <- rownames(tmp)
expr_genes <- validUTF8(expr_genes)
expr_genes <- expr_genes[grep('^[A-z0-9]{2,}', expr_genes)]
ds_genes <- unique(c(ds_genes, expr_genes))
}
if(dataset[dataset_id, 'cna'] == 1){
tmp <- read.csv(paste0(result, '/CNA_gene.csv.gz'), sep=';', header=T)
cna_genes <- rownames(tmp)
cna_genes <- validUTF8(cna_genes)
cna_genes <- cna_genes[grep('^[A-z0-9]{2,}', cna_genes)]
ds_genes <- unique(c(ds_genes, cna_genes))
}
# if(dataset[dataset_id, 'snv'] == 1){
#   tmp <- read.csv(paste0(result, '/SNV.csv.gz'), sep=';', header=T)
#   snv_genes <- unique(tmp$Gene)
#   cleaned_snv_genes <- c()
#   for(gene in snv_genes){
#     str <- str_split(gene, ', ')
#     cleaned_snv_genes <- unique(c(cleaned_snv_genes, str[[1]]))
#   }
#   ds_genes <- unique(c(ds_genes, cleaned_snv_genes))
# }
tmp <- data.frame(matrix(ncol=length(colnames_dataset_gene), nrow=length(ds_genes)))
colnames(tmp) <- colnames_dataset_gene
tmp$dataset_id <- dataset_id
tmp$gene_id <- ds_genes
dataset_gene <- rbind(dataset_gene, tmp)
}
View(dataset)
rownames(dataset) <- dataset$dataset_id
colnames_dataset_gene <- c('dataset_id', 'gene_id')
dataset_gene <- data.frame(matrix(ncol=length(colnames_dataset_gene), nrow=0))
colnames(dataset_gene) <- colnames_dataset_gene
for(result in results){
dataset_id <- tolower(str_remove(result, 'results/'))
ds_genes <- c()
if(dataset[dataset_id, 'expr'] == 1){
tmp <- read.csv(paste0(result, '/EXPR.csv.gz'), sep=';', header=T)
expr_genes <- rownames(tmp)
expr_genes <- validUTF8(expr_genes)
expr_genes <- expr_genes[grep('^[A-z0-9]{2,}', expr_genes)]
ds_genes <- unique(c(ds_genes, expr_genes))
}
if(dataset[dataset_id, 'cna'] == 1){
tmp <- read.csv(paste0(result, '/CNA_gene.csv.gz'), sep=';', header=T)
cna_genes <- rownames(tmp)
cna_genes <- validUTF8(cna_genes)
cna_genes <- cna_genes[grep('^[A-z0-9]{2,}', cna_genes)]
ds_genes <- unique(c(ds_genes, cna_genes))
}
# if(dataset[dataset_id, 'snv'] == 1){
#   tmp <- read.csv(paste0(result, '/SNV.csv.gz'), sep=';', header=T)
#   snv_genes <- unique(tmp$Gene)
#   cleaned_snv_genes <- c()
#   for(gene in snv_genes){
#     str <- str_split(gene, ', ')
#     cleaned_snv_genes <- unique(c(cleaned_snv_genes, str[[1]]))
#   }
#   ds_genes <- unique(c(ds_genes, cleaned_snv_genes))
# }
tmp <- data.frame(matrix(ncol=length(colnames_dataset_gene), nrow=length(ds_genes)))
colnames(tmp) <- colnames_dataset_gene
tmp$dataset_id <- dataset_id
tmp$gene_id <- ds_genes
dataset_gene <- rbind(dataset_gene, tmp)
}
View(dataset_gene)
tmp <- read.csv('results/Jung/EXPR.csv.gz')
View(tmp)
tmp <- read.csv('results/Jung/EXPR.csv.gz', sep=';', header=T)
View(tmp)
colnames_dataset_gene <- c('dataset_id', 'gene_id')
dataset_gene <- data.frame(matrix(ncol=length(colnames_dataset_gene), nrow=0))
colnames(dataset_gene) <- colnames_dataset_gene
for(result in results){
dataset_id <- tolower(str_remove(result, 'results/'))
ds_genes <- c()
if(dataset[dataset_id, 'expr'] == 1){
tmp <- read.csv(paste0(result, '/EXPR.csv.gz'), sep=';', header=T)
expr_genes <- rownames(tmp)
expr_genes <- expr_genes[validUTF8(expr_genes)]
expr_genes <- expr_genes[grep('^[A-z0-9]{2,}', expr_genes)]
ds_genes <- unique(c(ds_genes, expr_genes))
}
if(dataset[dataset_id, 'cna'] == 1){
tmp <- read.csv(paste0(result, '/CNA_gene.csv.gz'), sep=';', header=T)
cna_genes <- rownames(tmp)
cna_genes <- cna_genes[validUTF8(cna_genes)]
cna_genes <- cna_genes[grep('^[A-z0-9]{2,}', cna_genes)]
ds_genes <- unique(c(ds_genes, cna_genes))
}
# if(dataset[dataset_id, 'snv'] == 1){
#   tmp <- read.csv(paste0(result, '/SNV.csv.gz'), sep=';', header=T)
#   snv_genes <- unique(tmp$Gene)
#   cleaned_snv_genes <- c()
#   for(gene in snv_genes){
#     str <- str_split(gene, ', ')
#     cleaned_snv_genes <- unique(c(cleaned_snv_genes, str[[1]]))
#   }
#   ds_genes <- unique(c(ds_genes, cleaned_snv_genes))
# }
tmp <- data.frame(matrix(ncol=length(colnames_dataset_gene), nrow=length(ds_genes)))
colnames(tmp) <- colnames_dataset_gene
tmp$dataset_id <- dataset_id
tmp$gene_id <- ds_genes
dataset_gene <- rbind(dataset_gene, tmp)
}
View(gene)
View(dataset_gene)
unique_genes <- unique(dataset_gene$gene_id)
gene <- data.frame(matrix(ncol=1, nrow=length(unique_genes)))
colnames(gene) <- c('gene_id')
gene$gene_id <- unique_genes
rownames(gene) <- gene$gene_id
View(gene)
tmp <- gene[order(rownames(gene)),]
write.csv(gene, file='csv/gene.csv', row.names=F)
write.csv(dataset_gene, 'csv/dataset_gene.csv', row.names=F)
tmp <- gene[gene$gene_id == 'C15ORF37', ]
View(gene)
tmp <- gene['C15ORF37', ]
tmp <- data.frame(gene['C15ORF37', ])
View(tmp)
tmp <- read.csv('results/Jung/SNV.csv.gz')
View(tmp)
tmp <- read.csv('results/Jung/SNV.csv.gz', sep';', header=T)
View(tmp)
tmp <- read.csv('results/Jung/SNV.csv.gz', sep=';', header=T)
View(tmp)
tmp <- read.csv('results/Liu/SNV.csv.gz', sep=';', header=T)
View(tmp)
tmp <- read.csv('results/Mariathasan/SNV.csv.gz', sep=';', header=T)
View(tmp)
tmp <- read.csv('results/Miao.1/SNV.csv.gz', sep=';', header=T)
View(tmp)
tmp <- read.csv('results/Miao.2/SNV.csv.gz', sep=';', header=T)
View(tmp)
tmp <- read.csv('results/Nathanson/SNV.csv.gz', sep=';', header=T)
View(tmp)
tmp2 <- read.csv('results/Riaz/SNV.csv.gz', sep=';', header=T)
View(tmp2)
tmp2 <- read.csv('results/Rizvi.15/SNV.csv.gz', sep=';', header=T)
View(tmp2)
tmp2 <- read.csv('results/Rizvi.18/SNV.csv.gz', sep=';', header=T)
View(tmp2)
tmp2 <- read.csv('results/Roh/SNV.csv.gz', sep=';', header=T)
View(tmp2)
tmp3 <- read.csv('results/Samstein/SNV.csv.gz', sep=';', header=T)
View(tmp3)
tmp3 <- read.csv('results/Van_Allen/SNV.csv.gz', sep=';', header=T)
View(tmp3)
tmp3 <- read.csv('results/Zhao/SNV.csv.gz', sep=';', header=T)
View(tmp3)
rm(clinical_list)
View(clinical_info)
